(undo-tree-save-format-version . 1)
"37097968bec9ce2b886b361950b0f717bae56038"
[nil nil nil nil (25746 5113 54579 631000) 0 nil]
([nil nil ((64 . 65) (43 . 64) (42 . 43) (41 . 42) (34 . 41) (#(" " 0 1 (face org-document-title font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . -34) (undo-tree-id0 . -1) 35 (34 . 35) (#("N" 0 1 (face org-document-title font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . -34) (undo-tree-id1 . -1) (#(" " 0 1 (face org-document-title font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . -35) (undo-tree-id2 . -1) 36 (31 . 36) (#("L" 0 1 (face org-document-title font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . -31) (undo-tree-id3 . -1) 32 (31 . 32) (#(";" 0 1 (face org-document-title font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . -31) (undo-tree-id4 . -1) (#(" " 0 1 (face org-document-title font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . -32) (undo-tree-id5 . -1) 33 (28 . 33) (#("t" 0 1 (face org-document-title font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . -28) (undo-tree-id6 . -1) (#("g" 0 1 (face org-document-title font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . -29) (undo-tree-id7 . -1) (#("e" 0 1 (face org-document-title font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . -30) (undo-tree-id8 . -1) (#("s" 0 1 (face org-document-title font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . -31) (undo-tree-id9 . -1) 32 (30 . 32) (9 . 30) (4 . 9) (#("T" 0 1 (face org-meta-line font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . -4) (undo-tree-id10 . -1) 5 (1 . 5) (t . -1)) nil (25746 5113 54575 222000) 0 nil])
([nil nil ((325 . 328) 327 (268 . 327) (#("- 
- Macros for using parameters inside package definitions" 0 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (face org-superstar-item composition (1 1 [8211]) fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 4 59 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . 268) (undo-tree-id18 . -59) (undo-tree-id19 . -16) (268 . 271) 324 (305 . 324) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -305) (undo-tree-id20 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -306) (undo-tree-id21 . -1) (#("f" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -307) (undo-tree-id22 . -1) 308 (305 . 308) (#("p" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -305) (undo-tree-id23 . -1) 306 (302 . 306) (281 . 302) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -281) (undo-tree-id24 . -1) 282 (281 . 282) (#("p" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -281) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 282 (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -282) (undo-tree-id27 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -283) (undo-tree-id28 . -1) 284 (270 . 284) (218 . 270) (#("- 
- Processors for boolean, non-negative parameters" 0 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (face org-superstar-item composition (1 1 [8211]) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t fontified nil) 4 52 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t fontified nil)) . 218) (undo-tree-id29 . -52) (218 . 221) (#("
  " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t fontified t) 1 3 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t fontified t)) . -267) (undo-tree-id30 . -3) 270 (267 . 270) (249 . 267) (#("g" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t fontified t)) . -249) (undo-tree-id31 . -1) 250 (239 . 250) (218 . 239) (#("-" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t fontified t)) . -218) (undo-tree-id32 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t fontified t)) . -219) (undo-tree-id33 . -1) 220 (218 . 220) (#("S" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t fontified t)) . -218) (undo-tree-id34 . -1) 219 (218 . 219) (217 . 218) (#("
" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 194) (196 . 198) (196 . 216) (194 . 196) (189 . 194) (168 . 189) (147 . 168) (#("m" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -147) (undo-tree-id35 . -1) 148 (142 . 148) (121 . 142) (117 . 121) (96 . 117) (75 . 96) (#("m" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -75) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("y" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -76) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#(" " 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -77) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("w" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -78) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("o" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -79) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("r" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -80) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("k" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -81) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#(" " 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -82) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("o" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -83) (undo-tree-id60 . -1) 84 (83 . 84) (65 . 83) (#("I" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -65) (undo-tree-id61 . -1) (#(" " 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -66) (undo-tree-id62 . -1) (#("s" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -67) (undo-tree-id63 . -1) (#("t" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -68) (undo-tree-id64 . -1) (#("a" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -69) (undo-tree-id65 . -1) (#("r" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -70) (undo-tree-id66 . -1) (#("t" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -71) (undo-tree-id67 . -1) (#("e" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -72) (undo-tree-id68 . -1) (#("d" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -73) (undo-tree-id69 . -1) (#(" " 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -74) (undo-tree-id70 . -1) (#("m" 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -75) (undo-tree-id71 . -1) 76 (65 . 76) (t 25746 5113 49423 663000)) nil (25746 55791 114455 684000) 0 nil])
([nil nil ((#("- 
" 0 1 (face org-superstar-item composition (1 1 [8211]) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 3 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 325) (undo-tree-id2 . -1) (undo-tree-id3 . 1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -3) (undo-tree-id17 . -2) 326) nil (25746 55791 114426 740000) 0 nil])
([nil nil ((347 . 349) (327 . 347) (#("S" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -327) (undo-tree-id0 . -1) 328 (327 . 328) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -327) (undo-tree-id1 . -1) 328 (327 . 328)) nil (25746 55791 114419 236000) 0 nil])
([nil nil ((349 . 350) 348) nil (25746 55791 114394 519000) 0 nil])
([nil nil ((#("- Records for parameters
" 0 1 (face org-superstar-item composition (1 1 [8211]) fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 1 24 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 24 25 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 325) (undo-tree-id72 . -23) (undo-tree-id73 . -24) (undo-tree-id74 . -2) (undo-tree-id75 . -23) (undo-tree-id76 . -23) (undo-tree-id77 . -25) (undo-tree-id78 . -25) (undo-tree-id79 . -25) (undo-tree-id80 . -25) (undo-tree-id81 . -25) (undo-tree-id82 . -25) (undo-tree-id83 . -23) (undo-tree-id84 . -23) (undo-tree-id85 . -23) (undo-tree-id86 . -23) (undo-tree-id87 . -23) (undo-tree-id88 . -23) (undo-tree-id89 . -23) (undo-tree-id90 . -23) (undo-tree-id91 . -23) (undo-tree-id92 . -23) (undo-tree-id93 . -23) (undo-tree-id94 . -23) (undo-tree-id95 . -23) (undo-tree-id96 . -23) (undo-tree-id97 . -23) (undo-tree-id98 . -23) (undo-tree-id99 . -23) (undo-tree-id100 . -23) (undo-tree-id101 . -23) (undo-tree-id102 . -23) (undo-tree-id103 . -23) (undo-tree-id104 . -23) (undo-tree-id105 . -23) (undo-tree-id106 . -23) (undo-tree-id107 . -23) (undo-tree-id108 . -23) (undo-tree-id109 . -23) (undo-tree-id110 . -23) (undo-tree-id111 . -23) (undo-tree-id112 . -23) (undo-tree-id113 . -23) (undo-tree-id114 . -25) (undo-tree-id115 . -25) (undo-tree-id116 . -23) (undo-tree-id117 . -23) (undo-tree-id118 . -23) (undo-tree-id119 . -23) (undo-tree-id120 . -23) (undo-tree-id121 . -23) (undo-tree-id122 . -23) (undo-tree-id123 . -23) (undo-tree-id124 . -23) (undo-tree-id125 . -23) (undo-tree-id126 . -23) (undo-tree-id127 . -23) (undo-tree-id128 . -23) (undo-tree-id129 . -23) (undo-tree-id130 . -23) (undo-tree-id131 . -23) (undo-tree-id132 . -23) (undo-tree-id133 . -23) (undo-tree-id134 . -23) (undo-tree-id135 . -23) (undo-tree-id136 . -23) (undo-tree-id137 . -23) (undo-tree-id138 . -23) (undo-tree-id139 . -23) (undo-tree-id140 . -23) (undo-tree-id141 . -23) (undo-tree-id142 . -23) (undo-tree-id143 . -23) (undo-tree-id144 . -23) (undo-tree-id145 . -23) (undo-tree-id146 . -23) (undo-tree-id147 . -23) (undo-tree-id148 . -23) (undo-tree-id149 . -23) (undo-tree-id150 . -23) (undo-tree-id151 . -23) (undo-tree-id152 . -23) (undo-tree-id153 . -23) (undo-tree-id154 . -23) (undo-tree-id155 . -23) (undo-tree-id156 . -23) (undo-tree-id157 . -23) (undo-tree-id158 . -23) (undo-tree-id159 . -23) (undo-tree-id160 . -23) (undo-tree-id161 . -23) (undo-tree-id162 . -23) (undo-tree-id163 . -23) (undo-tree-id164 . -23) (undo-tree-id165 . -23) (undo-tree-id166 . -23) (undo-tree-id167 . -23) (undo-tree-id168 . -23) (undo-tree-id169 . -23) (undo-tree-id170 . -23) (undo-tree-id171 . -23) (undo-tree-id172 . -23) (undo-tree-id173 . -23) (undo-tree-id174 . -23) (undo-tree-id175 . -23) (undo-tree-id176 . -23) (undo-tree-id177 . -23) (undo-tree-id178 . -23) (undo-tree-id179 . -23) (undo-tree-id180 . -23) (undo-tree-id181 . -23) (undo-tree-id182 . -23) (undo-tree-id183 . -23) (undo-tree-id184 . -23) (undo-tree-id185 . -23) (undo-tree-id186 . -23) (undo-tree-id187 . -23) (undo-tree-id188 . -23) (undo-tree-id189 . -23) (undo-tree-id190 . -23) (undo-tree-id191 . -23) (undo-tree-id192 . -23) (undo-tree-id193 . -23) (undo-tree-id194 . -23) (undo-tree-id195 . -23) (undo-tree-id196 . -23) (undo-tree-id197 . -23) (undo-tree-id198 . -23) (undo-tree-id199 . -23) (undo-tree-id200 . -23) (undo-tree-id201 . -23) (undo-tree-id202 . -23) (undo-tree-id203 . -23) (undo-tree-id204 . -23) (undo-tree-id205 . -25) (undo-tree-id206 . -25) (undo-tree-id207 . -23) (undo-tree-id208 . -25) (undo-tree-id209 . -23) (undo-tree-id210 . -23) (undo-tree-id211 . -23) (undo-tree-id212 . -23) (undo-tree-id213 . -23) (undo-tree-id214 . -23) (undo-tree-id215 . -23) (undo-tree-id216 . -23) (undo-tree-id217 . -23) (undo-tree-id218 . -23) (undo-tree-id219 . -23) (undo-tree-id220 . -23) (undo-tree-id221 . -23) (undo-tree-id222 . -23) (undo-tree-id223 . -23) (undo-tree-id224 . -23) (undo-tree-id225 . -23) (undo-tree-id226 . -23) (undo-tree-id227 . -23) (undo-tree-id228 . -23) (undo-tree-id229 . -23) (undo-tree-id230 . -23) (undo-tree-id231 . -23) (undo-tree-id232 . -23) (undo-tree-id233 . -23) (undo-tree-id234 . -23) (undo-tree-id235 . -23) (undo-tree-id236 . -23) (undo-tree-id237 . -23) (undo-tree-id238 . -23) (undo-tree-id239 . -23) (undo-tree-id240 . -23) (undo-tree-id241 . -23) (undo-tree-id242 . -23) (undo-tree-id243 . -23) (undo-tree-id244 . -23) (undo-tree-id245 . -23) (undo-tree-id246 . -23) (undo-tree-id247 . -23) (undo-tree-id248 . -23) (undo-tree-id249 . -23) (undo-tree-id250 . -23) (undo-tree-id251 . -23) (undo-tree-id252 . -23) (undo-tree-id253 . -23) (undo-tree-id254 . -23) (undo-tree-id255 . -23) (undo-tree-id256 . -23) (undo-tree-id257 . -23) (undo-tree-id258 . -23) (undo-tree-id259 . -23) (undo-tree-id260 . -23) (undo-tree-id261 . -23) (undo-tree-id262 . -23) (undo-tree-id263 . -23) (undo-tree-id264 . -23) (undo-tree-id265 . -23) (undo-tree-id266 . -23) (undo-tree-id267 . -23) (undo-tree-id268 . -23) (undo-tree-id269 . -23) (undo-tree-id270 . -23) (undo-tree-id271 . -23) (undo-tree-id272 . -23) (undo-tree-id273 . -23) (undo-tree-id274 . -23) (undo-tree-id275 . -23) (undo-tree-id276 . -23) (undo-tree-id277 . -23) (undo-tree-id278 . -23) (undo-tree-id279 . -23) (undo-tree-id280 . -23) (undo-tree-id281 . -23) (undo-tree-id282 . -23) (undo-tree-id283 . -23) (undo-tree-id284 . -23) (undo-tree-id285 . -23) (undo-tree-id286 . -23) (undo-tree-id287 . -23) (undo-tree-id288 . -23) (undo-tree-id289 . -23) (undo-tree-id290 . -23) (undo-tree-id291 . -23) (undo-tree-id292 . -23) (undo-tree-id293 . -23) (undo-tree-id294 . -23) (undo-tree-id295 . -23) (undo-tree-id296 . -23) (undo-tree-id297 . -23) (undo-tree-id298 . -23) (undo-tree-id299 . -23) (undo-tree-id300 . -23) (undo-tree-id301 . -23) (undo-tree-id302 . -23) (undo-tree-id303 . -23) (undo-tree-id304 . -23) (undo-tree-id305 . -23) (undo-tree-id306 . -23) (undo-tree-id307 . -23) (undo-tree-id308 . -23) (undo-tree-id309 . -23) (undo-tree-id310 . -23) (undo-tree-id311 . -23) (undo-tree-id312 . -23) (undo-tree-id313 . -23) (undo-tree-id314 . -23) (undo-tree-id315 . -23) (undo-tree-id316 . -23) (undo-tree-id317 . -23) (undo-tree-id318 . -23) (undo-tree-id319 . -23) (undo-tree-id320 . -23) (undo-tree-id321 . -23) (undo-tree-id322 . -23) (undo-tree-id323 . -23) (undo-tree-id324 . -23) (undo-tree-id325 . -23) (undo-tree-id326 . -23) (undo-tree-id327 . -23) (undo-tree-id328 . -23) (undo-tree-id329 . -23) (undo-tree-id330 . -23) (undo-tree-id331 . -23) (undo-tree-id332 . -23) (undo-tree-id333 . -23) (undo-tree-id334 . -23) (undo-tree-id335 . -23) (undo-tree-id336 . -23) (undo-tree-id337 . -23) (undo-tree-id338 . -23) (undo-tree-id339 . -23) (undo-tree-id340 . -23) (undo-tree-id341 . -23) (undo-tree-id342 . -23) (undo-tree-id343 . -23) (undo-tree-id344 . -23) (undo-tree-id345 . -23) (undo-tree-id346 . -23) (undo-tree-id347 . -23) (undo-tree-id348 . -23) (undo-tree-id349 . -23) (undo-tree-id350 . -23) (undo-tree-id351 . -23) (undo-tree-id352 . -23) (undo-tree-id353 . -23) (undo-tree-id354 . -23) (undo-tree-id355 . -23) (undo-tree-id356 . -23) (undo-tree-id357 . -23) (undo-tree-id358 . -23) (undo-tree-id359 . -23) (undo-tree-id360 . -23) (undo-tree-id361 . -23) (undo-tree-id362 . -23) (undo-tree-id363 . -23) (undo-tree-id364 . -23) (undo-tree-id365 . -23) (undo-tree-id366 . -23) (undo-tree-id367 . -23) (undo-tree-id368 . -23) (undo-tree-id369 . -23) (undo-tree-id370 . -23) (undo-tree-id371 . -23) (undo-tree-id372 . -23) (undo-tree-id373 . -23) (undo-tree-id374 . -23) (undo-tree-id375 . -23) (undo-tree-id376 . -23) (undo-tree-id377 . -23) (undo-tree-id378 . -23) (undo-tree-id379 . -23) (undo-tree-id380 . -23) (undo-tree-id381 . -23) (undo-tree-id382 . -23) (undo-tree-id383 . -23) (undo-tree-id384 . -23) (undo-tree-id385 . -23) (undo-tree-id386 . -23) (undo-tree-id387 . -23) (undo-tree-id388 . -23) (undo-tree-id389 . -23) (undo-tree-id390 . -23) (undo-tree-id391 . -23) (undo-tree-id392 . -23) (undo-tree-id393 . -23) (undo-tree-id394 . -23) (undo-tree-id395 . -23) (undo-tree-id396 . -23) (undo-tree-id397 . -23) (undo-tree-id398 . -23) (undo-tree-id399 . -23) (undo-tree-id400 . -23) (undo-tree-id401 . -23) (undo-tree-id402 . -23) (undo-tree-id403 . -23) (undo-tree-id404 . -23) (undo-tree-id405 . -23) (undo-tree-id406 . -23) (undo-tree-id407 . -23) (undo-tree-id408 . -23) (undo-tree-id409 . -23) (undo-tree-id410 . -23) (undo-tree-id411 . -23) (undo-tree-id412 . -23) (undo-tree-id413 . -23) (undo-tree-id414 . -23) (undo-tree-id415 . -23) (undo-tree-id416 . -23) (undo-tree-id417 . -23) (undo-tree-id418 . -23) (undo-tree-id419 . -23) (undo-tree-id420 . -23) (undo-tree-id421 . -23) (undo-tree-id422 . -23) (undo-tree-id423 . -23) (undo-tree-id424 . -23) (undo-tree-id425 . -23) (undo-tree-id426 . -23) (undo-tree-id427 . -23) (undo-tree-id428 . -23) (undo-tree-id429 . -23) (undo-tree-id430 . -23) (undo-tree-id431 . -23) (undo-tree-id432 . -23) (undo-tree-id433 . -23) (undo-tree-id434 . -23) (undo-tree-id435 . -23) (undo-tree-id436 . -23) (undo-tree-id437 . -23) (undo-tree-id438 . -23) (undo-tree-id439 . -23) (undo-tree-id440 . -23) (undo-tree-id441 . -23) (undo-tree-id442 . -23) (undo-tree-id443 . -23) (undo-tree-id444 . -23) (undo-tree-id445 . -23) (undo-tree-id446 . -23) (undo-tree-id447 . -23) (undo-tree-id448 . -23) (undo-tree-id449 . -23) (undo-tree-id450 . -23) (undo-tree-id451 . -23) (undo-tree-id452 . -23) (undo-tree-id453 . -23) (undo-tree-id454 . -23) (undo-tree-id455 . -23) (undo-tree-id456 . -23) (undo-tree-id457 . -23) (undo-tree-id458 . -23) (undo-tree-id459 . -23) (undo-tree-id460 . -23) (undo-tree-id461 . -23) (undo-tree-id462 . -23) (undo-tree-id463 . -23) (undo-tree-id464 . -23) (undo-tree-id465 . -23) (undo-tree-id466 . -23) (undo-tree-id467 . -23) (undo-tree-id468 . -23) (undo-tree-id469 . -23) (undo-tree-id470 . -23) (undo-tree-id471 . -23) (undo-tree-id472 . -23) (undo-tree-id473 . -23) (undo-tree-id474 . -23) (undo-tree-id475 . -23) (undo-tree-id476 . -23) (undo-tree-id477 . -23) (undo-tree-id478 . -23) (undo-tree-id479 . -23) (undo-tree-id480 . -23) (undo-tree-id481 . -23) (undo-tree-id482 . -23) (undo-tree-id483 . -23) (undo-tree-id484 . -23) (undo-tree-id485 . -23) (undo-tree-id486 . -23) (undo-tree-id487 . -23) (undo-tree-id488 . -23) (undo-tree-id489 . -23) (undo-tree-id490 . -23) (undo-tree-id491 . -23) (undo-tree-id492 . -23) (undo-tree-id493 . -23) (undo-tree-id494 . -23) (undo-tree-id495 . -23) (undo-tree-id496 . -23) (undo-tree-id497 . -23) (undo-tree-id498 . -23) (undo-tree-id499 . -23) (undo-tree-id500 . -23) (undo-tree-id501 . -23) (undo-tree-id502 . -23) (undo-tree-id503 . -23) (undo-tree-id504 . -23) (undo-tree-id505 . -23) (undo-tree-id506 . -23) (undo-tree-id507 . -23) (undo-tree-id508 . -23) (undo-tree-id509 . -23) (undo-tree-id510 . -23) (undo-tree-id511 . -23) (undo-tree-id512 . -23) (undo-tree-id513 . -23) (undo-tree-id514 . -23) (undo-tree-id515 . -23) (undo-tree-id516 . -23) (undo-tree-id517 . -23) (undo-tree-id518 . -23) (undo-tree-id519 . -23) (undo-tree-id520 . -23) (undo-tree-id521 . -23) (undo-tree-id522 . -23) (undo-tree-id523 . -23) (undo-tree-id524 . -23) (undo-tree-id525 . -23) (undo-tree-id526 . -23) (undo-tree-id527 . -23) (undo-tree-id528 . -23) (undo-tree-id529 . -23) (undo-tree-id530 . -23) (undo-tree-id531 . -23) (undo-tree-id532 . -23) (undo-tree-id533 . -23) (undo-tree-id534 . -23) (undo-tree-id535 . -23) (undo-tree-id536 . -23) (undo-tree-id537 . -23) (undo-tree-id538 . -23) (undo-tree-id539 . -23) (undo-tree-id540 . -23) (undo-tree-id541 . -23) (undo-tree-id542 . -23) (undo-tree-id543 . -23) (undo-tree-id544 . -23) (undo-tree-id545 . -23) (undo-tree-id546 . -23) (undo-tree-id547 . -23) (undo-tree-id548 . -23) (undo-tree-id549 . -23) (undo-tree-id550 . -23) (undo-tree-id551 . -23) (undo-tree-id552 . -23) (undo-tree-id553 . -23) (undo-tree-id554 . -23) (undo-tree-id555 . -23) (undo-tree-id556 . -23) (undo-tree-id557 . -23) (undo-tree-id558 . -23) (undo-tree-id559 . -23) (undo-tree-id560 . -23) (undo-tree-id561 . -23) (undo-tree-id562 . -23) (undo-tree-id563 . -23) (undo-tree-id564 . -23) (undo-tree-id565 . -23) (undo-tree-id566 . -23) (undo-tree-id567 . -23) (undo-tree-id568 . -23) (undo-tree-id569 . -23) (undo-tree-id570 . -23) (undo-tree-id571 . -23) (undo-tree-id572 . -23) (undo-tree-id573 . -23) (undo-tree-id574 . -23) (undo-tree-id575 . -23) (undo-tree-id576 . -23) (undo-tree-id577 . -25) (undo-tree-id578 . -25) 348 (t 25746 55791 116238 296000)) nil (25746 55811 166808 26000) 0 nil])
([nil nil ((nil rear-nonsticky nil 217 . 218) (#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -242) (217 . 243) 195) nil (25746 55811 166469 969000) 0 nil])
([nil nil ((293 . 352) (#("- 
- Macros for using parameters inside package definitions" 0 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (face org-superstar-item composition (1 1 [8211]) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 59 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 293) (undo-tree-id2400 . -3) (293 . 296) 350 (t 25746 55811 169742 206000)) nil (25746 55821 20183 445000) 0 nil])
([nil nil ((#("- 
" 0 1 (face org-superstar-item composition (1 1 [8211]) fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 1 2 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 2 3 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . 350) (undo-tree-id1610 . -1) (undo-tree-id1611 . 1) (undo-tree-id1612 . -2) (undo-tree-id1613 . -3) (undo-tree-id1614 . -3) (undo-tree-id1615 . -3) (undo-tree-id1616 . -3) (undo-tree-id1617 . -3) (undo-tree-id1618 . -3) (undo-tree-id1619 . -3) (undo-tree-id1620 . -3) (undo-tree-id1621 . -3) (undo-tree-id1622 . -3) (undo-tree-id1623 . -3) (undo-tree-id1624 . -3) (undo-tree-id1625 . -3) (undo-tree-id1626 . -3) (undo-tree-id1627 . -3) (undo-tree-id1628 . -3) (undo-tree-id1629 . -3) (undo-tree-id1630 . -3) (undo-tree-id1631 . -3) (undo-tree-id1632 . -3) (undo-tree-id1633 . -3) (undo-tree-id1634 . -3) (undo-tree-id1635 . -3) (undo-tree-id1636 . -3) (undo-tree-id1637 . -3) (undo-tree-id1638 . -3) (undo-tree-id1639 . -3) (undo-tree-id1640 . -3) (undo-tree-id1641 . -3) (undo-tree-id1642 . -3) (undo-tree-id1643 . -3) (undo-tree-id1644 . -3) (undo-tree-id1645 . -3) (undo-tree-id1646 . -3) (undo-tree-id1647 . -3) (undo-tree-id1648 . -3) (undo-tree-id1649 . -3) (undo-tree-id1650 . -3) (undo-tree-id1651 . -3) (undo-tree-id1652 . -3) (undo-tree-id1653 . -3) (undo-tree-id1654 . -3) (undo-tree-id1655 . -3) (undo-tree-id1656 . -3) (undo-tree-id1657 . -3) (undo-tree-id1658 . -3) (undo-tree-id1659 . -3) (undo-tree-id1660 . -3) (undo-tree-id1661 . -3) (undo-tree-id1662 . -3) (undo-tree-id1663 . -3) (undo-tree-id1664 . -3) (undo-tree-id1665 . -3) (undo-tree-id1666 . -3) (undo-tree-id1667 . -3) (undo-tree-id1668 . -3) (undo-tree-id1669 . -3) (undo-tree-id1670 . -3) (undo-tree-id1671 . -3) (undo-tree-id1672 . -3) (undo-tree-id1673 . -3) (undo-tree-id1674 . -3) (undo-tree-id1675 . -3) (undo-tree-id1676 . -3) (undo-tree-id1677 . -3) (undo-tree-id1678 . -3) (undo-tree-id1679 . -3) (undo-tree-id1680 . -3) (undo-tree-id1681 . -3) (undo-tree-id1682 . -3) (undo-tree-id1683 . -3) (undo-tree-id1684 . -3) (undo-tree-id1685 . -3) (undo-tree-id1686 . -3) (undo-tree-id1687 . -3) (undo-tree-id1688 . -3) (undo-tree-id1689 . -3) (undo-tree-id1690 . -3) (undo-tree-id1691 . -3) (undo-tree-id1692 . -3) (undo-tree-id1693 . -3) (undo-tree-id1694 . -3) (undo-tree-id1695 . -3) (undo-tree-id1696 . -3) (undo-tree-id1697 . -3) (undo-tree-id1698 . -3) (undo-tree-id1699 . -3) (undo-tree-id1700 . -3) (undo-tree-id1701 . -3) (undo-tree-id1702 . -3) (undo-tree-id1703 . -3) (undo-tree-id1704 . -3) (undo-tree-id1705 . -3) (undo-tree-id1706 . -3) (undo-tree-id1707 . -3) (undo-tree-id1708 . -3) (undo-tree-id1709 . -3) (undo-tree-id1710 . -3) (undo-tree-id1711 . -3) (undo-tree-id1712 . -3) (undo-tree-id1713 . -3) (undo-tree-id1714 . -3) (undo-tree-id1715 . -3) (undo-tree-id1716 . -3) (undo-tree-id1717 . -3) (undo-tree-id1718 . -3) (undo-tree-id1719 . -3) (undo-tree-id1720 . -3) (undo-tree-id1721 . -3) (undo-tree-id1722 . -3) (undo-tree-id1723 . -3) (undo-tree-id1724 . -3) (undo-tree-id1725 . -3) (undo-tree-id1726 . -3) (undo-tree-id1727 . -3) (undo-tree-id1728 . -3) (undo-tree-id1729 . -3) (undo-tree-id1730 . -3) (undo-tree-id1731 . -3) (undo-tree-id1732 . -3) (undo-tree-id1733 . -3) (undo-tree-id1734 . -3) (undo-tree-id1735 . -3) (undo-tree-id1736 . -3) (undo-tree-id1737 . -3) (undo-tree-id1738 . -3) (undo-tree-id1739 . -3) (undo-tree-id1740 . -3) (undo-tree-id1741 . -3) (undo-tree-id1742 . -3) (undo-tree-id1743 . -3) (undo-tree-id1744 . -3) (undo-tree-id1745 . -3) (undo-tree-id1746 . -3) (undo-tree-id1747 . -3) (undo-tree-id1748 . -3) (undo-tree-id1749 . -3) (undo-tree-id1750 . -3) (undo-tree-id1751 . -3) (undo-tree-id1752 . -3) (undo-tree-id1753 . -3) (undo-tree-id1754 . -3) (undo-tree-id1755 . -3) (undo-tree-id1756 . -3) (undo-tree-id1757 . -3) (undo-tree-id1758 . -3) (undo-tree-id1759 . -3) (undo-tree-id1760 . -3) (undo-tree-id1761 . -3) (undo-tree-id1762 . -3) (undo-tree-id1763 . -3) (undo-tree-id1764 . -3) (undo-tree-id1765 . -3) (undo-tree-id1766 . -3) (undo-tree-id1767 . -3) (undo-tree-id1768 . -3) (undo-tree-id1769 . -3) (undo-tree-id1770 . -3) (undo-tree-id1771 . -3) (undo-tree-id1772 . -3) (undo-tree-id1773 . -3) (undo-tree-id1774 . -3) (undo-tree-id1775 . -3) (undo-tree-id1776 . -3) (undo-tree-id1777 . -3) (undo-tree-id1778 . -3) (undo-tree-id1779 . -3) (undo-tree-id1780 . -3) (undo-tree-id1781 . -3) (undo-tree-id1782 . -3) (undo-tree-id1783 . -3) (undo-tree-id1784 . -3) (undo-tree-id1785 . -3) (undo-tree-id1786 . -3) (undo-tree-id1787 . -3) (undo-tree-id1788 . -3) (undo-tree-id1789 . -3) (undo-tree-id1790 . -3) (undo-tree-id1791 . -3) (undo-tree-id1792 . -3) (undo-tree-id1793 . -3) (undo-tree-id1794 . -3) (undo-tree-id1795 . -3) (undo-tree-id1796 . -3) (undo-tree-id1797 . -3) (undo-tree-id1798 . -3) (undo-tree-id1799 . -3) (undo-tree-id1800 . -3) (undo-tree-id1801 . -3) (undo-tree-id1802 . -3) (undo-tree-id1803 . -3) (undo-tree-id1804 . -3) (undo-tree-id1805 . -3) (undo-tree-id1806 . -3) (undo-tree-id1807 . -3) (undo-tree-id1808 . -3) (undo-tree-id1809 . -3) (undo-tree-id1810 . -3) (undo-tree-id1811 . -3) (undo-tree-id1812 . -3) (undo-tree-id1813 . -3) (undo-tree-id1814 . -3) (undo-tree-id1815 . -3) (undo-tree-id1816 . -3) (undo-tree-id1817 . -3) (undo-tree-id1818 . -3) (undo-tree-id1819 . -3) (undo-tree-id1820 . -3) (undo-tree-id1821 . -3) (undo-tree-id1822 . -3) (undo-tree-id1823 . -3) (undo-tree-id1824 . -3) (undo-tree-id1825 . -3) (undo-tree-id1826 . -3) (undo-tree-id1827 . -3) (undo-tree-id1828 . -3) (undo-tree-id1829 . -3) (undo-tree-id1830 . -3) (undo-tree-id1831 . -3) (undo-tree-id1832 . -3) (undo-tree-id1833 . -3) (undo-tree-id1834 . -3) (undo-tree-id1835 . -3) (undo-tree-id1836 . -3) (undo-tree-id1837 . -3) (undo-tree-id1838 . -3) (undo-tree-id1839 . -3) (undo-tree-id1840 . -3) (undo-tree-id1841 . -3) (undo-tree-id1842 . -3) (undo-tree-id1843 . -3) (undo-tree-id1844 . -3) (undo-tree-id1845 . -3) (undo-tree-id1846 . -3) (undo-tree-id1847 . -3) (undo-tree-id1848 . -3) (undo-tree-id1849 . -3) (undo-tree-id1850 . -3) (undo-tree-id1851 . -3) (undo-tree-id1852 . -3) (undo-tree-id1853 . -3) (undo-tree-id1854 . -3) (undo-tree-id1855 . -3) (undo-tree-id1856 . -3) (undo-tree-id1857 . -3) (undo-tree-id1858 . -3) (undo-tree-id1859 . -3) (undo-tree-id1860 . -3) (undo-tree-id1861 . -3) (undo-tree-id1862 . -3) (undo-tree-id1863 . -3) (undo-tree-id1864 . -3) (undo-tree-id1865 . -3) (undo-tree-id1866 . -3) (undo-tree-id1867 . -3) (undo-tree-id1868 . -3) (undo-tree-id1869 . -3) (undo-tree-id1870 . -3) (undo-tree-id1871 . -3) (undo-tree-id1872 . -3) (undo-tree-id1873 . -3) (undo-tree-id1874 . -3) (undo-tree-id1875 . -3) (undo-tree-id1876 . -3) (undo-tree-id1877 . -3) (undo-tree-id1878 . -3) (undo-tree-id1879 . -3) (undo-tree-id1880 . -3) (undo-tree-id1881 . -3) (undo-tree-id1882 . -3) (undo-tree-id1883 . -3) (undo-tree-id1884 . -3) (undo-tree-id1885 . -3) (undo-tree-id1886 . -3) (undo-tree-id1887 . -3) (undo-tree-id1888 . -3) (undo-tree-id1889 . -3) (undo-tree-id1890 . -3) (undo-tree-id1891 . -3) (undo-tree-id1892 . -3) (undo-tree-id1893 . -3) (undo-tree-id1894 . -3) (undo-tree-id1895 . -3) (undo-tree-id1896 . -3) (undo-tree-id1897 . -3) (undo-tree-id1898 . -3) (undo-tree-id1899 . -3) (undo-tree-id1900 . -3) (undo-tree-id1901 . -3) (undo-tree-id1902 . -3) (undo-tree-id1903 . -3) (undo-tree-id1904 . -3) (undo-tree-id1905 . -3) (undo-tree-id1906 . -3) (undo-tree-id1907 . -3) (undo-tree-id1908 . -3) (undo-tree-id1909 . -3) (undo-tree-id1910 . -3) (undo-tree-id1911 . -3) (undo-tree-id1912 . -3) (undo-tree-id1913 . -3) (undo-tree-id1914 . -3) (undo-tree-id1915 . -3) (undo-tree-id1916 . -3) (undo-tree-id1917 . -3) (undo-tree-id1918 . -3) (undo-tree-id1919 . -3) (undo-tree-id1920 . -3) (undo-tree-id1921 . -3) (undo-tree-id1922 . -3) (undo-tree-id1923 . -3) (undo-tree-id1924 . -3) (undo-tree-id1925 . -3) (undo-tree-id1926 . -3) (undo-tree-id1927 . -3) (undo-tree-id1928 . -3) (undo-tree-id1929 . -3) (undo-tree-id1930 . -3) (undo-tree-id1931 . -3) (undo-tree-id1932 . -3) (undo-tree-id1933 . -3) (undo-tree-id1934 . -3) (undo-tree-id1935 . -3) (undo-tree-id1936 . -3) (undo-tree-id1937 . -3) (undo-tree-id1938 . -3) (undo-tree-id1939 . -3) (undo-tree-id1940 . -3) (undo-tree-id1941 . -3) (undo-tree-id1942 . -3) (undo-tree-id1943 . -3) (undo-tree-id1944 . -3) (undo-tree-id1945 . -3) (undo-tree-id1946 . -3) (undo-tree-id1947 . -3) (undo-tree-id1948 . -3) (undo-tree-id1949 . -3) (undo-tree-id1950 . -3) (undo-tree-id1951 . -3) (undo-tree-id1952 . -3) (undo-tree-id1953 . -3) (undo-tree-id1954 . -3) (undo-tree-id1955 . -3) (undo-tree-id1956 . -3) (undo-tree-id1957 . -3) (undo-tree-id1958 . -3) (undo-tree-id1959 . -3) (undo-tree-id1960 . -3) (undo-tree-id1961 . -3) (undo-tree-id1962 . -3) (undo-tree-id1963 . -3) (undo-tree-id1964 . -3) (undo-tree-id1965 . -3) (undo-tree-id1966 . -3) (undo-tree-id1967 . -3) (undo-tree-id1968 . -3) (undo-tree-id1969 . -3) (undo-tree-id1970 . -3) (undo-tree-id1971 . -3) (undo-tree-id1972 . -3) (undo-tree-id1973 . -3) (undo-tree-id1974 . -3) (undo-tree-id1975 . -3) (undo-tree-id1976 . -3) (undo-tree-id1977 . -3) (undo-tree-id1978 . -3) (undo-tree-id1979 . -3) (undo-tree-id1980 . -3) (undo-tree-id1981 . -3) (undo-tree-id1982 . -3) (undo-tree-id1983 . -3) (undo-tree-id1984 . -3) (undo-tree-id1985 . -3) (undo-tree-id1986 . -3) (undo-tree-id1987 . -3) (undo-tree-id1988 . -3) (undo-tree-id1989 . -3) (undo-tree-id1990 . -3) (undo-tree-id1991 . -3) (undo-tree-id1992 . -3) (undo-tree-id1993 . -3) (undo-tree-id1994 . -3) (undo-tree-id1995 . -3) (undo-tree-id1996 . -3) (undo-tree-id1997 . -3) (undo-tree-id1998 . -3) (undo-tree-id1999 . -3) (undo-tree-id2000 . -3) (undo-tree-id2001 . -3) (undo-tree-id2002 . -3) (undo-tree-id2003 . -3) (undo-tree-id2004 . -3) (undo-tree-id2005 . -3) (undo-tree-id2006 . -3) (undo-tree-id2007 . -3) (undo-tree-id2008 . -3) (undo-tree-id2009 . -3) (undo-tree-id2010 . -3) (undo-tree-id2011 . -3) (undo-tree-id2012 . -3) (undo-tree-id2013 . -3) (undo-tree-id2014 . -3) (undo-tree-id2015 . -3) (undo-tree-id2016 . -3) (undo-tree-id2017 . -3) (undo-tree-id2018 . -3) (undo-tree-id2019 . -3) (undo-tree-id2020 . -3) (undo-tree-id2021 . -3) (undo-tree-id2022 . -3) (undo-tree-id2023 . -3) (undo-tree-id2024 . -3) (undo-tree-id2025 . -3) (undo-tree-id2026 . -3) (undo-tree-id2027 . -3) (undo-tree-id2028 . -3) (undo-tree-id2029 . -3) (undo-tree-id2030 . -3) (undo-tree-id2031 . -3) (undo-tree-id2032 . -3) (undo-tree-id2033 . -3) (undo-tree-id2034 . -3) (undo-tree-id2035 . -3) (undo-tree-id2036 . -3) (undo-tree-id2037 . -3) (undo-tree-id2038 . -3) (undo-tree-id2039 . -3) (undo-tree-id2040 . -3) (undo-tree-id2041 . -3) (undo-tree-id2042 . -3) (undo-tree-id2043 . -3) (undo-tree-id2044 . -3) (undo-tree-id2045 . -3) (undo-tree-id2046 . -3) (undo-tree-id2047 . -3) (undo-tree-id2048 . -3) (undo-tree-id2049 . -3) (undo-tree-id2050 . -3) (undo-tree-id2051 . -3) (undo-tree-id2052 . -3) (undo-tree-id2053 . -3) (undo-tree-id2054 . -3) (undo-tree-id2055 . -3) (undo-tree-id2056 . -3) (undo-tree-id2057 . -3) (undo-tree-id2058 . -3) (undo-tree-id2059 . -3) (undo-tree-id2060 . -3) (undo-tree-id2061 . -3) (undo-tree-id2062 . -3) (undo-tree-id2063 . -3) (undo-tree-id2064 . -3) (undo-tree-id2065 . -3) (undo-tree-id2066 . -3) (undo-tree-id2067 . -3) (undo-tree-id2068 . -3) (undo-tree-id2069 . -3) (undo-tree-id2070 . -3) (undo-tree-id2071 . -3) (undo-tree-id2072 . -3) (undo-tree-id2073 . -3) (undo-tree-id2074 . -3) (undo-tree-id2075 . -3) (undo-tree-id2076 . -3) (undo-tree-id2077 . -3) (undo-tree-id2078 . -3) (undo-tree-id2079 . -3) (undo-tree-id2080 . -3) (undo-tree-id2081 . -3) (undo-tree-id2082 . -3) (undo-tree-id2083 . -3) (undo-tree-id2084 . -3) (undo-tree-id2085 . -3) (undo-tree-id2086 . -3) (undo-tree-id2087 . -3) (undo-tree-id2088 . -3) (undo-tree-id2089 . -3) (undo-tree-id2090 . -3) (undo-tree-id2091 . -3) (undo-tree-id2092 . -3) (undo-tree-id2093 . -3) (undo-tree-id2094 . -3) (undo-tree-id2095 . -3) (undo-tree-id2096 . -3) (undo-tree-id2097 . -3) (undo-tree-id2098 . -3) (undo-tree-id2099 . -3) (undo-tree-id2100 . -3) (undo-tree-id2101 . -3) (undo-tree-id2102 . -3) (undo-tree-id2103 . -3) (undo-tree-id2104 . -3) (undo-tree-id2105 . -3) (undo-tree-id2106 . -3) (undo-tree-id2107 . -3) (undo-tree-id2108 . -3) (undo-tree-id2109 . -3) (undo-tree-id2110 . -3) (undo-tree-id2111 . -3) (undo-tree-id2112 . -3) (undo-tree-id2113 . -3) (undo-tree-id2114 . -3) (undo-tree-id2115 . -3) (undo-tree-id2116 . -3) (undo-tree-id2117 . -3) (undo-tree-id2118 . -3) (undo-tree-id2119 . -3) (undo-tree-id2120 . -3) (undo-tree-id2121 . -3) (undo-tree-id2122 . -3) (undo-tree-id2123 . -3) (undo-tree-id2124 . -3) (undo-tree-id2125 . -3) (undo-tree-id2126 . -3) (undo-tree-id2127 . -3) (undo-tree-id2128 . -3) (undo-tree-id2129 . -3) (undo-tree-id2130 . -3) (undo-tree-id2131 . -3) (undo-tree-id2132 . -3) (undo-tree-id2133 . -3) (undo-tree-id2134 . -3) (undo-tree-id2135 . -3) (undo-tree-id2136 . -3) (undo-tree-id2137 . -3) (undo-tree-id2138 . -3) (undo-tree-id2139 . -3) (undo-tree-id2140 . -3) (undo-tree-id2141 . -3) (undo-tree-id2142 . -3) (undo-tree-id2143 . -3) (undo-tree-id2144 . -3) (undo-tree-id2145 . -3) (undo-tree-id2146 . -3) (undo-tree-id2147 . -3) (undo-tree-id2148 . -3) (undo-tree-id2149 . -3) (undo-tree-id2150 . -3) (undo-tree-id2151 . -3) (undo-tree-id2152 . -3) (undo-tree-id2153 . -3) (undo-tree-id2154 . -3) (undo-tree-id2155 . -3) (undo-tree-id2156 . -3) (undo-tree-id2157 . -3) (undo-tree-id2158 . -3) (undo-tree-id2159 . -3) (undo-tree-id2160 . -3) (undo-tree-id2161 . -3) (undo-tree-id2162 . -3) (undo-tree-id2163 . -3) (undo-tree-id2164 . -3) (undo-tree-id2165 . -3) (undo-tree-id2166 . -3) (undo-tree-id2167 . -3) (undo-tree-id2168 . -3) (undo-tree-id2169 . -3) (undo-tree-id2170 . -3) (undo-tree-id2171 . -3) (undo-tree-id2172 . -3) (undo-tree-id2173 . -3) (undo-tree-id2174 . -3) (undo-tree-id2175 . -3) (undo-tree-id2176 . -3) (undo-tree-id2177 . -3) (undo-tree-id2178 . -3) (undo-tree-id2179 . -3) (undo-tree-id2180 . -3) (undo-tree-id2181 . -3) (undo-tree-id2182 . -3) (undo-tree-id2183 . -3) (undo-tree-id2184 . -3) (undo-tree-id2185 . -3) (undo-tree-id2186 . -3) (undo-tree-id2187 . -3) (undo-tree-id2188 . -3) (undo-tree-id2189 . -3) (undo-tree-id2190 . -3) (undo-tree-id2191 . -3) (undo-tree-id2192 . -3) (undo-tree-id2193 . -3) (undo-tree-id2194 . -3) (undo-tree-id2195 . -3) (undo-tree-id2196 . -3) (undo-tree-id2197 . -3) (undo-tree-id2198 . -3) (undo-tree-id2199 . -3) (undo-tree-id2200 . -3) (undo-tree-id2201 . -3) (undo-tree-id2202 . -3) (undo-tree-id2203 . -3) (undo-tree-id2204 . -3) (undo-tree-id2205 . -3) (undo-tree-id2206 . -3) (undo-tree-id2207 . -3) (undo-tree-id2208 . -3) (undo-tree-id2209 . -3) (undo-tree-id2210 . -3) (undo-tree-id2211 . -3) (undo-tree-id2212 . -3) (undo-tree-id2213 . -3) (undo-tree-id2214 . -3) (undo-tree-id2215 . -3) (undo-tree-id2216 . -3) (undo-tree-id2217 . -3) (undo-tree-id2218 . -3) (undo-tree-id2219 . -3) (undo-tree-id2220 . -3) (undo-tree-id2221 . -3) (undo-tree-id2222 . -3) (undo-tree-id2223 . -3) (undo-tree-id2224 . -3) (undo-tree-id2225 . -3) (undo-tree-id2226 . -3) (undo-tree-id2227 . -3) (undo-tree-id2228 . -3) (undo-tree-id2229 . -3) (undo-tree-id2230 . -3) (undo-tree-id2231 . -3) (undo-tree-id2232 . -3) (undo-tree-id2233 . -3) (undo-tree-id2234 . -3) (undo-tree-id2235 . -3) (undo-tree-id2236 . -3) (undo-tree-id2237 . -3) (undo-tree-id2238 . -3) (undo-tree-id2239 . -3) (undo-tree-id2240 . -3) (undo-tree-id2241 . -3) (undo-tree-id2242 . -3) (undo-tree-id2243 . -3) (undo-tree-id2244 . -3) (undo-tree-id2245 . -3) (undo-tree-id2246 . -3) (undo-tree-id2247 . -3) (undo-tree-id2248 . -3) (undo-tree-id2249 . -3) (undo-tree-id2250 . -3) (undo-tree-id2251 . -3) (undo-tree-id2252 . -3) (undo-tree-id2253 . -3) (undo-tree-id2254 . -3) (undo-tree-id2255 . -3) (undo-tree-id2256 . -3) (undo-tree-id2257 . -3) (undo-tree-id2258 . -3) (undo-tree-id2259 . -3) (undo-tree-id2260 . -3) (undo-tree-id2261 . -3) (undo-tree-id2262 . -3) (undo-tree-id2263 . -3) (undo-tree-id2264 . -3) (undo-tree-id2265 . -3) (undo-tree-id2266 . -3) (undo-tree-id2267 . -3) (undo-tree-id2268 . -3) (undo-tree-id2269 . -3) (undo-tree-id2270 . -3) (undo-tree-id2271 . -3) (undo-tree-id2272 . -3) (undo-tree-id2273 . -3) (undo-tree-id2274 . -3) (undo-tree-id2275 . -2) (undo-tree-id2276 . -2) (undo-tree-id2277 . -2) (undo-tree-id2278 . -2) (undo-tree-id2279 . -2) (undo-tree-id2280 . -2) (undo-tree-id2281 . -2) (undo-tree-id2282 . -2) (undo-tree-id2283 . -2) (undo-tree-id2284 . -2) (undo-tree-id2285 . -2) (undo-tree-id2286 . -2) (undo-tree-id2287 . -2) (undo-tree-id2288 . -2) (undo-tree-id2289 . -2) (undo-tree-id2290 . -2) (undo-tree-id2291 . -2) (undo-tree-id2292 . -2) (undo-tree-id2293 . -2) (undo-tree-id2294 . -2) (undo-tree-id2295 . -2) (undo-tree-id2296 . -2) (undo-tree-id2297 . -2) (undo-tree-id2298 . -2) (undo-tree-id2299 . -2) (undo-tree-id2300 . -2) (undo-tree-id2301 . -2) (undo-tree-id2302 . -2) (undo-tree-id2303 . -2) (undo-tree-id2304 . -2) (undo-tree-id2305 . -2) (undo-tree-id2306 . -2) (undo-tree-id2307 . -2) (undo-tree-id2308 . -2) (undo-tree-id2309 . -2) (undo-tree-id2310 . -2) (undo-tree-id2311 . -2) (undo-tree-id2312 . -2) (undo-tree-id2313 . -2) (undo-tree-id2314 . -2) (undo-tree-id2315 . -2) (undo-tree-id2316 . -2) (undo-tree-id2317 . -2) (undo-tree-id2318 . -2) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -3) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -3) (undo-tree-id2399 . -3) 351) nil (25746 55821 20171 773000) 0 nil])
([nil nil ((356 . 363) (352 . 356) (#("

" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 1 2 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . 349) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -2) (undo-tree-id1458 . -2) (undo-tree-id1459 . -2) (undo-tree-id1460 . -2) (undo-tree-id1461 . 1) (undo-tree-id1462 . -2) (undo-tree-id1463 . -2) (undo-tree-id1464 . -2) (undo-tree-id1465 . -2) (undo-tree-id1466 . -2) (undo-tree-id1467 . -2) (undo-tree-id1468 . -2) (undo-tree-id1469 . -2) (undo-tree-id1470 . -2) (undo-tree-id1471 . -2) (undo-tree-id1472 . -2) (undo-tree-id1473 . -2) (undo-tree-id1474 . -2) (undo-tree-id1475 . -2) (undo-tree-id1476 . -2) (undo-tree-id1477 . -2) (undo-tree-id1478 . -2) (undo-tree-id1479 . -2) (undo-tree-id1480 . -2) (undo-tree-id1481 . -2) (undo-tree-id1482 . -2) (undo-tree-id1483 . -2) (undo-tree-id1484 . -2) (undo-tree-id1485 . -2) (undo-tree-id1486 . -2) (undo-tree-id1487 . -2) (undo-tree-id1488 . -2) (undo-tree-id1489 . -2) (undo-tree-id1490 . -2) (undo-tree-id1491 . -2) (undo-tree-id1492 . -2) (undo-tree-id1493 . -2) (undo-tree-id1494 . -2) (undo-tree-id1495 . -2) (undo-tree-id1496 . -2) (undo-tree-id1497 . -2) (undo-tree-id1498 . -2) (undo-tree-id1499 . -2) (undo-tree-id1500 . -2) (undo-tree-id1501 . -2) (undo-tree-id1502 . -2) (undo-tree-id1503 . -2) (undo-tree-id1504 . -2) (undo-tree-id1505 . -2) (undo-tree-id1506 . -2) (undo-tree-id1507 . -2) (undo-tree-id1508 . -2) (undo-tree-id1509 . -2) (undo-tree-id1510 . -2) (undo-tree-id1511 . -2) (undo-tree-id1512 . -2) (undo-tree-id1513 . -2) (undo-tree-id1514 . -2) (undo-tree-id1515 . -2) (undo-tree-id1516 . -2) (undo-tree-id1517 . -2) (undo-tree-id1518 . -2) (undo-tree-id1519 . -2) (undo-tree-id1520 . -2) (undo-tree-id1521 . -2) (undo-tree-id1522 . -2) (undo-tree-id1523 . -2) (undo-tree-id1524 . -2) (undo-tree-id1525 . -2) (undo-tree-id1526 . -2) (undo-tree-id1527 . -2) (undo-tree-id1528 . -2) (undo-tree-id1529 . -2) (undo-tree-id1530 . -2) (undo-tree-id1531 . -2) (undo-tree-id1532 . -2) (undo-tree-id1533 . -2) (undo-tree-id1534 . -2) (undo-tree-id1535 . -2) (undo-tree-id1536 . -2) (undo-tree-id1537 . -2) (undo-tree-id1538 . -2) (undo-tree-id1539 . -2) (undo-tree-id1540 . -2) (undo-tree-id1541 . -2) (352 . 354) (#("  " 0 2 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . 351) (undo-tree-id1542 . -2) (undo-tree-id1543 . -2) (undo-tree-id1544 . -2) (undo-tree-id1545 . -2) (undo-tree-id1546 . -2) (undo-tree-id1547 . -2) (undo-tree-id1548 . -2) (undo-tree-id1549 . -2) (undo-tree-id1550 . -2) (undo-tree-id1551 . -2) (undo-tree-id1552 . -2) (undo-tree-id1553 . -2) (undo-tree-id1554 . -2) (undo-tree-id1555 . -2) (undo-tree-id1556 . -2) (undo-tree-id1557 . -2) (undo-tree-id1558 . -2) (undo-tree-id1559 . -2) (undo-tree-id1560 . -2) (undo-tree-id1561 . -2) (undo-tree-id1562 . -2) (undo-tree-id1563 . -2) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) (undo-tree-id1566 . -2) (undo-tree-id1567 . -2) (undo-tree-id1568 . -2) (undo-tree-id1569 . -2) (undo-tree-id1570 . -2) (undo-tree-id1571 . -2) (undo-tree-id1572 . -2) (undo-tree-id1573 . -2) (undo-tree-id1574 . -2) (undo-tree-id1575 . -2) (undo-tree-id1576 . -2) (undo-tree-id1577 . -2) (undo-tree-id1578 . -2) (undo-tree-id1579 . -2) (undo-tree-id1580 . -2) (undo-tree-id1581 . -2) (undo-tree-id1582 . -2) (undo-tree-id1583 . -2) (undo-tree-id1584 . -2) (undo-tree-id1585 . -2) (undo-tree-id1586 . -2) (undo-tree-id1587 . -2) (undo-tree-id1588 . -2) (undo-tree-id1589 . -2) (undo-tree-id1590 . -2) (undo-tree-id1591 . -2) (undo-tree-id1592 . -2) (undo-tree-id1593 . -2) (undo-tree-id1594 . -2) (undo-tree-id1595 . -2) (undo-tree-id1596 . -2) (undo-tree-id1597 . -2) (undo-tree-id1598 . -2) (undo-tree-id1599 . -2) (undo-tree-id1600 . -2) (undo-tree-id1601 . -2) (undo-tree-id1602 . -2) (undo-tree-id1603 . -2) (undo-tree-id1604 . -2) (undo-tree-id1605 . -2) (undo-tree-id1606 . -2) (undo-tree-id1607 . -2) (undo-tree-id1608 . -2) (undo-tree-id1609 . -2) (350 . 354)) nil (25746 55821 19819 550000) 0 nil])
([nil nil ((363 . 364) 362) nil (25746 55821 19265 116000) 0 nil])
([nil nil ((597 . 598) (576 . 597) (#("a" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -576) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (#("m" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -577) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (#("c" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -578) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (#("r" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -579) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (#("o" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -580) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) 581 (573 . 581) (552 . 573) (549 . 552) (#("2. " 0 3 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 549) (525 . 552) (#("2. 
2. Resolving the values" 0 3 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 27 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 525) (undo-tree-id3467 . -27) (undo-tree-id3468 . -7) (525 . 529) (#("
   " 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 4 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -548) (undo-tree-id3469 . -4) 552 (548 . 552) (528 . 548) (#("V" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -528) (undo-tree-id3470 . -1) (#("a" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -529) (undo-tree-id3471 . -1) (#("l" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -530) (undo-tree-id3472 . -1) (#("i" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -531) (undo-tree-id3473 . -1) (#("d" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -532) (undo-tree-id3474 . -1) (#("a" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -533) (undo-tree-id3475 . -1) (#("t" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -534) (undo-tree-id3476 . -1) (#("i" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -535) (undo-tree-id3477 . -1) (#("n" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -536) (undo-tree-id3478 . -1) (#("g" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -537) (undo-tree-id3479 . -1) (#(" " 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -538) (undo-tree-id3480 . -1) (#("a" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -539) (undo-tree-id3481 . -1) (#("n" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -540) (undo-tree-id3482 . -1) (#("d" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -541) (undo-tree-id3483 . -1) (#(" " 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -542) (undo-tree-id3484 . -1) 543 (528 . 543) (#("P" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -528) (undo-tree-id3485 . -1) 529 (#("r" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -529) (undo-tree-id3486 . -1) (#("o" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -530) (undo-tree-id3487 . -1) (#("c" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -531) (undo-tree-id3488 . -1) (#("e" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -532) (undo-tree-id3489 . -1) (#("s" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -533) (undo-tree-id3490 . -1) (#("s" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -534) (undo-tree-id3491 . -1) (#("i" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -535) (undo-tree-id3492 . -1) (#("g" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -536) (undo-tree-id3493 . -1) 537 (528 . 537) (508 . 524) (487 . 508) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -487) (undo-tree-id3494 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -488) (undo-tree-id3495 . -1) (#("p" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -489) (undo-tree-id3496 . -1) (#("u" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -490) (undo-tree-id3497 . -1) (#("t" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -491) (undo-tree-id3498 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -492) (undo-tree-id3499 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -493) (undo-tree-id3500 . -1) (#("f" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -494) (undo-tree-id3501 . -1) (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -495) (undo-tree-id3502 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -496) (undo-tree-id3503 . -1) (#("m" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -497) (undo-tree-id3504 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -498) (undo-tree-id3505 . -1) (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -499) (undo-tree-id3506 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -500) (undo-tree-id3507 . -1) (#("c" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -501) (undo-tree-id3508 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -502) (undo-tree-id3509 . -1) (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -503) (undo-tree-id3510 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -504) (undo-tree-id3511 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -505) (undo-tree-id3512 . -1) 506 (507 . 510) (#("1. " 0 3 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . 507) (475 . 510) (#("1. 
1. Grabbing inputs from records" 0 3 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 35 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 475) (undo-tree-id3513 . -35) (475 . 479) (#("
   " 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 4 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -506) (undo-tree-id3514 . -4) 510 (506 . 510) (491 . 506) (#("t" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -491) (undo-tree-id3515 . -1) (#("s" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -492) (undo-tree-id3516 . -1) (#(" " 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -493) (undo-tree-id3517 . -1) (#("f" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -494) (undo-tree-id3518 . -1) (#("r" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -495) (undo-tree-id3519 . -1) (#("o" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -496) (undo-tree-id3520 . -1) (#("m" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -497) (undo-tree-id3521 . -1) (#(" " 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -498) (undo-tree-id3522 . -1) 499 (487 . 499) (478 . 487) (#("F" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -478) (undo-tree-id3523 . -1) (#("G" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -479) (undo-tree-id3524 . -1) 480 (475 . 480) (474 . 475) (461 . 474) (440 . 461) (428 . 440) (427 . 428) (409 . 427) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -409) (undo-tree-id3525 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -410) (undo-tree-id3526 . -1) 411 (396 . 411) (394 . 396) (373 . 394) (#("b" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -373) (undo-tree-id3527 . -1) 374 (364 . 374) (#("W" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -364) (undo-tree-id3528 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -365) (undo-tree-id3529 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -366) (undo-tree-id3530 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -367) (undo-tree-id3531 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -368) (undo-tree-id3532 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -369) (undo-tree-id3533 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -370) (undo-tree-id3534 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -371) (undo-tree-id3535 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -372) (undo-tree-id3536 . -1) 373 (364 . 373) (t 25746 55821 23162 307000)) nil (25746 56078 368022 870000) 0 nil])
([nil nil ((598 . 599) 597) nil (25746 56078 367581 620000) 0 nil])
([nil nil ((569 . 576) (548 . 569) (t 25746 56078 372568 469000)) nil (25746 56113 394594 67000) 0 nil])
([nil nil ((116 . 120) (t 25746 56113 399514 991000)) nil (25746 56189 361043 912000) 0 nil])
([nil nil ((631 . 633) (t 25746 56189 366830 899000)) nil (25746 57997 4470 111000) 0 nil])
([nil nil ((#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -631) (undo-tree-id3589 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -632) (undo-tree-id3590 . -1) 633) nil (25746 57997 4469 119000) 0 nil])
([nil nil ((631 . 634)) nil (25746 57997 4467 446000) 0 nil])
([nil nil ((#("B" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -631) (undo-tree-id3586 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -632) (undo-tree-id3587 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -633) (undo-tree-id3588 . -1) 634) nil (25746 57997 4465 893000) 0 nil])
([nil nil ((631 . 643)) nil (25746 57997 4462 446000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -641) (undo-tree-id3584 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -642) (undo-tree-id3585 . -1) 643) nil (25746 57997 4461 44000) 0 nil])
([nil nil ((641 . 654)) nil (25746 57997 4457 417000) 0 nil])
([nil nil ((#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -653) (undo-tree-id3583 . -1) 654) nil (25746 57997 4456 24000) 0 nil])
([nil nil ((653 . 659)) nil (25746 57997 4454 532000) 0 nil])
([nil nil ((659 . 660)) nil (25746 57997 4453 239000) 0 nil])
([nil nil ((#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -643) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -644) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -645) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -646) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -647) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -648) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -649) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -650) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -651) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -652) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -653) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -654) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -655) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -656) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -657) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -658) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -659) (undo-tree-id3582 . -1) 660) nil (25746 57997 4449 652000) 0 nil])
([nil nil ((643 . 664)) nil (25746 57997 4419 906000) 0 nil])
([nil nil ((664 . 672)) nil (25746 57997 4418 544000) 0 nil])
([nil nil ((665 . 666)) nil (25746 57997 4417 762000) 0 nil])
([nil nil ((673 . 674)) nil (25746 57997 4416 810000) 0 nil])
([nil nil ((674 . 685)) nil (25746 57997 4415 568000) 0 nil])
([nil nil ((#("g" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -684) (undo-tree-id3549 . -1) 685) nil (25746 57997 4414 195000) 0 nil])
([nil nil ((684 . 692)) nil (25746 57997 4412 111000) 0 nil])
([nil nil ((695 . 697) (692 . 696)) nil (25746 57997 4410 669000) 0 nil])
([nil nil ((#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -695) (undo-tree-id3547 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -696) (undo-tree-id3548 . -1) 697) nil (25746 57997 4409 296000) 0 nil])
([nil nil ((#("(" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -694) (undo-tree-id3546 . -1) (#(")" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 695)) nil (25746 57997 4405 820000) 0 nil])
([nil nil ((694 . 713)) nil (25746 57997 4403 696000) 0 nil])
([nil nil ((#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -704) (undo-tree-id3537 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -705) (undo-tree-id3538 . -1) (#("T" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -706) (undo-tree-id3539 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -707) (undo-tree-id3540 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -708) (undo-tree-id3541 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -709) (undo-tree-id3542 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -710) (undo-tree-id3543 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -711) (undo-tree-id3544 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -712) (undo-tree-id3545 . -1) 713) nil (25746 57997 4400 219000) 0 nil])
([nil nil ((704 . 705)) nil (25746 57997 4369 481000) 0 nil])
([nil nil ((705 . 706)) nil (25746 57997 4360 143000) 0 nil])
([nil nil ((706 . 712) (t 25746 57997 1990 552000)) nil (25747 17766 414086 9000) 0 nil])
([nil nil ((712 . 733)) nil (25747 17766 414084 123000) 0 nil])
([nil nil ((733 . 754)) nil (25747 17766 414082 726000) 0 nil])
([nil nil ((754 . 763)) nil (25747 17766 414080 771000) 0 nil])
([nil nil ((#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -760) (undo-tree-id233 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -761) (undo-tree-id234 . -1) (#("T" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -762) (undo-tree-id235 . -1) 763) nil (25747 17766 414079 304000) 0 nil])
([nil nil ((760 . 768)) nil (25747 17766 414075 532000) 0 nil])
([nil nil ((#("I" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -766) (undo-tree-id231 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -767) (undo-tree-id232 . -1) 768) nil (25747 17766 414073 647000) 0 nil])
([nil nil ((771 . 773) (766 . 772)) nil (25747 17766 414071 342000) 0 nil])
([nil nil ((#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -771) (undo-tree-id229 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -772) (undo-tree-id230 . -1) 773) nil (25747 17766 414069 945000) 0 nil])
([nil nil ((#("(" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -770) (undo-tree-id228 . -1) (#(")" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 771)) nil (25747 17766 414067 570000) 0 nil])
([nil nil ((770 . 791)) nil (25747 17766 414065 615000) 0 nil])
([nil nil ((791 . 798)) nil (25747 17766 414064 218000) 0 nil])
([nil nil ((798 . 803)) nil (25747 17766 414063 240000) 0 nil])
([nil nil ((#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -800) (undo-tree-id225 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -801) (undo-tree-id226 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -802) (undo-tree-id227 . -1) 803) nil (25747 17766 414061 285000) 0 nil])
([nil nil ((800 . 815)) nil (25747 17766 414059 329000) 0 nil])
([nil nil ((#("(" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -813) (undo-tree-id224 . -1) (#(")" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 814)) nil (25747 17766 414057 862000) 0 nil])
([nil nil ((#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -812) (undo-tree-id223 . -1) 813) nil (25747 17766 414055 977000) 0 nil])
([nil nil ((812 . 818)) nil (25747 17766 414054 510000) 0 nil])
([nil nil ((818 . 834)) nil (25747 17766 414053 602000) 0 nil])
([nil nil ((#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -833) (undo-tree-id222 . -1) 834) nil (25747 17766 414052 135000) 0 nil])
([nil nil ((833 . 834)) nil (25747 17766 414050 249000) 0 nil])
([nil nil ((#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -833) (undo-tree-id221 . -1) 834) nil (25747 17766 414048 853000) 0 nil])
([nil nil ((834 . 847) (833 . 835)) nil (25747 17766 414046 897000) 0 nil])
([nil nil ((833 . 834)) nil (25747 17766 414045 919000) 0 nil])
([nil nil ((849 . 851)) nil (25747 17766 414044 522000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -850) (undo-tree-id220 . -1) 851) nil (25747 17766 414042 637000) 0 nil])
([nil nil ((850 . 853)) nil (25747 17766 414040 262000) 0 nil])
([nil nil ((#("E" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -852) (undo-tree-id219 . -1) 853) nil (25747 17766 414039 354000) 0 nil])
([nil nil ((852 . 865)) nil (25747 17766 414037 957000) 0 nil])
([nil nil ((#("E" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -852) (undo-tree-id206 . -1) (#("v" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -853) (undo-tree-id207 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -854) (undo-tree-id208 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -855) (undo-tree-id209 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -856) (undo-tree-id210 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -857) (undo-tree-id211 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -858) (undo-tree-id212 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -859) (undo-tree-id213 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -860) (undo-tree-id214 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -861) (undo-tree-id215 . -1) (#("," 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -862) (undo-tree-id216 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -863) (undo-tree-id217 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -864) (undo-tree-id218 . -1) 865) nil (25747 17766 414036 71000) 0 nil])
([nil nil ((852 . 855)) nil (25747 17766 414023 989000) 0 nil])
([nil nil ((#("S" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -852) (undo-tree-id203 . -1) (#("A" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -853) (undo-tree-id204 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -854) (undo-tree-id205 . -1) 855) nil (25747 17766 414022 592000) 0 nil])
([nil nil ((852 . 873)) nil (25747 17766 414020 217000) 0 nil])
([nil nil ((873 . 874)) nil (25747 17766 414019 239000) 0 nil])
([nil nil ((874 . 895)) nil (25747 17766 414017 843000) 0 nil])
([nil nil ((914 . 916) (895 . 915)) nil (25747 17766 414016 446000) 0 nil])
([nil nil ((916 . 923)) nil (25747 17766 414015 468000) 0 nil])
([nil nil ((923 . 928)) nil (25747 17766 414014 71000) 0 nil])
([nil nil ((#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -927) (undo-tree-id202 . -1) 928) nil (25747 17766 414013 93000) 0 nil])
([nil nil ((927 . 935)) nil (25747 17766 414011 138000) 0 nil])
([nil nil ((#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -919) (undo-tree-id186 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -920) (undo-tree-id187 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -921) (undo-tree-id188 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -922) (undo-tree-id189 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -923) (undo-tree-id190 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -924) (undo-tree-id191 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -925) (undo-tree-id192 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -926) (undo-tree-id193 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -927) (undo-tree-id194 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -928) (undo-tree-id195 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -929) (undo-tree-id196 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -930) (undo-tree-id197 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -931) (undo-tree-id198 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -932) (undo-tree-id199 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -933) (undo-tree-id200 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -934) (undo-tree-id201 . -1) 935) nil (25747 17766 414008 763000) 0 nil])
([nil nil ((919 . 940)) nil (25747 17766 414001 220000) 0 nil])
([nil nil ((940 . 951)) nil (25747 17766 413999 823000) 0 nil])
([nil nil ((#("," 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -950) (undo-tree-id185 . -1) 951) nil (25747 17766 413998 845000) 0 nil])
([nil nil ((950 . 971)) nil (25747 17766 413996 890000) 0 nil])
([nil nil ((971 . 980)) nil (25747 17766 413995 423000) 0 nil])
([nil nil ((981 . 1002)) nil (25747 17766 413994 445000) 0 nil])
([nil nil ((1002 . 1005)) nil (25747 17766 413993 468000) 0 nil])
([nil nil ((1005 . 1026)) nil (25747 17766 413992 71000) 0 nil])
([nil nil ((1026 . 1037)) nil (25747 17766 413991 93000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1036) (undo-tree-id184 . -1) 1037) nil (25747 17766 413989 696000) 0 nil])
([nil nil ((1036 . 1037)) nil (25747 17766 413988 229000) 0 nil])
([nil nil ((1037 . 1038)) nil (25747 17766 413986 833000) 0 nil])
([nil nil ((#("I" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1037) (undo-tree-id183 . -1) 1038) nil (25747 17766 413985 925000) 0 nil])
([nil nil ((1037 . 1058)) nil (25747 17766 413984 458000) 0 nil])
([nil nil ((1058 . 1059)) nil (25747 17766 413983 61000) 0 nil])
([nil nil ((1059 . 1067)) nil (25747 17766 413981 594000) 0 nil])
([nil nil ((#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1066) (undo-tree-id182 . -1) 1067) nil (25747 17766 413980 617000) 0 nil])
([nil nil ((1066 . 1083)) nil (25747 17766 413978 731000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1082) (undo-tree-id181 . -1) 1083) nil (25747 17766 413977 823000) 0 nil])
([nil nil ((1082 . 1093)) nil (25747 17766 413975 937000) 0 nil])
([nil nil ((#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1092) (undo-tree-id180 . -1) 1093) nil (25747 17766 413974 959000) 0 nil])
([nil nil ((1092 . 1095)) nil (25747 17766 413973 74000) 0 nil])
([nil nil ((1095 . 1116)) nil (25747 17766 413972 166000) 0 nil])
([nil nil ((1116 . 1123)) nil (25747 17766 413971 188000) 0 nil])
([nil nil ((1123 . 1144)) nil (25747 17766 413969 791000) 0 nil])
([nil nil ((1144 . 1147)) nil (25747 17766 413968 324000) 0 nil])
([nil nil ((#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1109) (undo-tree-id179 . -1) 1110) nil (25747 17766 413967 347000) 0 nil])
([nil nil ((1109 . 1115)) nil (25747 17766 413965 880000) 0 nil])
([nil nil ((1152 . 1173)) nil (25747 17766 413963 924000) 0 nil])
([nil nil ((1173 . 1180)) nil (25747 17766 413962 947000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1179) (undo-tree-id178 . -1) 1180) nil (25747 17766 413961 969000) 0 nil])
([nil nil ((1179 . 1188)) nil (25747 17766 413960 83000) 0 nil])
([nil nil ((#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1186) (undo-tree-id176 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1187) (undo-tree-id177 . -1) 1188) nil (25747 17766 413958 616000) 0 nil])
([nil nil ((1186 . 1207)) nil (25747 17766 413956 731000) 0 nil])
([nil nil ((1207 . 1210)) nil (25747 17766 413955 823000) 0 nil])
([nil nil ((1210 . 1219)) nil (25747 17766 413954 426000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1218) (undo-tree-id175 . -1) 1219) nil (25747 17766 413953 448000) 0 nil])
([nil nil ((1218 . 1239)) nil (25747 17766 413951 562000) 0 nil])
([nil nil ((1239 . 1241)) nil (25747 17766 413950 654000) 0 nil])
([nil nil ((#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1223) (undo-tree-id157 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1224) (undo-tree-id158 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1225) (undo-tree-id159 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1226) (undo-tree-id160 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1227) (undo-tree-id161 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1228) (undo-tree-id162 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1229) (undo-tree-id163 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1230) (undo-tree-id164 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1231) (undo-tree-id165 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1232) (undo-tree-id166 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1233) (undo-tree-id167 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1234) (undo-tree-id168 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1235) (undo-tree-id169 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1236) (undo-tree-id170 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1237) (undo-tree-id171 . -1) (#("k" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1238) (undo-tree-id172 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1239) (undo-tree-id173 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1240) (undo-tree-id174 . -1) 1241) nil (25747 17766 413947 302000) 0 nil])
([nil nil ((1223 . 1244)) nil (25747 17766 413940 178000) 0 nil])
([nil nil ((1244 . 1263)) nil (25747 17766 413938 781000) 0 nil])
([nil nil ((#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1259) (undo-tree-id153 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1260) (undo-tree-id154 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1261) (undo-tree-id155 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1262) (undo-tree-id156 . -1) 1263) nil (25747 17766 413937 314000) 0 nil])
([nil nil ((1259 . 1268)) nil (25747 17766 413934 870000) 0 nil])
([nil nil ((1268 . 1273)) nil (25747 17766 413933 403000) 0 nil])
([nil nil ((#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1263) (undo-tree-id143 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1264) (undo-tree-id144 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1265) (undo-tree-id145 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1266) (undo-tree-id146 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1267) (undo-tree-id147 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1268) (undo-tree-id148 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1269) (undo-tree-id149 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1270) (undo-tree-id150 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1271) (undo-tree-id151 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1272) (undo-tree-id152 . -1) 1273) nil (25747 17766 413931 517000) 0 nil])
([nil nil ((1263 . 1275)) nil (25747 17766 413920 552000) 0 nil])
([nil nil ((#("-" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1272) (undo-tree-id140 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1273) (undo-tree-id141 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1274) (undo-tree-id142 . -1) 1275) nil (25747 17766 413919 155000) 0 nil])
([nil nil ((1272 . 1281)) nil (25747 17766 413916 851000) 0 nil])
([nil nil ((#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1263) (undo-tree-id122 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1264) (undo-tree-id123 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1265) (undo-tree-id124 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1266) (undo-tree-id125 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1267) (undo-tree-id126 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1268) (undo-tree-id127 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1269) (undo-tree-id128 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1270) (undo-tree-id129 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1271) (undo-tree-id130 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1272) (undo-tree-id131 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -1273) (undo-tree-id132 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1274) (undo-tree-id133 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1275) (undo-tree-id134 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1276) (undo-tree-id135 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1277) (undo-tree-id136 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1278) (undo-tree-id137 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1279) (undo-tree-id138 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1280) (undo-tree-id139 . -1) 1281) nil (25747 17766 413914 406000) 0 nil])
([nil nil ((1263 . 1277)) nil (25747 17766 413906 304000) 0 nil])
([nil nil ((1277 . 1298)) nil (25747 17766 413905 327000) 0 nil])
([nil nil ((1298 . 1310)) nil (25747 17766 413903 860000) 0 nil])
([nil nil ((1230 . 1232)) nil (25747 17766 413902 952000) 0 nil])
([nil nil ((1232 . 1239)) nil (25747 17766 413901 485000) 0 nil])
([nil nil ((1319 . 1340)) nil (25747 17766 413900 19000) 0 nil])
([nil nil ((#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1337) (undo-tree-id119 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1338) (undo-tree-id120 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1339) (undo-tree-id121 . -1) 1340) nil (25747 17766 413898 63000) 0 nil])
([nil nil ((1337 . 1358)) nil (25747 17766 413896 177000) 0 nil])
([nil nil ((1358 . 1362)) nil (25747 17766 413894 291000) 0 nil])
([nil nil ((1362 . 1378)) nil (25747 17766 413893 384000) 0 nil])
([nil nil ((#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1376) (undo-tree-id117 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1377) (undo-tree-id118 . -1) 1378) nil (25747 17766 413891 428000) 0 nil])
([nil nil ((1376 . 1397)) nil (25747 17766 413889 123000) 0 nil])
([nil nil ((1397 . 1413)) nil (25747 17766 413888 145000) 0 nil])
([nil nil ((1413 . 1414)) nil (25747 17766 413886 749000) 0 nil])
([nil nil ((1414 . 1435)) nil (25747 17766 413885 352000) 0 nil])
([nil nil ((1435 . 1442)) nil (25747 17766 413883 955000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1441) (undo-tree-id116 . -1) 1442) nil (25747 17766 413882 558000) 0 nil])
([nil nil ((1441 . 1462)) nil (25747 17766 413881 161000) 0 nil])
([nil nil ((1462 . 1468)) nil (25747 17766 413879 764000) 0 nil])
([nil nil ((1468 . 1489)) nil (25747 17766 413878 856000) 0 nil])
([nil nil ((1489 . 1496)) nil (25747 17766 413877 390000) 0 nil])
([nil nil ((1496 . 1517)) nil (25747 17766 413876 482000) 0 nil])
([nil nil ((1517 . 1538)) nil (25747 17766 413875 15000) 0 nil])
([nil nil ((1538 . 1542)) nil (25747 17766 413873 618000) 0 nil])
([nil nil ((1542 . 1563)) nil (25747 17766 413872 640000) 0 nil])
([nil nil ((1563 . 1582)) nil (25747 17766 413871 174000) 0 nil])
([nil nil ((1559 . 1560)) nil (25747 17766 413869 777000) 0 nil])
([nil nil ((1562 . 1563)) nil (25747 17766 413868 799000) 0 nil])
([nil nil ((1568 . 1569)) nil (25747 17766 413867 332000) 0 nil])
([nil nil ((1573 . 1580)) nil (25747 17766 413865 936000) 0 nil])
([nil nil ((1592 . 1613)) nil (25747 17766 413864 469000) 0 nil])
([nil nil ((1613 . 1627)) nil (25747 17766 413863 561000) 0 nil])
([nil nil ((#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1626) (undo-tree-id115 . -1) 1627) nil (25747 17766 413862 94000) 0 nil])
([nil nil ((1626 . 1643)) nil (25747 17766 413860 278000) 0 nil])
([nil nil ((1643 . 1662)) nil (25747 17766 413859 300000) 0 nil])
([nil nil ((#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1661) (undo-tree-id114 . -1) 1662) nil (25747 17766 413857 904000) 0 nil])
([nil nil ((1661 . 1682)) nil (25747 17766 413856 437000) 0 nil])
([nil nil ((1682 . 1684)) nil (25747 17766 413855 40000) 0 nil])
([nil nil ((1684 . 1705)) nil (25747 17766 413853 573000) 0 nil])
([nil nil ((1705 . 1726)) nil (25747 17766 413852 177000) 0 nil])
([nil nil ((1726 . 1729)) nil (25747 17766 413851 338000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1728) (undo-tree-id113 . -1) 1729) nil (25747 17766 413849 942000) 0 nil])
([nil nil ((1728 . 1729)) nil (25747 17766 413847 986000) 0 nil])
([nil nil ((1729 . 1750)) nil (25747 17766 413847 78000) 0 nil])
([nil nil ((1750 . 1753)) nil (25747 17766 413845 681000) 0 nil])
([nil nil ((#("`" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1750) (undo-tree-id110 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1751) (undo-tree-id111 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1752) (undo-tree-id112 . -1) 1753) nil (25747 17766 413844 284000) 0 nil])
([nil nil ((1750 . 1761)) nil (25747 17766 413841 910000) 0 nil])
([nil nil ((#("0" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1760) (undo-tree-id109 . -1) 1761) nil (25747 17766 413840 443000) 0 nil])
([nil nil ((1760 . 1766)) nil (25747 17766 413838 976000) 0 nil])
([nil nil ((#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1753) (undo-tree-id96 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1754) (undo-tree-id97 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1755) (undo-tree-id98 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1756) (undo-tree-id99 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1757) (undo-tree-id100 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1758) (undo-tree-id101 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1759) (undo-tree-id102 . -1) (#("-" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1760) (undo-tree-id103 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1761) (undo-tree-id104 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1762) (undo-tree-id105 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1763) (undo-tree-id106 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1764) (undo-tree-id107 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1765) (undo-tree-id108 . -1) 1766) nil (25747 17766 413836 602000) 0 nil])
([nil nil ((1753 . 1774)) nil (25747 17766 413823 122000) 0 nil])
([nil nil ((1774 . 1775)) nil (25747 17766 413821 655000) 0 nil])
([nil nil ((#("`" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1774) (undo-tree-id95 . -1) 1775) nil (25747 17766 413820 259000) 0 nil])
([nil nil ((1774 . 1792)) nil (25747 17766 413818 862000) 0 nil])
([nil nil ((1792 . 1813)) nil (25747 17766 413817 465000) 0 nil])
([nil nil ((1813 . 1834)) nil (25747 17766 413816 68000) 0 nil])
([nil nil ((1834 . 1855)) nil (25747 17766 413815 90000) 0 nil])
([nil nil ((1855 . 1863)) nil (25747 17766 413813 693000) 0 nil])
([nil nil ((#("H" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1858) (undo-tree-id90 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1859) (undo-tree-id91 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1860) (undo-tree-id92 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1861) (undo-tree-id93 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1862) (undo-tree-id94 . -1) 1863) nil (25747 17766 413811 808000) 0 nil])
([nil nil ((1858 . 1879)) nil (25747 17766 413808 944000) 0 nil])
([nil nil ((1879 . 1900)) nil (25747 17766 413808 36000) 0 nil])
([nil nil ((1900 . 1919)) nil (25747 17766 413806 570000) 0 nil])
([nil nil ((#("`" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1918) (undo-tree-id89 . -1) 1919) nil (25747 17766 413805 592000) 0 nil])
([nil nil ((1918 . 1939)) nil (25747 17766 413804 125000) 0 nil])
([nil nil ((1939 . 1960)) nil (25747 17766 413802 658000) 0 nil])
([nil nil ((1960 . 1974)) nil (25747 17766 413801 192000) 0 nil])
([nil nil ((1974 . 1995)) nil (25747 17766 413800 214000) 0 nil])
([nil nil ((1995 . 1997)) nil (25747 17766 413798 817000) 0 nil])
([nil nil ((#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -1975) (undo-tree-id83 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1976) (undo-tree-id84 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1977) (undo-tree-id85 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1978) (undo-tree-id86 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1979) (undo-tree-id87 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1980) (undo-tree-id88 . -1) 1981) nil (25747 17766 413796 931000) 0 nil])
([nil nil ((#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1975) (undo-tree-id82 . -1) 1976) nil (25747 17766 413793 90000) 0 nil])
([nil nil ((1975 . 1977)) nil (25747 17766 413791 623000) 0 nil])
([nil nil ((#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1976) (undo-tree-id81 . -1) 1977) nil (25747 17766 413790 226000) 0 nil])
([nil nil ((1976 . 1997)) nil (25747 17766 413788 341000) 0 nil])
([nil nil ((1997 . 2001)) nil (25747 17766 413787 363000) 0 nil])
([nil nil ((2016 . 2017)) nil (25747 17766 413785 966000) 0 nil])
([nil nil ((2017 . 2035)) nil (25747 17766 413784 569000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2034) (undo-tree-id80 . -1) 2035) nil (25747 17766 413783 172000) 0 nil])
([nil nil ((2034 . 2055)) nil (25747 17766 413781 775000) 0 nil])
([nil nil ((2055 . 2057)) nil (25747 17766 413780 798000) 0 nil])
([nil nil ((2057 . 2078)) nil (25747 17766 413779 401000) 0 nil])
([nil nil ((2078 . 2099)) nil (25747 17766 413778 4000) 0 nil])
([nil nil ((2099 . 2108)) nil (25747 17766 413777 26000) 0 nil])
([nil nil ((2108 . 2123)) nil (25747 17766 413775 560000) 0 nil])
([nil nil ((#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2112) (undo-tree-id69 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2113) (undo-tree-id70 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2114) (undo-tree-id71 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2115) (undo-tree-id72 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2116) (undo-tree-id73 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2117) (undo-tree-id74 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2118) (undo-tree-id75 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2119) (undo-tree-id76 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2120) (undo-tree-id77 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2121) (undo-tree-id78 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2122) (undo-tree-id79 . -1) 2123) nil (25747 17766 413773 604000) 0 nil])
([nil nil ((2112 . 2116)) nil (25747 17766 413768 785000) 0 nil])
([nil nil ((#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2113) (undo-tree-id66 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2114) (undo-tree-id67 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2115) (undo-tree-id68 . -1) 2116) nil (25747 17766 413767 318000) 0 nil])
([nil nil ((2113 . 2134)) nil (25747 17766 413764 455000) 0 nil])
([nil nil ((2134 . 2136)) nil (25747 17766 413763 58000) 0 nil])
([nil nil ((2136 . 2157)) nil (25747 17766 413761 172000) 0 nil])
([nil nil ((2157 . 2178)) nil (25747 17766 413760 194000) 0 nil])
([nil nil ((2178 . 2182)) nil (25747 17766 413758 728000) 0 nil])
([nil nil ((2182 . 2183)) nil (25747 17766 413757 820000) 0 nil])
([nil nil ((#("x" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2182) (undo-tree-id65 . -1) 2183) nil (25747 17766 413756 423000) 0 nil])
([nil nil ((2182 . 2184)) nil (25747 17766 413753 70000) 0 nil])
([nil nil ((#("x" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2183) (undo-tree-id64 . -1) 2184) nil (25747 17766 413751 673000) 0 nil])
([nil nil ((2183 . 2204)) nil (25747 17766 413750 765000) 0 nil])
([nil nil ((2204 . 2212)) nil (25747 17766 413749 299000) 0 nil])
([nil nil ((2212 . 2233)) nil (25747 17766 413748 391000) 0 nil])
([nil nil ((2233 . 2241)) nil (25747 17766 413746 924000) 0 nil])
([nil nil ((#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2240) (undo-tree-id63 . -1) 2241) nil (25747 17766 413745 527000) 0 nil])
([nil nil ((2240 . 2243)) nil (25747 17766 413744 550000) 0 nil])
([nil nil ((2243 . 2244)) nil (25747 17766 413743 572000) 0 nil])
([nil nil ((2244 . 2261)) nil (25747 17766 413742 105000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-face font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2244) (undo-tree-id46 . -1) (#("+" 0 1 (font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2245) (undo-tree-id47 . -1) (#("B" 0 1 (face org-meta-line font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2246) (undo-tree-id48 . -1) (#("E" 0 1 (face org-meta-line font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2247) (undo-tree-id49 . -1) (#("G" 0 1 (face org-meta-line font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2248) (undo-tree-id50 . -1) (#("I" 0 1 (face org-meta-line font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2249) (undo-tree-id51 . -1) (#("N" 0 1 (face org-meta-line font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2250) (undo-tree-id52 . -1) (#("_" 0 1 (face org-meta-line font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2251) (undo-tree-id53 . -1) (#("S" 0 1 (font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2252) (undo-tree-id54 . -1) (#("R" 0 1 (font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2253) (undo-tree-id55 . -1) (#("C" 0 1 (font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2254) (undo-tree-id56 . -1) (#(" " 0 1 (font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2255) (undo-tree-id57 . -1) (#("g" 0 1 (font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2256) (undo-tree-id58 . -1) (#("u" 0 1 (font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2257) (undo-tree-id59 . -1) (#("i" 0 1 (font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2258) (undo-tree-id60 . -1) (#("l" 0 1 (font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2259) (undo-tree-id61 . -1) (#("e" 0 1 (font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2260) (undo-tree-id62 . -1) 2261) nil (25747 17766 413739 242000) 0 nil])
([nil nil ((2244 . 2246)) nil (25747 17766 413733 26000) 0 nil])
([nil nil ((2246 . 2249)) nil (25747 17766 413732 48000) 0 nil])
([nil nil ((#("T" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -2246) (undo-tree-id43 . -1) (#("H" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -2247) (undo-tree-id44 . -1) (#("r" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -2248) (undo-tree-id45 . -1) 2249) nil (25747 17766 413729 673000) 0 nil])
([nil nil ((2246 . 2256)) nil (25747 17766 413726 391000) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -2253) (undo-tree-id40 . -1) (#("a" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -2254) (undo-tree-id41 . -1) (#("s" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -2255) (undo-tree-id42 . -1) 2256) nil (25747 17766 413724 924000) 0 nil])
([nil nil ((2253 . 2254)) nil (25747 17766 413722 60000) 0 nil])
([nil nil ((2254 . 2268)) nil (25747 17766 413720 663000) 0 nil])
([nil nil ((2268 . 2269)) nil (25747 17766 413718 778000) 0 nil])
([nil nil ((#("b" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2268) (undo-tree-id39 . -1) 2269) nil (25747 17766 413717 381000) 0 nil])
([nil nil ((2268 . 2289)) nil (25747 17766 413715 495000) 0 nil])
([nil nil ((2289 . 2310)) nil (25747 17766 413714 517000) 0 nil])
([nil nil ((2310 . 2318)) nil (25747 17766 413713 120000) 0 nil])
([nil nil ((#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2313) (undo-tree-id34 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2314) (undo-tree-id35 . -1) (#("j" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2315) (undo-tree-id36 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2316) (undo-tree-id37 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2317) (undo-tree-id38 . -1) 2318) nil (25747 17766 413711 165000) 0 nil])
([nil nil ((2313 . 2334)) nil (25747 17766 413694 473000) 0 nil])
([nil nil ((2334 . 2347)) nil (25747 17766 413693 76000) 0 nil])
([nil nil ((#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2343) (undo-tree-id30 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2344) (undo-tree-id31 . -1) (#("k" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2345) (undo-tree-id32 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2346) (undo-tree-id33 . -1) 2347) nil (25747 17766 413691 120000) 0 nil])
([nil nil ((2343 . 2347)) nil (25747 17766 413688 745000) 0 nil])
([nil nil ((#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2345) (undo-tree-id28 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2346) (undo-tree-id29 . -1) 2347) nil (25747 17766 413687 279000) 0 nil])
([nil nil ((#("g" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2343) (undo-tree-id26 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2344) (undo-tree-id27 . -1) 2345) nil (25747 17766 413684 904000) 0 nil])
([nil nil ((2343 . 2363)) nil (25747 17766 413683 88000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2362) (undo-tree-id25 . -1) (2363 . 2364)) nil (25747 17766 413681 622000) 0 nil])
([nil nil ((2363 . 2384)) nil (25747 17766 413679 666000) 0 nil])
([nil nil ((2384 . 2393)) nil (25747 17766 413678 199000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2392) (undo-tree-id24 . -1) 2393) nil (25747 17766 413676 733000) 0 nil])
([nil nil ((2392 . 2404)) nil (25747 17766 413674 358000) 0 nil])
([nil nil ((2404 . 2417)) nil (25747 17766 413672 891000) 0 nil])
([nil nil ((#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2416) (undo-tree-id23 . -1) 2417) nil (25747 17766 413671 6000) 0 nil])
([nil nil ((2416 . 2432)) nil (25747 17766 413669 120000) 0 nil])
([nil nil ((#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2431) (undo-tree-id22 . -1) 2432) nil (25747 17766 413667 653000) 0 nil])
([nil nil ((2431 . 2435)) nil (25747 17766 413665 767000) 0 nil])
([nil nil ((2435 . 2445)) nil (25747 17766 413664 859000) 0 nil])
([nil nil ((#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2430) (undo-tree-id7 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2431) (undo-tree-id8 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2432) (undo-tree-id9 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2433) (undo-tree-id10 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2434) (undo-tree-id11 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2435) (undo-tree-id12 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2436) (undo-tree-id13 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2437) (undo-tree-id14 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2438) (undo-tree-id15 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2439) (undo-tree-id16 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2440) (undo-tree-id17 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2441) (undo-tree-id18 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2442) (undo-tree-id19 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2443) (undo-tree-id20 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2444) (undo-tree-id21 . -1) 2445) nil (25747 17766 413662 66000) 0 nil])
([nil nil ((2430 . 2451)) nil (25747 17766 413655 850000) 0 nil])
([nil nil ((2451 . 2471)) nil (25747 17766 413654 453000) 0 nil])
([nil nil ((#("v" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2465) (undo-tree-id1 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2466) (undo-tree-id2 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2467) (undo-tree-id3 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2468) (undo-tree-id4 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2469) (undo-tree-id5 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2470) (undo-tree-id6 . -1) 2471) nil (25747 17766 413652 567000) 0 nil])
([nil nil ((2465 . 2486)) nil (25747 17766 413648 656000) 0 nil])
([nil nil ((2486 . 2507)) nil (25747 17766 413647 678000) 0 nil])
([nil nil ((2507 . 2525)) nil (25747 17766 413646 212000) 0 nil])
([nil nil ((2525 . 2526)) nil (25747 17766 413644 815000) 0 nil])
([nil nil ((2526 . 2533)) nil (25747 17766 413643 348000) 0 nil])
([nil nil ((#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2532) (undo-tree-id0 . -1) 2533) nil (25747 17766 413641 392000) 0 nil])
([nil nil ((2532 . 2549)) nil (25747 17766 413617 436000) 0 nil])
([nil nil ((2549 . 2550)) nil (25747 17766 413612 128000) 0 nil])
([nil nil ((786 . 787) (782 . 783) (t 25747 17766 412494 861000)) nil (25747 17800 66750 497000) 0 nil])
([nil nil ((#("For example here is code that adds ~libxcb~ as a dependency if the ~xcb~ parameter is set to on:" 0 35 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 35 36 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 36 42 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 42 43 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 43 67 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 67 68 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 68 71 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 71 72 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 72 96 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2149) (undo-tree-id490 . -95) (t 25747 17800 66149 224000)) nil (25747 18021 586482 86000) 0 nil])
([nil nil ((#("* The journey
" 0 1 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" composition (0 1 [9672]) face (org-superstar-header-bullet org-level-1) fontified t) 1 2 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" face org-level-1 fontified t) 2 13 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" face org-level-1 fontified t) 13 14 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 354) (undo-tree-id488 . -12) (undo-tree-id489 . -13) 366) nil (25747 18021 586479 781000) 0 nil])
([nil nil ((2173 . 2184) (2159 . 2173) (2158 . 2159) (2151 . 2158) (#("E" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -2151) (undo-tree-id484 . -1) 2152 (2138 . 2152) (#("A" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -2138) (undo-tree-id485 . -1) (#("n" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -2139) (undo-tree-id486 . -1) (#(" " 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -2140) (undo-tree-id487 . -1) 2141 (2139 . 2141) (2138 . 2139) (2136 . 2138) (2135 . 2136) 2015) nil (25747 18021 586475 940000) 0 nil])
([nil nil ((151 . 156) (#("small" 0 5 (wrap-prefix "" line-prefix "" fontified t)) . 151) (undo-tree-id481 . -4) (undo-tree-id482 . -5) (undo-tree-id483 . -5)) nil (25747 18021 586462 181000) 0 nil])
([nil nil ((199 . 202) (178 . 199) (#("s" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -178) (undo-tree-id236 . -1) (#("t" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -179) (undo-tree-id237 . -1) (#("u" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -180) (undo-tree-id238 . -1) 181 (#("f" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -181) (undo-tree-id239 . -1) (#("f" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -182) (undo-tree-id240 . -1) (#(" " 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -183) (undo-tree-id241 . -1) (#("I" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -184) (undo-tree-id242 . -1) (#("'" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -185) (undo-tree-id243 . -1) (#("v" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -186) (undo-tree-id244 . -1) (#("e" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -187) (undo-tree-id245 . -1) (#(" " 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -188) (undo-tree-id246 . -1) 189 (178 . 189) (#("features I've added." 0 20 (wrap-prefix "" line-prefix "" fontified t)) . 178) (undo-tree-id247 . -19) (undo-tree-id248 . -9) (undo-tree-id249 . -9) (undo-tree-id250 . -9) (undo-tree-id251 . -9) (undo-tree-id252 . -9) (undo-tree-id253 . -9) (undo-tree-id254 . -9) (undo-tree-id255 . -9) (undo-tree-id256 . -9) (undo-tree-id257 . -9) (undo-tree-id258 . -9) (undo-tree-id259 . -9) (undo-tree-id260 . -9) (undo-tree-id261 . -9) (undo-tree-id262 . -9) (undo-tree-id263 . -9) (undo-tree-id264 . -9) (undo-tree-id265 . -9) (undo-tree-id266 . -9) (undo-tree-id267 . -9) (undo-tree-id268 . -9) (undo-tree-id269 . -9) (undo-tree-id270 . -9) (undo-tree-id271 . -9) (undo-tree-id272 . -9) (undo-tree-id273 . -9) (undo-tree-id274 . -9) (undo-tree-id275 . -9) (undo-tree-id276 . -9) (undo-tree-id277 . -9) (undo-tree-id278 . -9) (undo-tree-id279 . -9) (undo-tree-id280 . -9) (undo-tree-id281 . -9) (undo-tree-id282 . -9) (undo-tree-id283 . -9) (undo-tree-id284 . -9) (undo-tree-id285 . -9) (undo-tree-id286 . -9) (undo-tree-id287 . -9) (undo-tree-id288 . -9) (undo-tree-id289 . -9) (undo-tree-id290 . -9) (undo-tree-id291 . -9) (undo-tree-id292 . -10) (undo-tree-id293 . -8) (undo-tree-id294 . -8) (undo-tree-id295 . -8) (undo-tree-id296 . -8) (undo-tree-id297 . -8) (undo-tree-id298 . -8) (undo-tree-id299 . -8) (undo-tree-id300 . -8) (undo-tree-id301 . -8) (undo-tree-id302 . -8) (undo-tree-id303 . -8) (undo-tree-id304 . -8) (undo-tree-id305 . -8) (undo-tree-id306 . -8) (undo-tree-id307 . -8) (undo-tree-id308 . -8) (undo-tree-id309 . -8) (undo-tree-id310 . -8) (undo-tree-id311 . -8) (undo-tree-id312 . -8) (undo-tree-id313 . -8) (undo-tree-id314 . -8) (undo-tree-id315 . -8) (undo-tree-id316 . -8) (undo-tree-id317 . -8) (undo-tree-id318 . -8) (undo-tree-id319 . -8) (undo-tree-id320 . -8) (undo-tree-id321 . -8) (undo-tree-id322 . -8) (undo-tree-id323 . -8) (undo-tree-id324 . -9) (undo-tree-id325 . -7) (undo-tree-id326 . -7) (undo-tree-id327 . -7) (undo-tree-id328 . -7) (undo-tree-id329 . -7) (undo-tree-id330 . -7) (undo-tree-id331 . -7) (undo-tree-id332 . -7) (undo-tree-id333 . -7) (undo-tree-id334 . -7) (undo-tree-id335 . -7) (undo-tree-id336 . -7) (undo-tree-id337 . -7) (undo-tree-id338 . -7) (undo-tree-id339 . -7) (undo-tree-id340 . -7) (undo-tree-id341 . -7) (undo-tree-id342 . -8) (undo-tree-id343 . -6) (undo-tree-id344 . -6) (undo-tree-id345 . -6) (undo-tree-id346 . -6) (undo-tree-id347 . -6) (undo-tree-id348 . -6) (undo-tree-id349 . -6) (undo-tree-id350 . -6) (undo-tree-id351 . -6) (undo-tree-id352 . -6) (undo-tree-id353 . -6) (undo-tree-id354 . -6) (undo-tree-id355 . -6) (undo-tree-id356 . -6) (undo-tree-id357 . -6) (undo-tree-id358 . -6) (undo-tree-id359 . -6) (undo-tree-id360 . -7) (undo-tree-id361 . -5) (undo-tree-id362 . -5) (undo-tree-id363 . -5) (undo-tree-id364 . -5) (undo-tree-id365 . -5) (undo-tree-id366 . -5) (undo-tree-id367 . -5) (undo-tree-id368 . -5) (undo-tree-id369 . -5) (undo-tree-id370 . -5) (undo-tree-id371 . -5) (undo-tree-id372 . -5) (undo-tree-id373 . -5) (undo-tree-id374 . -5) (undo-tree-id375 . -5) (undo-tree-id376 . -5) (undo-tree-id377 . -5) (undo-tree-id378 . -6) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -5) (undo-tree-id397 . -3) (undo-tree-id398 . -3) (undo-tree-id399 . -3) (undo-tree-id400 . -3) (undo-tree-id401 . -3) (undo-tree-id402 . -3) (undo-tree-id403 . -3) (undo-tree-id404 . -3) (undo-tree-id405 . -3) (undo-tree-id406 . -3) (undo-tree-id407 . -3) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (undo-tree-id412 . -3) (undo-tree-id413 . -3) (undo-tree-id414 . -4) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -2) (undo-tree-id429 . -2) (undo-tree-id430 . -2) (undo-tree-id431 . -2) (undo-tree-id432 . -2) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -2) (undo-tree-id437 . -2) (undo-tree-id438 . -2) (undo-tree-id439 . -2) (undo-tree-id440 . -2) (undo-tree-id441 . -2) (undo-tree-id442 . -2) (undo-tree-id443 . -2) (undo-tree-id444 . -2) (undo-tree-id445 . -2) (undo-tree-id446 . -3) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -2) (undo-tree-id479 . -20) (undo-tree-id480 . -20)) nil (25747 18021 586452 54000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2226) (undo-tree-id650 . -1) (#("~" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2227) (undo-tree-id651 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2228) (undo-tree-id652 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2229) (undo-tree-id653 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2230) (undo-tree-id654 . -1) (#("~" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2231) (undo-tree-id655 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2232) (undo-tree-id656 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2233) (undo-tree-id657 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2234) (undo-tree-id658 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2235) (undo-tree-id659 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2236) (undo-tree-id660 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2237) (undo-tree-id661 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2238) (undo-tree-id662 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2239) (undo-tree-id663 . -1) 2240 (2231 . 2240) (2227 . 2228) (2225 . 2230) (2204 . 2225) (2199 . 2204) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2199) (undo-tree-id664 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2200) (undo-tree-id665 . -1) 2201 (2188 . 2201) (t 25747 18021 588191 965000)) nil (25747 18250 723591 241000) 0 nil])
([nil nil ((2260 . 2268) (#("_" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2260) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (#("E" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2261) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) 2262 (2259 . 2262) (2258 . 2259) (2249 . 2258) (#("O" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2249) (undo-tree-id637 . -1) (#("U" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2250) (undo-tree-id638 . -1) (#("R" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2251) (undo-tree-id639 . -1) (#("C" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2252) (undo-tree-id640 . -1) (#("E" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2253) (undo-tree-id641 . -1) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2254) (undo-tree-id642 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2255) (undo-tree-id643 . -1) (#("c" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2256) (undo-tree-id644 . -1) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2257) (undo-tree-id645 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2258) (undo-tree-id646 . -1) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2259) (undo-tree-id647 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2260) (undo-tree-id648 . -1) 2261 (2252 . 2261) (2245 . 2252) (#("B" 0 1 (face org-meta-line font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2245) (undo-tree-id649 . -1) 2246 (2240 . 2246) (2239 . 2240) (2226 . 2239)) nil (25747 18250 723545 774000) 0 nil])
([nil nil ((2325 . 2327) (2322 . 2325) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2322) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) 2323 (2307 . 2322) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2307) (undo-tree-id565 . -1) (#("w" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2308) (undo-tree-id566 . -1) 2309 (2304 . 2309) (2299 . 2304) (2298 . 2300) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -2298) (undo-tree-id567 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2299) (2298 . 2300) (2295 . 2298) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2295) (undo-tree-id568 . -1) 2296 (2290 . 2295) (2269 . 2290) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2269) (undo-tree-id569 . -1) (#("b" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2270) (undo-tree-id570 . -1) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2271) (undo-tree-id571 . -1) 2272 (2262 . 2272) (2261 . 2263) (2258 . 2261) 2248) nil (25747 18250 723515 253000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2685 . 2686) (nil fontified nil 2644 . 2686) (2644 . 2686) (t 25747 18250 726852 665000)) nil (25747 18912 623088 906000) 0 nil])
([nil nil ((nil line-prefix #("  " 0 2 (face org-indent)) 2686 . 2687) (nil wrap-prefix #("  " 0 2 (face org-indent)) 2686 . 2687) (nil fontified t 2686 . 2687) (nil face org-link 2686 . 2687) (nil font-lock-multiline t 2686 . 2687) (2686 . 2687) 2685) nil (25747 18912 623077 33000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3016 . 3017) (nil fontified nil 2981 . 3017) (nil fontified nil 2922 . 2981) (nil fontified nil 2873 . 2922) (nil fontified nil 2847 . 2873) (nil fontified nil 2774 . 2847) (nil fontified nil 2757 . 2774) (nil fontified nil 2718 . 2757) (nil fontified nil 2699 . 2718) (nil fontified nil 2678 . 2699) (nil fontified nil 2654 . 2678) (nil fontified nil 2561 . 2654) (nil fontified nil 2544 . 2561) (nil fontified nil 2505 . 2544) (nil fontified nil 2486 . 2505) (nil fontified nil 2466 . 2486) (nil fontified nil 2442 . 2466) (nil fontified nil 2426 . 2442) (nil fontified nil 2393 . 2426) (nil fontified nil 2378 . 2393) (nil fontified nil 2346 . 2378) (nil fontified nil 2327 . 2346) (nil fontified nil 2294 . 2327) (nil fontified nil 2259 . 2294) (2259 . 3017) (#("  (define-public hello-parameterized
  (package-with-parameters
  ()
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 3 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 3 16 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 16 17 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 17 36 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 36 37 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 37 39 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 39 40 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 40 64 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 64 66 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 66 67 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 67 68 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 68 69 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2259) (undo-tree-id685 . -69) (undo-tree-id686 . 2) (undo-tree-id687 . -68) (undo-tree-id688 . -68) (undo-tree-id689 . -68) 2328 (t 25747 18912 630228 153000)) nil (25747 19428 483563 766000) 0 nil])
([nil nil ((#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3139) (undo-tree-id670 . -1) 3140 (2259 . 2261) (2294 . 2296) (#("	" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("           " 0 2 (face org-indent) 2 11 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2294) (2302 . 2304) (#("		" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2327) (2330 . 2336) (2346 . 2347) (#("		" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2346) (2349 . 2354) (2378 . 2380) (#("		" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2378) (2381 . 2385) (2393 . 2395) (#("		" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2393) (2398 . 2402) (2426 . 2434) (#("			" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2426) (2442 . 2449) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("           " 0 2 (face org-indent) 2 11 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2442) (2447 . 2450) (2466 . 2467) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2466) (2473 . 2482) (2486 . 2490) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2486) (2493 . 2499) (2505 . 2512) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2505) (2514 . 2517) (2544 . 2554) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("                 " 0 2 (face org-indent) 2 17 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2544) (2561 . 2573) (#("					" 0 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("              " 0 2 (face org-indent) 2 14 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2561) (2654 . 2659) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("           " 0 2 (face org-indent) 2 11 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2654) (2659 . 2664) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2678) (2685 . 2695) (2699 . 2702) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2699) (2706 . 2713) (2718 . 2724) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2718) (2727 . 2731) (2757 . 2766) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("                 " 0 2 (face org-indent) 2 17 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2757) (2768 . 2769) (2774 . 2785) (#("					" 0 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("              " 0 2 (face org-indent) 2 14 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2774) (2781 . 2782) (2847 . 2855) (#("			" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2847) (2873 . 2881) (#("			" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2873) (2922 . 2923) (#("		" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2922) (2925 . 2930) (2981 . 2995) (#("						" 0 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2981) 2259 (3017 . 3018) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3018) (undo-tree-id671 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3019) (undo-tree-id672 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3020) (undo-tree-id673 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3021) (undo-tree-id674 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3022) (undo-tree-id675 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3023) (undo-tree-id676 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3024) (undo-tree-id677 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3025) (undo-tree-id678 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("           " 0 2 (face org-indent) 2 11 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3026) (undo-tree-id679 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3027) (undo-tree-id680 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3028) (undo-tree-id681 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("              " 0 2 (face org-indent) 2 14 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3029) (undo-tree-id682 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3030) (undo-tree-id683 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3031) (undo-tree-id684 . -1) 3032 (3017 . 3032)) nil (25747 19428 483551 334000) 0 nil])
([nil nil ((#(")" 0 1 (face (prism-level-1 rainbow-delimiters-depth-4-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -3029) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (#(")" 0 1 (face (prism-level-0 rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -3030) (undo-tree-id668 . -1) 3031 (3138 . 3139) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -3138) (3138 . 3139) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -3138) (undo-tree-id669 . -1) 3139) nil (25747 19428 483524 166000) 0 nil])
([nil nil ((#("(" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -3152) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (#(")" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 3153) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3153) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3154) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3155) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (#("k" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3156) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) 3157 (3153 . 3157) (3152 . 3154) (#("g" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3152) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) 3153 (3148 . 3153) (#("N" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3148) (undo-tree-id1496 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3149) (undo-tree-id1497 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3150) (undo-tree-id1498 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3151) (undo-tree-id1499 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3152) (undo-tree-id1500 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3153) (undo-tree-id1501 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3154) (undo-tree-id1502 . -1) 3155 (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3155) (undo-tree-id1503 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3156) (undo-tree-id1504 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3157) (undo-tree-id1505 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3158) (undo-tree-id1506 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3159) (undo-tree-id1507 . -1) (#("'" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3160) (undo-tree-id1508 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3161) (undo-tree-id1509 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3162) (undo-tree-id1510 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3163) (undo-tree-id1511 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3164) (undo-tree-id1512 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3165) (undo-tree-id1513 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3166) (undo-tree-id1514 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3167) (undo-tree-id1515 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3168) (undo-tree-id1516 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3169) (undo-tree-id1517 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3170) (undo-tree-id1518 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3171) (undo-tree-id1519 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3172) (undo-tree-id1520 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3173) (undo-tree-id1521 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3174) (undo-tree-id1522 . -1) (#("k" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3175) (undo-tree-id1523 . -1) 3176 (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3176) (undo-tree-id1524 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3177) (undo-tree-id1525 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3178) (undo-tree-id1526 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3179) (undo-tree-id1527 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3180) (undo-tree-id1528 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -3181) (undo-tree-id1529 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -3182) (undo-tree-id1530 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3183) (undo-tree-id1531 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3184) (undo-tree-id1532 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3185) (undo-tree-id1533 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3186) (undo-tree-id1534 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3187) (undo-tree-id1535 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3188) (undo-tree-id1536 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3189) (undo-tree-id1537 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3190) (undo-tree-id1538 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3191) (undo-tree-id1539 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3192) (undo-tree-id1540 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3193) (undo-tree-id1541 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3194) (undo-tree-id1542 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3195) (undo-tree-id1543 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3196) (undo-tree-id1544 . -1) 3197 (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3197) (undo-tree-id1545 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3198) (undo-tree-id1546 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3199) (undo-tree-id1547 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3200) (undo-tree-id1548 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3201) (undo-tree-id1549 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3202) (undo-tree-id1550 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3203) (undo-tree-id1551 . -1) (#("b" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3204) (undo-tree-id1552 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3205) (undo-tree-id1553 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3206) (undo-tree-id1554 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3207) (undo-tree-id1555 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3208) (undo-tree-id1556 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3209) (undo-tree-id1557 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3210) (undo-tree-id1558 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3211) (undo-tree-id1559 . -1) (#("g" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3212) (undo-tree-id1560 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3213) (undo-tree-id1561 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3214) (undo-tree-id1562 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3215) (undo-tree-id1563 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3216) (undo-tree-id1564 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3217) (undo-tree-id1565 . -1) 3218 (3197 . 3218) (3191 . 3197) (3170 . 3191) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3170) (undo-tree-id1566 . -1) 3171 (3169 . 3171) (3148 . 3169) (3147 . 3148) (t 25747 19428 485819 173000) 3146) nil (25747 20719 391872 9000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3545 . 3546) (nil fontified nil 3502 . 3546) (3502 . 3546) (t 25747 20719 398149 609000)) nil (25747 26382 892994 142000) 0 nil])
([nil nil ((2276 . 2295) (#("hello-parameterized" 0 19 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2276) (undo-tree-id1747 . -18) (undo-tree-id1748 . -4) (t 25747 26382 907111 148000)) nil (25747 28980 890479 400000) 0 nil])
([nil nil ((2369 . 2374) (#("hello" 0 5 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2369) (undo-tree-id1746 . -4)) nil (25747 28980 890477 514000) 0 nil])
([nil nil ((2349 . 2353) (#("y" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2349) (undo-tree-id1744 . -1) 2350 (2348 . 2350) (#("hello" 0 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2348) (undo-tree-id1745 . -4)) nil (25747 28980 890475 70000) 0 nil])
([nil nil ((#("(package-parameter
             (name \"nls!\")
             (transforms
               (build-system/transform-match
                 (_ ->
              (with-configure-flag . \"hello-parameterized=--disable-nls\"))))" 0 1 (face (rainbow-delimiters-depth-8-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 19 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 19 22 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 22 32 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 32 33 (face (rainbow-delimiters-depth-9-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 33 38 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 38 44 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 44 45 (face (rainbow-delimiters-depth-9-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 45 46 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 46 49 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 49 52 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 52 59 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 59 60 (face (rainbow-delimiters-depth-9-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 60 71 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 71 77 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                 " 0 2 (face org-indent) 2 17 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 77 82 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                 " 0 2 (face org-indent) 2 17 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 82 86 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                 " 0 2 (face org-indent) 2 17 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 86 87 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                 " 0 2 (face org-indent) 2 17 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 87 116 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                 " 0 2 (face org-indent) 2 17 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 116 125 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 125 132 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 132 133 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 133 134 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 134 137 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 137 138 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 138 139 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 139 150 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 150 152 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 152 153 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 153 154 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 154 176 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 176 211 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 211 212 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 212 213 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 213 214 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 214 215 (face (rainbow-delimiters-depth-9-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2728) (undo-tree-id1740 . -138) (undo-tree-id1741 . -214) (undo-tree-id1742 . -138) (undo-tree-id1743 . 76)) nil (25747 28980 890469 762000) 0 nil])
([nil nil ((2705 . 2706) (2701 . 2705) (#("h" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link (:uri "https://git.savannah.gnu.org/git/h.git") help-echo "LINK: https://git.savannah.gnu.org/git/h.git" fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2701) (undo-tree-id1675 . -1) (#("e" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link (:uri "https://git.savannah.gnu.org/git/he.git") help-echo "LINK: https://git.savannah.gnu.org/git/he.git" fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2702) (undo-tree-id1676 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link (:uri "https://git.savannah.gnu.org/git/hel.git") help-echo "LINK: https://git.savannah.gnu.org/git/hel.git" fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2703) (undo-tree-id1677 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link (:uri "https://git.savannah.gnu.org/git/hell.git") help-echo "LINK: https://git.savannah.gnu.org/git/hell.git" fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2704) (undo-tree-id1678 . -1) (#("o" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight src-block t font-lock-fontified t htmlize-link (:uri "https://git.savannah.gnu.org/git/hello.git") help-echo "LINK: https://git.savannah.gnu.org/git/hello.git" fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2705) (undo-tree-id1679 . -1) 2706 (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2716) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2717) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2718) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2719) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2720) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) 2721 (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2721) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2722) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2723) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2724) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("           " 0 2 (face org-indent) 2 11 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2725) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2726) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2727) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) 2728) nil (25747 28980 890464 35000) 0 nil])
([nil nil ((2860 . 2864) (#("y" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2860) (undo-tree-id1672 . -1) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2861) (undo-tree-id1673 . -1) 2862 (2859 . 2862) (#("hello" 0 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2859) (undo-tree-id1674 . -4)) nil (25747 28980 890428 765000) 0 nil])
([nil nil ((#("(inputs (parameter/modify-inputs (package-inputs guile)
                ('nls! (delete gettext))))" 0 1 (face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 8 9 (face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 9 33 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 33 34 (face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 34 54 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 54 55 (face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 55 56 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 56 70 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 70 72 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 72 73 (face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 73 79 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 79 80 (face (rainbow-delimiters-depth-7-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 80 94 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 94 95 (face (rainbow-delimiters-depth-7-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 95 96 (face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 96 97 (face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 97 98 (face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2810) (undo-tree-id1670 . 44) (undo-tree-id1671 . -97)) nil (25747 28980 890424 85000) 0 nil])
([nil nil ((#("       ))
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 2 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 7 8 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 8 9 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 9 10 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2803) (undo-tree-id1667 . 3) (undo-tree-id1668 . -9) (undo-tree-id1669 . -7) 2810) nil (25747 28980 890421 291000) 0 nil])
([nil nil ((#("(nls! . #t)" 0 1 (face (rainbow-delimiters-depth-7-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 10 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 10 11 (face (rainbow-delimiters-depth-7-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 2788) (undo-tree-id1666 . -10)) nil (25747 28980 890417 590000) 0 nil])
([nil nil ((2791 . 2792) (#(")" 0 1 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -2791) (2790 . 2792) (#(")" 0 1 (face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2790) (2790 . 2791) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2787) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) 2788) nil (25747 28980 890414 726000) 0 nil])
([nil nil ((2934 . 2937) (3088 . 3089) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -3088) (3088 . 3089) (3073 . 3086) (3072 . 3074) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3072) (undo-tree-id1587 . -1) 3073 (#("(" 0 1 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -3073) (undo-tree-id1588 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 3074) (3070 . 3075) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3070) (undo-tree-id1589 . -1) 3071 (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3071) (undo-tree-id1590 . -1) 3072 (3066 . 3072) (3065 . 3067) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                              " 0 2 (face org-indent) 2 30 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3065) (undo-tree-id1591 . -1) 3066 (3061 . 3066) (3040 . 3061) (3037 . 3040) (3032 . 3035) (#("x" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3032) (undo-tree-id1592 . -1) (#("y" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3033) (undo-tree-id1593 . -1) (#("z" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3034) (undo-tree-id1594 . -1) 3035 (3029 . 3035) (3022 . 3029) (3020 . 3023) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3019) (undo-tree-id1595 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3020) (undo-tree-id1596 . -1) 3021 (3017 . 3021) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3017) (undo-tree-id1597 . -1) (#("y" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3018) (undo-tree-id1598 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3019) (undo-tree-id1599 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3020) (undo-tree-id1600 . -1) 3021 (3017 . 3021) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                             " 0 2 (face org-indent) 2 29 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3017) (undo-tree-id1601 . -1) 3018 (3016 . 3018) (3015 . 3017) (3014 . 3016) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                              " 0 2 (face org-indent) 2 30 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3014) (undo-tree-id1602 . -1) 3015 (3003 . 3015) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -3003) (undo-tree-id1603 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 3004) (3003 . 3005) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3003) (undo-tree-id1604 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 2 (face org-indent) 2 20 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3004) (undo-tree-id1605 . -1) 3005 (2989 . 3005) (2986 . 2989) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2986) (undo-tree-id1606 . -1) 2987 (2984 . 2985) (2963 . 2984) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2963) (undo-tree-id1607 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2964) (undo-tree-id1608 . -1) (#("p" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2965) (undo-tree-id1609 . -1) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2966) (undo-tree-id1610 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2967) (undo-tree-id1611 . -1) 2968 (2966 . 2968) (2963 . 2966) (2951 . 2964) (#("f" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2951) (undo-tree-id1612 . -1) 2952 (2950 . 2952) (#("f" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2950) (undo-tree-id1613 . -1) 2951 (2938 . 2951) (2937 . 2939) (2934 . 2937) (2933 . 2934) (#(")" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -2933) (2933 . 2934) (2922 . 2933) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2922) (undo-tree-id1614 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2923) (undo-tree-id1615 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2924) (undo-tree-id1616 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2925) (undo-tree-id1617 . -1) 2926 (2925 . 2926) (2922 . 2925) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2922) (undo-tree-id1618 . -1) 2923 (2916 . 2921) (#("x" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2916) (undo-tree-id1619 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2917) (undo-tree-id1620 . -1) (#("b" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2918) (undo-tree-id1621 . -1) 2919 (2916 . 2919) (2909 . 2917) (2902 . 2909) (2901 . 2903) (2898 . 2901) (2879 . 2898) (#("a" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2879) (undo-tree-id1622 . -1) (#("k" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2880) (undo-tree-id1623 . -1) 2881 (2863 . 2881) (#("," 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2863) (undo-tree-id1624 . -1) (#("," 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2864) (undo-tree-id1625 . -1) (#("," 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2865) (undo-tree-id1626 . -1) 2866 (2861 . 2866) (2860 . 2861) (2857 . 2860) (2850 . 2857) (2851 . 2860) (#(";" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2851) (undo-tree-id1627 . -1) (#(";" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2852) (undo-tree-id1628 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2853) (undo-tree-id1629 . -1) (#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2854) (undo-tree-id1630 . -1) (#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2855) (undo-tree-id1631 . -1) (#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2856) (undo-tree-id1632 . -1) 2857 (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2857) (undo-tree-id1633 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2858) (undo-tree-id1634 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2859) (undo-tree-id1635 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2860) (undo-tree-id1636 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2861) (undo-tree-id1637 . -1) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2862) (undo-tree-id1638 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2863) (undo-tree-id1639 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2864) (undo-tree-id1640 . -1) (#("p" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2865) (undo-tree-id1641 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2866) (undo-tree-id1642 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2867) (undo-tree-id1643 . -1) (#("k" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2868) (undo-tree-id1644 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2869) (undo-tree-id1645 . -1) (#("g" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2870) (undo-tree-id1646 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2871) (undo-tree-id1647 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2872) (undo-tree-id1648 . -1) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2873) (undo-tree-id1649 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2874) (undo-tree-id1650 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2875) (undo-tree-id1651 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2876) (undo-tree-id1652 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2877) (undo-tree-id1653 . -1) 2878 (2870 . 2878) (2858 . 2870) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2858) (undo-tree-id1654 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2859) (undo-tree-id1655 . -1) 2860 (2851 . 2860) (#(";" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2851) (undo-tree-id1656 . -1) 2852 (2851 . 2852) (2850 . 2851) (2843 . 2850) (2839 . 2843) (2838 . 2839) (2835 . 2838) (2814 . 2835) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2814) (undo-tree-id1657 . -1) 2815 (2808 . 2815) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2808) (undo-tree-id1658 . -1) 2809 (2803 . 2809) (#("T" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2803) (undo-tree-id1659 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2804) (undo-tree-id1660 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2805) (undo-tree-id1661 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2806) (undo-tree-id1662 . -1) 2807) nil (25747 28980 890393 774000) 0 nil])
([nil nil ((#("," 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2643) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (#(" " 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2644) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) 2645 (2642 . 2645) (2627 . 2642) (#("c" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2627) (undo-tree-id1585 . -1) (#("u" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2628) (undo-tree-id1586 . -1) 2629 (2616 . 2629)) nil (25747 28980 890060 486000) 0 nil])
([nil nil ((2675 . 2680) (#("h" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2675) (undo-tree-id1576 . -1) (#("e" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2676) (undo-tree-id1577 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2677) (undo-tree-id1578 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2678) (undo-tree-id1579 . -1) (#("o" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2679) (undo-tree-id1580 . -1) 2680) nil (25747 28980 890054 201000) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2770) (undo-tree-id1571 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2771) (undo-tree-id1572 . -1) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2772) (undo-tree-id1573 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2773) (undo-tree-id1574 . -1) (#("!" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -2774) (undo-tree-id1575 . -1) 2775) nil (25747 28980 890046 588000) 0 nil])
([nil nil ((2985 . 2987) (2882 . 2884) (2921 . 2923) (2958 . 2960) (2975 . 2976) (2977 . 2978) (2981 . 2982) (2983 . 2984) (3033 . 3034) (3060 . 3061) (3084 . 3086) 2880 (2974 . 2977) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2974) (undo-tree-id1567 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2975) (undo-tree-id1568 . -1) 2976 (2959 . 2975) (2958 . 2960) (2959 . 2961) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2958) (undo-tree-id1569 . -2) (2960 . 2961) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2957) (undo-tree-id1570 . -1) 2880 (2959 . 2962) 2958) nil (25747 28980 890032 829000) 0 nil])
([nil nil ((368 . 376) (t 25747 28980 891282 28000)) nil (25747 30953 534223 679000) 0 nil])
([nil nil ((586 . 592) (571 . 575) (#("t" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -569) (undo-tree-id2214 . -1) (#("e" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -570) (undo-tree-id2215 . -1) (#("d" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -571) (undo-tree-id2216 . -1) (#(" " 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -572) (undo-tree-id2217 . -1) (#("v" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -573) (undo-tree-id2218 . -1) (#("a" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -574) (undo-tree-id2219 . -1) (#("l" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -575) (undo-tree-id2220 . -1) (#("u" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -576) (undo-tree-id2221 . -1) (#("e" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -577) (undo-tree-id2222 . -1) (#("s" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -578) (undo-tree-id2223 . -1) 579 (559 . 579) (#("t" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -559) (undo-tree-id2224 . -1) 560 (550 . 560)) nil (25747 30953 534222 677000) 0 nil])
([nil nil ((480 . 487) (#("Grabbing" 0 8 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 480) (undo-tree-id2213 . -7)) nil (25747 30953 534219 281000) 0 nil])
([nil nil ((650 . 670) (#("v" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -650) (undo-tree-id2200 . -1) (#("a" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -651) (undo-tree-id2201 . -1) (#("l" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -652) (undo-tree-id2202 . -1) 653 (646 . 653) (#("t" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -646) (undo-tree-id2203 . -1) (#("h" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -647) (undo-tree-id2204 . -1) (#("e" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -648) (undo-tree-id2205 . -1) (#(" " 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -649) (undo-tree-id2206 . -1) (#("v" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -650) (undo-tree-id2207 . -1) (#("a" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -651) (undo-tree-id2208 . -1) (#("l" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -652) (undo-tree-id2209 . -1) (#("u" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -653) (undo-tree-id2210 . -1) (#("e" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -654) (undo-tree-id2211 . -1) (#("s" 0 1 (wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -655) (undo-tree-id2212 . -1) 656) nil (25747 30953 534217 407000) 0 nil])
([nil nil ((641 . 655)) nil (25747 30953 534213 660000) 0 nil])
([nil nil ((2247 . 2258) (2226 . 2247) (#(";" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2226) (undo-tree-id2181 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2227) (undo-tree-id2182 . -1) (#("g" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2228) (undo-tree-id2183 . -1) 2229 (2226 . 2229) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2226) (undo-tree-id2184 . -1) 2227 (2226 . 2227) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2226) (undo-tree-id2185 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2227) (undo-tree-id2186 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2228) (undo-tree-id2187 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2229) (undo-tree-id2188 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2230) (undo-tree-id2189 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2231) (undo-tree-id2190 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2232) (undo-tree-id2191 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2233) (undo-tree-id2192 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2234) (undo-tree-id2193 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2235) (undo-tree-id2194 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2236) (undo-tree-id2195 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2237) (undo-tree-id2196 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2238) (undo-tree-id2197 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2239) (undo-tree-id2198 . -1) 2240 (2224 . 2240) (2203 . 2224) (2202 . 2203) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2202) (undo-tree-id2199 . -1) 2203) nil (25747 30953 534212 208000) 0 nil])
([nil nil ((#("In the next section I'll go over how one can use these 
" 0 55 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 55 56 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2203) (undo-tree-id2178 . -54) (undo-tree-id2179 . 1) (undo-tree-id2180 . -55) 2257) nil (25747 30953 534205 595000) 0 nil])
([nil nil ((2277 . 2278) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2277) (undo-tree-id2147 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2278) (undo-tree-id2148 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2279) (undo-tree-id2149 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2280) (undo-tree-id2150 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2281) (undo-tree-id2151 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2282) (undo-tree-id2152 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2283) (undo-tree-id2153 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2284) (undo-tree-id2154 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2285) (undo-tree-id2155 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2286) (undo-tree-id2156 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2287) (undo-tree-id2157 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2288) (undo-tree-id2158 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2289) (undo-tree-id2159 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2290) (undo-tree-id2160 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2291) (undo-tree-id2161 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2292) (undo-tree-id2162 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2293) (undo-tree-id2163 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2294) (undo-tree-id2164 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2295) (undo-tree-id2165 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2296) (undo-tree-id2166 . -1) (#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2297) (undo-tree-id2167 . -1) 2298 (2253 . 2257) (#("N" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2253) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (#("U" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2254) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2255) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) 2256 (#("Hello" 0 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2256) (undo-tree-id2177 . -4)) nil (25747 30953 534202 419000) 0 nil])
([nil nil ((2317 . 2323) (2343 . 2344) (#("," 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2343) (undo-tree-id2086 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2344) (undo-tree-id2087 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2345) (undo-tree-id2088 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2346) (undo-tree-id2089 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2347) (undo-tree-id2090 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2348) (undo-tree-id2091 . -1) (#("v" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2349) (undo-tree-id2092 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2350) (undo-tree-id2093 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2351) (undo-tree-id2094 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2352) (undo-tree-id2095 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2353) (undo-tree-id2096 . -1) 2354 (2353 . 2354) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2353) (undo-tree-id2097 . -1) 2354 (2344 . 2354) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2344) (undo-tree-id2098 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2345) (undo-tree-id2099 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2346) (undo-tree-id2100 . -1) 2347 (2343 . 2347) (2322 . 2343) (2317 . 2322) (2296 . 2317) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2296) (undo-tree-id2101 . -1) 2297 (2286 . 2297) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2286) (undo-tree-id2102 . -1) 2287 (2286 . 2287) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2286) (undo-tree-id2103 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2287) (undo-tree-id2104 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2288) (undo-tree-id2105 . -1) 2289 (#("(" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -2289) (undo-tree-id2106 . -1) (#(")" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2290) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2290) (undo-tree-id2107 . -1) 2291 (2290 . 2291) (2279 . 2291) (2278 . 2279) (3316 . 3335) (#("&" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3316) (undo-tree-id2108 . -1) 3317 (3300 . 3317) (3293 . 3300) (3272 . 3293) (3251 . 3272) (3250 . 3251) (3240 . 3250) (3230 . 3240) (3209 . 3230) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3209) (undo-tree-id2109 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3210) (undo-tree-id2110 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3211) (undo-tree-id2111 . -1) 3212 (3199 . 3212) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3199) (undo-tree-id2112 . -1) 3200 (3192 . 3200) (3171 . 3192) (3150 . 3171) (3129 . 3150) (3120 . 3129) (#("H" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3120) (undo-tree-id2113 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3121) (undo-tree-id2114 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3122) (undo-tree-id2115 . -1) 3123 (3119 . 3123) (#("I" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3119) (undo-tree-id2116 . -1) (#("'" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3120) (undo-tree-id2117 . -1) 3121 (3119 . 3121) (#("W" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3119) (undo-tree-id2118 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3120) (undo-tree-id2119 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3121) (undo-tree-id2120 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3122) (undo-tree-id2121 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3123) (undo-tree-id2122 . -1) 3124 (3119 . 3124) (3118 . 3119) (3117 . 3118) (#("," 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3117) (undo-tree-id2123 . -1) 3118 (3103 . 3118) (3094 . 3103) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3094) (undo-tree-id2124 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3095) (undo-tree-id2125 . -1) 3096 (3087 . 3096) (3066 . 3087) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3066) (undo-tree-id2126 . -1) 3067 (3060 . 3067) (3039 . 3060) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3039) (undo-tree-id2127 . -1) 3040 (3033 . 3040) (3023 . 3033) (3019 . 3023) (3018 . 3019) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3018) (undo-tree-id2128 . -1) 3019 (3003 . 3019) (2982 . 3003) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2982) (undo-tree-id2129 . -1) 2983 (2974 . 2983) (2955 . 2974) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2955) (undo-tree-id2130 . -1) 2956 (2953 . 2956) (2932 . 2953) (#("g" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2932) (undo-tree-id2131 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2933) (undo-tree-id2132 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2934) (undo-tree-id2133 . -1) (#("b" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2935) (undo-tree-id2134 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2936) (undo-tree-id2135 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2937) (undo-tree-id2136 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2938) (undo-tree-id2137 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2939) (undo-tree-id2138 . -1) 2940 (2934 . 2940) (2913 . 2934) (2892 . 2913) (#("," 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2892) (undo-tree-id2139 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2893) (undo-tree-id2140 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2894) (undo-tree-id2141 . -1) 2895 (2891 . 2895) (2877 . 2891) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2877) (undo-tree-id2142 . -1) 2878 (2875 . 2878) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2875) (undo-tree-id2143 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2876) (undo-tree-id2144 . -1) 2877 (2864 . 2877) (#("W" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2864) (undo-tree-id2145 . -1) 2865 (2864 . 2865) (#("I" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2864) (undo-tree-id2146 . -1) 2865 (2864 . 2865) (2864 . 2865)) nil (25747 30953 534188 734000) 0 nil])
([nil nil ((2391 . 2408) (2370 . 2391) (2349 . 2370) (#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2349) (undo-tree-id2085 . -1) 2350) nil (25747 30953 534168 285000) 0 nil])
([nil nil ((2407 . 2408) (#("," 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2407) (undo-tree-id2084 . -1) 2408) nil (25747 30953 534167 474000) 0 nil])
([nil nil ((5521 . 5526) (#("  " 0 2 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . 5520) (undo-tree-id1657 . -2) (5520 . 5523) (#("  " 0 2 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . 5519) (undo-tree-id1658 . -2) (5518 . 5522) (5506 . 5518) (#("." 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5506) (undo-tree-id1659 . -1) 5507 (5496 . 5507) (5475 . 5496) (5454 . 5475) (#("v" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5454) (undo-tree-id1660 . -1) (#("t" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5455) (undo-tree-id1661 . -1) (#("h" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5456) (undo-tree-id1662 . -1) 5457 (5455 . 5457) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5455) (undo-tree-id1663 . -1) (#("l" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5456) (undo-tree-id1664 . -1) (#("u" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5457) (undo-tree-id1665 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5458) (undo-tree-id1666 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5459) (undo-tree-id1667 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5460) (undo-tree-id1668 . -1) 5461 (5452 . 5461) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5452) (undo-tree-id1669 . -1) 5453 (5444 . 5453) (5434 . 5443) (5433 . 5434) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5433) (undo-tree-id1670 . -1) 5434 (5426 . 5434) (5407 . 5426) (5405 . 5408) (#("." 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5384) (undo-tree-id1671 . -1) 5385 (#("." 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5274) (undo-tree-id1672 . -1) 5275 (5288 . 5289) (5388 . 5406) (5276 . 5388) (#("- 
- ~canonical~ which contains /canonical combinations/, a proposed feature for solving the substitute problem." 0 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (face org-superstar-item composition (1 1 [8211]) fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 4 5 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 5 6 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 6 15 (org-emphasis t font-lock-multiline t face (org-code) fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 15 16 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 16 32 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 32 33 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 33 55 (org-emphasis t font-lock-multiline t face (italic) fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 55 56 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 56 93 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 93 96 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 96 112 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 5276) (undo-tree-id1673 . -112) (5276 . 5279) 5385 (5379 . 5385) (#("b" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5379) (undo-tree-id1674 . -1) 5380 (5376 . 5380) (5355 . 5376) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5355) (undo-tree-id1675 . -1) 5356 (5346 . 5356) (5325 . 5346) (5304 . 5325) (5299 . 5304) (5278 . 5299) (5160 . 5278) (#("- 
- ~required~, which is a list of parameters that are *absolutely* required. It exists mostly for global parameters." 0 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (face org-superstar-item composition (1 1 [8211]) fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 4 5 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 5 6 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 6 14 (org-emphasis t font-lock-multiline t face (org-code) fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 14 15 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 15 56 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 56 57 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 57 67 (org-emphasis t font-lock-multiline t face (bold) fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 67 68 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 68 118 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . 5160) (undo-tree-id1676 . -118) (undo-tree-id1677 . -118) (undo-tree-id1678 . -118) (undo-tree-id1679 . -118) (5160 . 5163) 5275 (#("M" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5236) (undo-tree-id1680 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5237) (undo-tree-id1681 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5238) (undo-tree-id1682 . -1) (#("t" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5239) (undo-tree-id1683 . -1) (#("l" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5240) (undo-tree-id1684 . -1) (#("y" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5241) (undo-tree-id1685 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5242) (undo-tree-id1686 . -1) 5243 (5243 . 5260) (5254 . 5265) (5250 . 5254) (5229 . 5250) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5229) (undo-tree-id1687 . -1) 5230 (5228 . 5230) (5207 . 5228) (5186 . 5207) (5183 . 5186) (5162 . 5183) (5070 . 5162) (#("- 
- ~one-of~, which is a list of lists of parameters of which only one can be used per list" 0 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (face org-superstar-item composition (1 1 [8211]) fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 4 5 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 5 6 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 6 12 (org-emphasis t font-lock-multiline t face (org-code) fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 12 13 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent))) 13 92 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . 5070) (undo-tree-id1688 . -92) (5070 . 5073) 5159 (#("." 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5159) (undo-tree-id1689 . -1) 5160 (5156 . 5160) (5135 . 5156) (5118 . 5135) (5097 . 5118) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5097) (undo-tree-id1690 . -1) 5098 (5091 . 5098) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5091) (undo-tree-id1691 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5092) (undo-tree-id1692 . -1) 5093 (5088 . 5093) (#("h" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5088) (undo-tree-id1693 . -1) 5089 (5087 . 5089) (5082 . 5087) (#("f" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5082) (undo-tree-id1694 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5083) (undo-tree-id1695 . -1) (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5084) (undo-tree-id1696 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5085) (undo-tree-id1697 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5086) (undo-tree-id1698 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5087) (undo-tree-id1699 . -1) (#("c" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5088) (undo-tree-id1700 . -1) (#("l" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5089) (undo-tree-id1701 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5090) (undo-tree-id1702 . -1) (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5091) (undo-tree-id1703 . -1) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5092) (undo-tree-id1704 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5093) (undo-tree-id1705 . -1) (#("g" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5094) (undo-tree-id1706 . -1) 5095 (5093 . 5095) (5072 . 5093) (5006 . 5072) (#("- 
- ~optional~, for declaring global parameters that will be used" 0 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (face org-superstar-item composition (1 1 [8211]) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 14 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 66 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 5006) (undo-tree-id1707 . -66) (5006 . 5009) 5069 (5065 . 5069) (5044 . 5065) (5023 . 5044) (5006 . 5023) (5005 . 5006) (5002 . 5005) (4998 . 5002) (4977 . 4998) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4977) (undo-tree-id1708 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4978) (undo-tree-id1709 . -1) 4979 (4962 . 4979) (#("-" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4962) (undo-tree-id1710 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4963) (undo-tree-id1711 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4964) (undo-tree-id1712 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4965) (undo-tree-id1713 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4966) (undo-tree-id1714 . -1) 4967 (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4967) (undo-tree-id1715 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4968) (undo-tree-id1716 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4969) (undo-tree-id1717 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4970) (undo-tree-id1718 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4971) (undo-tree-id1719 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4972) (undo-tree-id1720 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4973) (undo-tree-id1721 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4974) (undo-tree-id1722 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4975) (undo-tree-id1723 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4976) (undo-tree-id1724 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4977) (undo-tree-id1725 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4978) (undo-tree-id1726 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4979) (undo-tree-id1727 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4980) (undo-tree-id1728 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4981) (undo-tree-id1729 . -1) (#("v" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4982) (undo-tree-id1730 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4983) (undo-tree-id1731 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4984) (undo-tree-id1732 . -1) (#("b" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4985) (undo-tree-id1733 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4986) (undo-tree-id1734 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4987) (undo-tree-id1735 . -1) 4988 (4980 . 4988) (4959 . 4980) (4938 . 4959) (4934 . 4938) (4933 . 4934) (4921 . 4933) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4921) (undo-tree-id1736 . -1) 4922 (4915 . 4922) (4911 . 4915) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4911) (undo-tree-id1737 . -1) 4912 (4911 . 4912) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4911) (undo-tree-id1738 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4912) (undo-tree-id1739 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4913) (undo-tree-id1740 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4914) (undo-tree-id1741 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4915) (undo-tree-id1742 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4916) (undo-tree-id1743 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4917) (undo-tree-id1744 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4918) (undo-tree-id1745 . -1) 4919 (4910 . 4919) (4889 . 4910) (4888 . 4889) (4867 . 4888) (4846 . 4867) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4846) (undo-tree-id1746 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4847) (undo-tree-id1747 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4848) (undo-tree-id1748 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4849) (undo-tree-id1749 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4850) (undo-tree-id1750 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4851) (undo-tree-id1751 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4852) (undo-tree-id1752 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4853) (undo-tree-id1753 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4854) (undo-tree-id1754 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4855) (undo-tree-id1755 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4856) (undo-tree-id1756 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4857) (undo-tree-id1757 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4858) (undo-tree-id1758 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4859) (undo-tree-id1759 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4860) (undo-tree-id1760 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4861) (undo-tree-id1761 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4862) (undo-tree-id1762 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4863) (undo-tree-id1763 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4864) (undo-tree-id1764 . -1) 4865 (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4865) (undo-tree-id1765 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4866) (undo-tree-id1766 . -1) (#("~" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4867) (undo-tree-id1767 . -1) (#("#" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4868) (undo-tree-id1768 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4869) (undo-tree-id1769 . -1) (#("~" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4870) (undo-tree-id1770 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4871) (undo-tree-id1771 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4872) (undo-tree-id1772 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4873) (undo-tree-id1773 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4874) (undo-tree-id1774 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4875) (undo-tree-id1775 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4876) (undo-tree-id1776 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4877) (undo-tree-id1777 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4878) (undo-tree-id1778 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4879) (undo-tree-id1779 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4880) (undo-tree-id1780 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4881) (undo-tree-id1781 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4882) (undo-tree-id1782 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4883) (undo-tree-id1783 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4884) (undo-tree-id1784 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4885) (undo-tree-id1785 . -1) 4886 (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4886) (undo-tree-id1786 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4887) (undo-tree-id1787 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4888) (undo-tree-id1788 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4889) (undo-tree-id1789 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4890) (undo-tree-id1790 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4891) (undo-tree-id1791 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4892) (undo-tree-id1792 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4893) (undo-tree-id1793 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4894) (undo-tree-id1794 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4895) (undo-tree-id1795 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4896) (undo-tree-id1796 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4897) (undo-tree-id1797 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4898) (undo-tree-id1798 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4899) (undo-tree-id1799 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4900) (undo-tree-id1800 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4901) (undo-tree-id1801 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4902) (undo-tree-id1802 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4903) (undo-tree-id1803 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4904) (undo-tree-id1804 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4905) (undo-tree-id1805 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4906) (undo-tree-id1806 . -1) 4907 (4901 . 4907) (4899 . 4901) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4899) (undo-tree-id1807 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4900) (undo-tree-id1808 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4901) (undo-tree-id1809 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4902) (undo-tree-id1810 . -1) 4903 (4896 . 4903) (4875 . 4896) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4875) (undo-tree-id1811 . -1) 4876 (4872 . 4876) (4869 . 4872) (4848 . 4869) (4827 . 4848) (#("T" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4827) (undo-tree-id1812 . -1) 4828 (4827 . 4828) (4826 . 4827) (4814 . 4826) (4793 . 4814) (4772 . 4793) (4752 . 4772) (4731 . 4752) (4710 . 4731) (4698 . 4710) (4677 . 4698) (4656 . 4677) (4654 . 4656) (4633 . 4654) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4633) (undo-tree-id1813 . -1) 4634 (4622 . 4634) (4603 . 4622) (4582 . 4603) (4561 . 4582) (4547 . 4561) (4544 . 4546) (4525 . 4544) (4523 . 4526) (4511 . 4523) (4490 . 4511) (4469 . 4490) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4469) (undo-tree-id1814 . -1) 4470 (4460 . 4470) (4447 . 4460) (#("S" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4447) (undo-tree-id1815 . -1) 4448 (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4448) (undo-tree-id1816 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4449) (undo-tree-id1817 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4450) (undo-tree-id1818 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4451) (undo-tree-id1819 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4452) (undo-tree-id1820 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4453) (undo-tree-id1821 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4454) (undo-tree-id1822 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4455) (undo-tree-id1823 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4456) (undo-tree-id1824 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4457) (undo-tree-id1825 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4458) (undo-tree-id1826 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4459) (undo-tree-id1827 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4460) (undo-tree-id1828 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4461) (undo-tree-id1829 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4462) (undo-tree-id1830 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4463) (undo-tree-id1831 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4464) (undo-tree-id1832 . -1) (#("v" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4465) (undo-tree-id1833 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4466) (undo-tree-id1834 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4467) (undo-tree-id1835 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4468) (undo-tree-id1836 . -1) 4469 (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4469) (undo-tree-id1837 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4470) (undo-tree-id1838 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4471) (undo-tree-id1839 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4472) (undo-tree-id1840 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4473) (undo-tree-id1841 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4474) (undo-tree-id1842 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4475) (undo-tree-id1843 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4476) (undo-tree-id1844 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4477) (undo-tree-id1845 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4478) (undo-tree-id1846 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4479) (undo-tree-id1847 . -1) (#("x" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4480) (undo-tree-id1848 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4481) (undo-tree-id1849 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4482) (undo-tree-id1850 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4483) (undo-tree-id1851 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4484) (undo-tree-id1852 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4485) (undo-tree-id1853 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4486) (undo-tree-id1854 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4487) (undo-tree-id1855 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4488) (undo-tree-id1856 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4489) (undo-tree-id1857 . -1) 4490 (4487 . 4490) (#("b" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4487) (undo-tree-id1858 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4488) (undo-tree-id1859 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4489) (undo-tree-id1860 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4490) (undo-tree-id1861 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4491) (undo-tree-id1862 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4492) (undo-tree-id1863 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4493) (undo-tree-id1864 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4494) (undo-tree-id1865 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4495) (undo-tree-id1866 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4496) (undo-tree-id1867 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4497) (undo-tree-id1868 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4498) (undo-tree-id1869 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4499) (undo-tree-id1870 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4500) (undo-tree-id1871 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4501) (undo-tree-id1872 . -1) 4502 (4500 . 4502) (4490 . 4500) (4469 . 4490) (4448 . 4469) (#("O" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4448) (undo-tree-id1873 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4449) (undo-tree-id1874 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4450) (undo-tree-id1875 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4451) (undo-tree-id1876 . -1) 4452 (4447 . 4452) (4446 . 4447) (4442 . 4446) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4442) (undo-tree-id1877 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4443) (undo-tree-id1878 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4444) (undo-tree-id1879 . -1) (#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4445) (undo-tree-id1880 . -1) 4446 (4444 . 4446) (4423 . 4444) (4406 . 4423) (4385 . 4406) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4385) (undo-tree-id1881 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4386) (undo-tree-id1882 . -1) 4387 (4376 . 4387) (4355 . 4376) (4347 . 4355) (4040 . 4041) (4038 . 4039) (3415 . 3416) (3400 . 3401) (3379 . 3380) (3371 . 3372) (3304 . 3305) (3289 . 3290) (3279 . 3280) (3255 . 3256) (3022 . 3023) (2998 . 2999) (4334 . 4335) (4318 . 4334) (4317 . 4318) (4316 . 4317) (4315 . 4316) (#("]" 0 1 (htmlize-link (:uri "defining package variants") help-echo "LINK: defining package variants" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -4315) (4315 . 4316) (4313 . 4315) (#("]" 0 1 (face org-link font-lock-multiline t htmlize-link (:uri "defining package variants") help-echo "LINK: defining package variants" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4313) (undo-tree-id1883 . -1) 4314 (4313 . 4314) (#("]" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -4313) (4312 . 4314) (#("]" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -4312) (4312 . 4313) (#(")" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4312) (undo-tree-id1884 . -1) (#(")" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4313) (undo-tree-id1885 . -1) 4314 (4313 . 4314) (#(")" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -4313) (4312 . 4314) (#(")" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -4312) (4312 . 4313) (#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4312) (undo-tree-id1886 . -1) 4313 (#("]" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4287) (undo-tree-id1887 . -1) (#("]" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4288) (undo-tree-id1888 . -1) 4289 (4286 . 4288) (4285 . 4287) (4302 . 4311) (4281 . 4302) (4279 . 4281) (4258 . 4279) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4258) (undo-tree-id1889 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4259) (undo-tree-id1890 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4260) (undo-tree-id1891 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4261) (undo-tree-id1892 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4262) (undo-tree-id1893 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4263) (undo-tree-id1894 . -1) 4264 (4258 . 4264) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4258) (undo-tree-id1895 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4259) (undo-tree-id1896 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4260) (undo-tree-id1897 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4261) (undo-tree-id1898 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4262) (undo-tree-id1899 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4263) (undo-tree-id1900 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4264) (undo-tree-id1901 . -1) (#("-" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4265) (undo-tree-id1902 . -1) (#(">" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4266) (undo-tree-id1903 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4267) (undo-tree-id1904 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4268) (undo-tree-id1905 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4269) (undo-tree-id1906 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4270) (undo-tree-id1907 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4271) (undo-tree-id1908 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4272) (undo-tree-id1909 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4273) (undo-tree-id1910 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4274) (undo-tree-id1911 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4275) (undo-tree-id1912 . -1) 4276 (4274 . 4276) (4266 . 4274) (#(">" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -4266) (4258 . 4267) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4258) (undo-tree-id1913 . -1) 4259 (4248 . 4259) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4248) (undo-tree-id1914 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4249) (undo-tree-id1915 . -1) (#("g" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4250) (undo-tree-id1916 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4251) (undo-tree-id1917 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4252) (undo-tree-id1918 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4253) (undo-tree-id1919 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4254) (undo-tree-id1920 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4255) (undo-tree-id1921 . -1) 4256 (4243 . 4256) (4226 . 4243) (4225 . 4226) (4207 . 4225) (4186 . 4207) (4184 . 4186) (4163 . 4184) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4163) (undo-tree-id1922 . -1) 4164 (4163 . 4164) (4143 . 4162) (4136 . 4143) (4115 . 4136) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4115) (undo-tree-id1923 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4116) (undo-tree-id1924 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4117) (undo-tree-id1925 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4118) (undo-tree-id1926 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4119) (undo-tree-id1927 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4120) (undo-tree-id1928 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4121) (undo-tree-id1929 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4122) (undo-tree-id1930 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4123) (undo-tree-id1931 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4124) (undo-tree-id1932 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4125) (undo-tree-id1933 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4126) (undo-tree-id1934 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4127) (undo-tree-id1935 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4128) (undo-tree-id1936 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4129) (undo-tree-id1937 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4130) (undo-tree-id1938 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4131) (undo-tree-id1939 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4132) (undo-tree-id1940 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4133) (undo-tree-id1941 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4134) (undo-tree-id1942 . -1) (#("k" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4135) (undo-tree-id1943 . -1) 4136 (4128 . 4136) (#("g" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4128) (undo-tree-id1944 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4129) (undo-tree-id1945 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4130) (undo-tree-id1946 . -1) 4131 (4123 . 4131) (4111 . 4123) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4111) (undo-tree-id1947 . -1) 4112 (4101 . 4112) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4101) (undo-tree-id1948 . -1) 4102 (4083 . 4102) (4077 . 4083) (4058 . 4077) (4056 . 4059) (4035 . 4056) (4014 . 4035) (4013 . 4014) (3998 . 4013) (3977 . 3998) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3977) (undo-tree-id1949 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3978) (undo-tree-id1950 . -1) 3979 (3964 . 3979) (#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3964) (undo-tree-id1951 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3965) (undo-tree-id1952 . -1) 3966 (3964 . 3966) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3964) (undo-tree-id1953 . -1) 3965 (3963 . 3965) (3946 . 3962) (#(">" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -3946) (3945 . 3947) (3932 . 3945) (3931 . 3932) (3911 . 3932) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3911) (undo-tree-id1954 . -1) 3912 (3901 . 3912) (3880 . 3901) (3874 . 3880) (3853 . 3874) (#("(" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -3853) (undo-tree-id1955 . -1) (#(")" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 3854) (#("b" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3854) (undo-tree-id1956 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3855) (undo-tree-id1957 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3856) (undo-tree-id1958 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3857) (undo-tree-id1959 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3858) (undo-tree-id1960 . -1) (#("/" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3859) (undo-tree-id1961 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3860) (undo-tree-id1962 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3861) (undo-tree-id1963 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3862) (undo-tree-id1964 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3863) (undo-tree-id1965 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3864) (undo-tree-id1966 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3865) (undo-tree-id1967 . -1) (#("-" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3866) (undo-tree-id1968 . -1) 3867 (3854 . 3867) (3853 . 3855) (3851 . 3853) (3830 . 3851) (3829 . 3830) (3827 . 3829) (3806 . 3827) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3806) (undo-tree-id1969 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3807) (undo-tree-id1970 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3808) (undo-tree-id1971 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3809) (undo-tree-id1972 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3810) (undo-tree-id1973 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3811) (undo-tree-id1974 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3812) (undo-tree-id1975 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3813) (undo-tree-id1976 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3814) (undo-tree-id1977 . -1) 3815 (3808 . 3815) (3804 . 3808) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3804) (undo-tree-id1978 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3805) (undo-tree-id1979 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3806) (undo-tree-id1980 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3807) (undo-tree-id1981 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3808) (undo-tree-id1982 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3809) (undo-tree-id1983 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3810) (undo-tree-id1984 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3811) (undo-tree-id1985 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3812) (undo-tree-id1986 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3813) (undo-tree-id1987 . -1) (#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3814) (undo-tree-id1988 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3815) (undo-tree-id1989 . -1) (#("Y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3816) (undo-tree-id1990 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3817) (undo-tree-id1991 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3818) (undo-tree-id1992 . -1) 3819 (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3819) (undo-tree-id1993 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3820) (undo-tree-id1994 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3821) (undo-tree-id1995 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3822) (undo-tree-id1996 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3823) (undo-tree-id1997 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3824) (undo-tree-id1998 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3825) (undo-tree-id1999 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3826) (undo-tree-id2000 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3827) (undo-tree-id2001 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3828) (undo-tree-id2002 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3829) (undo-tree-id2003 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3830) (undo-tree-id2004 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3831) (undo-tree-id2005 . -1) (#("u" 0 1 (prettify-symbols-end 3833 prettify-symbols-start 3831 composition (3 2 [956]) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3832) (undo-tree-id2006 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3833) (undo-tree-id2007 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3834) (undo-tree-id2008 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3835) (undo-tree-id2009 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3836) (undo-tree-id2010 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3837) (undo-tree-id2011 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3838) (undo-tree-id2012 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3839) (undo-tree-id2013 . -1) 3840 (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3840) (undo-tree-id2014 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3841) (undo-tree-id2015 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3842) (undo-tree-id2016 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3843) (undo-tree-id2017 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3844) (undo-tree-id2018 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3845) (undo-tree-id2019 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3846) (undo-tree-id2020 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3847) (undo-tree-id2021 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3848) (undo-tree-id2022 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3849) (undo-tree-id2023 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3850) (undo-tree-id2024 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3851) (undo-tree-id2025 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3852) (undo-tree-id2026 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3853) (undo-tree-id2027 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3854) (undo-tree-id2028 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3855) (undo-tree-id2029 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3856) (undo-tree-id2030 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3857) (undo-tree-id2031 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3858) (undo-tree-id2032 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3859) (undo-tree-id2033 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3860) (undo-tree-id2034 . -1) 3861 (3853 . 3861) (3832 . 3853) (3815 . 3832) (3794 . 3815) (3777 . 3794) (3756 . 3777) (3755 . 3756) (3734 . 3755) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3734) (undo-tree-id2035 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3735) (undo-tree-id2036 . -1) 3736 (3716 . 3736) (3713 . 3716) (3712 . 3713) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3712) (undo-tree-id2037 . -1) (#("T" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3713) (undo-tree-id2038 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3714) (undo-tree-id2039 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3715) (undo-tree-id2040 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3716) (undo-tree-id2041 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3717) (undo-tree-id2042 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3718) (undo-tree-id2043 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3719) (undo-tree-id2044 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3720) (undo-tree-id2045 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3721) (undo-tree-id2046 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3722) (undo-tree-id2047 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3723) (undo-tree-id2048 . -1) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3724) (undo-tree-id2049 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3725) (undo-tree-id2050 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3726) (undo-tree-id2051 . -1) (#("v" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3727) (undo-tree-id2052 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3728) (undo-tree-id2053 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3729) (undo-tree-id2054 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3730) (undo-tree-id2055 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3731) (undo-tree-id2056 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3732) (undo-tree-id2057 . -1) 3733 (3732 . 3733) (3711 . 3732) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3711) (undo-tree-id2058 . -1) (#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3712) (undo-tree-id2059 . -1) (#("T" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3713) (undo-tree-id2060 . -1) 3714 (3708 . 3714) (3695 . 3708) (3674 . 3695) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3674) (undo-tree-id2061 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3675) (undo-tree-id2062 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3676) (undo-tree-id2063 . -1) 3677 (3673 . 3677) (3652 . 3673) (3643 . 3652) (3622 . 3643) (3601 . 3622) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3601) (undo-tree-id2064 . -1) 3602 (3591 . 3602) (3585 . 3591) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3585) (undo-tree-id2065 . -1) 3586 (3567 . 3586) (3566 . 3567) (3558 . 3566) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3558) (undo-tree-id2066 . -1) 3559 (3543 . 3559) (3530 . 3543) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3530) (undo-tree-id2067 . -1) 3531 (3526 . 3531) (3505 . 3526) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3505) (undo-tree-id2068 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3506) (undo-tree-id2069 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3507) (undo-tree-id2070 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3508) (undo-tree-id2071 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3509) (undo-tree-id2072 . -1) 3510 (3502 . 3510) (3481 . 3502) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3481) (undo-tree-id2073 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3482) (undo-tree-id2074 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3483) (undo-tree-id2075 . -1) 3484 (3481 . 3484) (#("*" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3481) (undo-tree-id2076 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3482) (undo-tree-id2077 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3483) (undo-tree-id2078 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3484) (undo-tree-id2079 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3485) (undo-tree-id2080 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3486) (undo-tree-id2081 . -1) (#("&" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3487) (undo-tree-id2082 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3488) (undo-tree-id2083 . -1) 3489 (3483 . 3489) (3465 . 3483)) nil (25747 30953 534134 933000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . 5519)) nil (25747 30953 534004 758000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . 5519)) nil (25747 30953 534004 588000) 0 nil])
([nil nil ((5278 . 5289) (#("~" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5278) (undo-tree-id1635 . -1) 5279 (#("c" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5278) (undo-tree-id1636 . -1) (#("a" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5279) (undo-tree-id1637 . -1) (#("n" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5280) (undo-tree-id1638 . -1) (#("o" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5281) (undo-tree-id1639 . -1) (#("n" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5282) (undo-tree-id1640 . -1) (#("i" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5283) (undo-tree-id1641 . -1) (#("c" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5284) (undo-tree-id1642 . -1) (#("a" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5285) (undo-tree-id1643 . -1) (#("l" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5286) (undo-tree-id1644 . -1) 5287 (#("," 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5287) (undo-tree-id1645 . -1) 5288 (5287 . 5288) (5278 . 5287) (#("c" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5278) (undo-tree-id1646 . -1) (#("a" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5279) (undo-tree-id1647 . -1) (#("n" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5280) (undo-tree-id1648 . -1) (#("o" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5281) (undo-tree-id1649 . -1) (#("n" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5282) (undo-tree-id1650 . -1) (#("i" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5283) (undo-tree-id1651 . -1) (#("c" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5284) (undo-tree-id1652 . -1) (#("a" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5285) (undo-tree-id1653 . -1) (#("l" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5286) (undo-tree-id1654 . -1) (#("," 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5287) (undo-tree-id1655 . -1) 5288 (5287 . 5288) (#("," 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5287) (undo-tree-id1656 . -1) 5288 (5713 . 5720) (5692 . 5713) (5671 . 5692) (5657 . 5671) (5636 . 5657) (5615 . 5636) (5596 . 5615) (5575 . 5596) (5554 . 5575) (5545 . 5554) (5524 . 5545)) nil (25747 30953 534002 854000) 0 nil])
([nil nil ((6147 . 6149) (6133 . 6147) (6153 . 6162) (6132 . 6153) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6132) (undo-tree-id1498 . -1) 6133 (6115 . 6133) (6094 . 6115) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6094) (undo-tree-id1499 . -1) 6095 (6093 . 6095) (#("S" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6093) (undo-tree-id1500 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6094) (undo-tree-id1501 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6095) (undo-tree-id1502 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6096) (undo-tree-id1503 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6097) (undo-tree-id1504 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6098) (undo-tree-id1505 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6099) (undo-tree-id1506 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6100) (undo-tree-id1507 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6101) (undo-tree-id1508 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6102) (undo-tree-id1509 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6103) (undo-tree-id1510 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6104) (undo-tree-id1511 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6105) (undo-tree-id1512 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6106) (undo-tree-id1513 . -1) 6107 (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6107) (undo-tree-id1514 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6108) (undo-tree-id1515 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6109) (undo-tree-id1516 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6110) (undo-tree-id1517 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6111) (undo-tree-id1518 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6112) (undo-tree-id1519 . -1) (#("I" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6113) (undo-tree-id1520 . -1) (#("'" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6114) (undo-tree-id1521 . -1) (#("v" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6115) (undo-tree-id1522 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6116) (undo-tree-id1523 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6117) (undo-tree-id1524 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6118) (undo-tree-id1525 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6119) (undo-tree-id1526 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6120) (undo-tree-id1527 . -1) (#("k" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6121) (undo-tree-id1528 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6122) (undo-tree-id1529 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6123) (undo-tree-id1530 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6124) (undo-tree-id1531 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6125) (undo-tree-id1532 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6126) (undo-tree-id1533 . -1) (#(":" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6127) (undo-tree-id1534 . -1) 6128 (6079 . 6092) (#("-" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6079) (undo-tree-id1535 . -1) 6080 (6076 . 6080) (6055 . 6076) (6043 . 6055) (#("t" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6043) (undo-tree-id1536 . -1) (#("h" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6044) (undo-tree-id1537 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6045) (undo-tree-id1538 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6046) (undo-tree-id1539 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6047) (undo-tree-id1540 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6048) (undo-tree-id1541 . -1) 6049 (6028 . 6049) (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6028) (undo-tree-id1542 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6029) (undo-tree-id1543 . -1) 6030 (6026 . 6030) (6012 . 6026) (5991 . 6012) (#("g" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5991) (undo-tree-id1544 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5992) (undo-tree-id1545 . -1) 5993 (5990 . 5993) (5969 . 5990) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5969) (undo-tree-id1546 . -1) (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5970) (undo-tree-id1547 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5971) (undo-tree-id1548 . -1) (#("t" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5972) (undo-tree-id1549 . -1) (#("h" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5973) (undo-tree-id1550 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5974) (undo-tree-id1551 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5975) (undo-tree-id1552 . -1) (#("v" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5976) (undo-tree-id1553 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5977) (undo-tree-id1554 . -1) (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5978) (undo-tree-id1555 . -1) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5979) (undo-tree-id1556 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5980) (undo-tree-id1557 . -1) (#("u" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5981) (undo-tree-id1558 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5982) (undo-tree-id1559 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5983) (undo-tree-id1560 . -1) 5984 (#("b" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5984) (undo-tree-id1561 . -1) (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5985) (undo-tree-id1562 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5986) (undo-tree-id1563 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5987) (undo-tree-id1564 . -1) (#("c" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5988) (undo-tree-id1565 . -1) (#("h" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5989) (undo-tree-id1566 . -1) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5990) (undo-tree-id1567 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5991) (undo-tree-id1568 . -1) (#("g" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5992) (undo-tree-id1569 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5993) (undo-tree-id1570 . -1) (#("t" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5994) (undo-tree-id1571 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5995) (undo-tree-id1572 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5996) (undo-tree-id1573 . -1) (#("l" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5997) (undo-tree-id1574 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5998) (undo-tree-id1575 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5999) (undo-tree-id1576 . -1) (#("I" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6000) (undo-tree-id1577 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6001) (undo-tree-id1578 . -1) (#("h" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6002) (undo-tree-id1579 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6003) (undo-tree-id1580 . -1) (#("v" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6004) (undo-tree-id1581 . -1) 6005 (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6005) (undo-tree-id1582 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6006) (undo-tree-id1583 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6007) (undo-tree-id1584 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6008) (undo-tree-id1585 . -1) (#("f" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6009) (undo-tree-id1586 . -1) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6010) (undo-tree-id1587 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6011) (undo-tree-id1588 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6012) (undo-tree-id1589 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6013) (undo-tree-id1590 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6014) (undo-tree-id1591 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6015) (undo-tree-id1592 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6016) (undo-tree-id1593 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6017) (undo-tree-id1594 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6018) (undo-tree-id1595 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6019) (undo-tree-id1596 . -1) (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6020) (undo-tree-id1597 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6021) (undo-tree-id1598 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6022) (undo-tree-id1599 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6023) (undo-tree-id1600 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6024) (undo-tree-id1601 . -1) (#("t" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6025) (undo-tree-id1602 . -1) 6026 (6014 . 6026) (#("," 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6014) (undo-tree-id1603 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6015) (undo-tree-id1604 . -1) (#("y" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6016) (undo-tree-id1605 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6017) (undo-tree-id1606 . -1) (#("u" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6018) (undo-tree-id1607 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6019) (undo-tree-id1608 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6020) (undo-tree-id1609 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6021) (undo-tree-id1610 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6022) (undo-tree-id1611 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6023) (undo-tree-id1612 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6024) (undo-tree-id1613 . -1) (#("t" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6025) (undo-tree-id1614 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6026) (undo-tree-id1615 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6027) (undo-tree-id1616 . -1) 6028 (6025 . 6028) (6004 . 6025) (5995 . 6004) (5974 . 5995) (5953 . 5974) (5935 . 5953) (5934 . 5935) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5934) (undo-tree-id1617 . -1) 5935 (5933 . 5935) (5847 . 5849) (5826 . 5847) (5820 . 5826) (5903 . 5904) (5888 . 5889) (5871 . 5887) (5836 . 5837) (5828 . 5829) (5881 . 5884) (#("o" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5881) (undo-tree-id1618 . -1) (#("p" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5882) (undo-tree-id1619 . -1) 5883 (5882 . 5883) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5882) (undo-tree-id1620 . -1) 5883 (5872 . 5883) (5851 . 5872) (5850 . 5851) (5829 . 5850) (5808 . 5829) (5787 . 5808) (#("c" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5787) (undo-tree-id1621 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5788) (undo-tree-id1622 . -1) (#("l" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5789) (undo-tree-id1623 . -1) (#("c" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5790) (undo-tree-id1624 . -1) (#("u" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5791) (undo-tree-id1625 . -1) 5792 (5787 . 5792) (#("c" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5787) (undo-tree-id1626 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5788) (undo-tree-id1627 . -1) 5789 (5776 . 5789) (5755 . 5776) (5745 . 5755) (5724 . 5745) (#("p" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5724) (undo-tree-id1628 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5725) (undo-tree-id1629 . -1) (#("c" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5726) (undo-tree-id1630 . -1) (#("k" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5727) (undo-tree-id1631 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5728) (undo-tree-id1632 . -1) (#("g" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5729) (undo-tree-id1633 . -1) 5730 (5720 . 5730) (5719 . 5720) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5719) (undo-tree-id1634 . -1) 5720) nil (25747 30953 533968 590000) 0 nil])
([nil nil ((#("e
    ;; ... inside a package definition ...
    (parameter/if (a b c) expr expr2)

  (parameter/match
    ()
  
    (parameter/modify-inputs (package-inputs pkgname)
                             ((a b) (delete libaaa))
                             (_     (append libttt)))
#+END_SRC
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 2 6 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 6 9 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 9 45 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 45 49 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 49 50 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 50 63 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 63 64 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 64 69 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 69 70 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 70 81 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 81 82 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 82 83 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 83 84 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 84 86 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 86 87 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 87 103 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 103 107 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 107 108 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 108 109 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 109 110 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 110 113 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 113 117 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 117 118 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 118 142 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 142 143 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 143 165 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 165 166 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 166 167 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 167 196 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 196 197 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 197 198 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 198 201 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 201 202 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 202 203 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 203 204 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 204 217 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 217 218 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 218 219 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 219 220 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 220 249 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 249 250 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 250 256 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 256 257 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 257 270 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 270 271 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 271 272 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 272 273 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 273 274 (wrap-prefix #("                               " 0 2 (face org-indent) 2 31 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 274 283 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 283 284 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face org-block-end-line fontified t)) . 6196) (undo-tree-id1238 . -283) (undo-tree-id1239 . -283) (undo-tree-id1240 . -283) (undo-tree-id1241 . -283) (undo-tree-id1242 . -19) (undo-tree-id1243 . -19) (undo-tree-id1244 . -19) (undo-tree-id1245 . -19) (undo-tree-id1246 . -19) (undo-tree-id1247 . -19) (undo-tree-id1248 . -19) (undo-tree-id1249 . -19) (undo-tree-id1250 . -19) (undo-tree-id1251 . -19) (undo-tree-id1252 . -19) (undo-tree-id1253 . -19) (undo-tree-id1254 . -19) (undo-tree-id1255 . -19) (undo-tree-id1256 . -19) (undo-tree-id1257 . -19) (undo-tree-id1258 . -19) (undo-tree-id1259 . -19) (undo-tree-id1260 . -19) (undo-tree-id1261 . -19) (undo-tree-id1262 . -19) (undo-tree-id1263 . -19) (undo-tree-id1264 . -19) (undo-tree-id1265 . -19) (undo-tree-id1266 . -19) (undo-tree-id1267 . -19) (undo-tree-id1268 . -19) (undo-tree-id1269 . -19) (undo-tree-id1270 . -19) (undo-tree-id1271 . -19) (undo-tree-id1272 . -19) (undo-tree-id1273 . -19) (undo-tree-id1274 . -19) (undo-tree-id1275 . -19) (undo-tree-id1276 . -19) (undo-tree-id1277 . -19) (undo-tree-id1278 . -19) (undo-tree-id1279 . -19) (undo-tree-id1280 . -19) (undo-tree-id1281 . -19) (undo-tree-id1282 . -19) (undo-tree-id1283 . -19) (undo-tree-id1284 . -19) (undo-tree-id1285 . -62) (undo-tree-id1286 . -62) (undo-tree-id1287 . -62) (undo-tree-id1288 . -62) (undo-tree-id1289 . -62) (undo-tree-id1290 . -62) (undo-tree-id1291 . -62) (undo-tree-id1292 . -62) (undo-tree-id1293 . -62) (undo-tree-id1294 . -62) (undo-tree-id1295 . -62) (undo-tree-id1296 . -62) (undo-tree-id1297 . -62) (undo-tree-id1298 . -62) (undo-tree-id1299 . -62) (undo-tree-id1300 . -83) (undo-tree-id1301 . -83) (undo-tree-id1302 . -83) (undo-tree-id1303 . -83) (undo-tree-id1304 . -83) (undo-tree-id1305 . -83) (undo-tree-id1306 . -83) (undo-tree-id1307 . -83) (undo-tree-id1308 . -83) (undo-tree-id1309 . -83) (undo-tree-id1310 . -83) (undo-tree-id1311 . -83) (undo-tree-id1312 . -83) (undo-tree-id1313 . -83) (undo-tree-id1314 . -83) (undo-tree-id1315 . -83) (undo-tree-id1316 . -101) (undo-tree-id1317 . -101) (undo-tree-id1318 . -101) (undo-tree-id1319 . -101) (undo-tree-id1320 . -101) (undo-tree-id1321 . -101) (undo-tree-id1322 . -101) (undo-tree-id1323 . -101) (undo-tree-id1324 . -101) (undo-tree-id1325 . -101) (undo-tree-id1326 . -101) (undo-tree-id1327 . -101) (undo-tree-id1328 . -101) (undo-tree-id1329 . -101) (undo-tree-id1330 . -101) (undo-tree-id1331 . -101) (undo-tree-id1332 . -109) (undo-tree-id1333 . -109) (undo-tree-id1334 . -109) (undo-tree-id1335 . -109) (undo-tree-id1336 . -109) (undo-tree-id1337 . -109) (undo-tree-id1338 . -109) (undo-tree-id1339 . -109) (undo-tree-id1340 . -109) (undo-tree-id1341 . -109) (undo-tree-id1342 . -109) (undo-tree-id1343 . -109) (undo-tree-id1344 . -109) (undo-tree-id1345 . -109) (undo-tree-id1346 . -109) (undo-tree-id1347 . -109) (undo-tree-id1348 . -112) (undo-tree-id1349 . -112) (undo-tree-id1350 . -112) (undo-tree-id1351 . -112) (undo-tree-id1352 . -112) (undo-tree-id1353 . -112) (undo-tree-id1354 . -112) (undo-tree-id1355 . -112) (undo-tree-id1356 . -112) (undo-tree-id1357 . -112) (undo-tree-id1358 . -112) (undo-tree-id1359 . -112) (undo-tree-id1360 . -112) (undo-tree-id1361 . -112) (undo-tree-id1362 . -112) (undo-tree-id1363 . -112) (undo-tree-id1364 . -130) (undo-tree-id1365 . -130) (undo-tree-id1366 . -130) (undo-tree-id1367 . -130) (undo-tree-id1368 . -130) (undo-tree-id1369 . -130) (undo-tree-id1370 . -130) (undo-tree-id1371 . -130) (undo-tree-id1372 . -130) (undo-tree-id1373 . -130) (undo-tree-id1374 . -130) (undo-tree-id1375 . -130) (undo-tree-id1376 . -130) (undo-tree-id1377 . -130) (undo-tree-id1378 . -130) (undo-tree-id1379 . -130) (undo-tree-id1380 . -184) (undo-tree-id1381 . -184) (undo-tree-id1382 . -184) (undo-tree-id1383 . -184) (undo-tree-id1384 . -184) (undo-tree-id1385 . -184) (undo-tree-id1386 . -184) (undo-tree-id1387 . -184) (undo-tree-id1388 . -184) (undo-tree-id1389 . -184) (undo-tree-id1390 . -184) (undo-tree-id1391 . -184) (undo-tree-id1392 . -184) (undo-tree-id1393 . -184) (undo-tree-id1394 . -184) (undo-tree-id1395 . -237) (undo-tree-id1396 . -237) (undo-tree-id1397 . -237) (undo-tree-id1398 . -237) (undo-tree-id1399 . -237) (undo-tree-id1400 . -237) (undo-tree-id1401 . -237) (undo-tree-id1402 . -237) (undo-tree-id1403 . -237) (undo-tree-id1404 . -237) (undo-tree-id1405 . -237) (undo-tree-id1406 . -237) (undo-tree-id1407 . -237) (undo-tree-id1408 . -237) (undo-tree-id1409 . -237) (undo-tree-id1410 . -237) (undo-tree-id1411 . -237) (undo-tree-id1412 . -237) (undo-tree-id1413 . -237) (undo-tree-id1414 . -237) (undo-tree-id1415 . -237) (undo-tree-id1416 . -237) (undo-tree-id1417 . -237) (undo-tree-id1418 . -237) (undo-tree-id1419 . -237) (undo-tree-id1420 . -237) (undo-tree-id1421 . -237) (undo-tree-id1422 . -237) (undo-tree-id1423 . -237) (undo-tree-id1424 . -237) (undo-tree-id1425 . -237) (undo-tree-id1426 . -237) (undo-tree-id1427 . -237) (undo-tree-id1428 . -237) (undo-tree-id1429 . -237) (undo-tree-id1430 . -237) (undo-tree-id1431 . -237) (undo-tree-id1432 . -237) (undo-tree-id1433 . -237) (undo-tree-id1434 . -237) (undo-tree-id1435 . -237) (undo-tree-id1436 . -237) (undo-tree-id1437 . -237) (undo-tree-id1438 . -237) (undo-tree-id1439 . -237) (undo-tree-id1440 . -237) (undo-tree-id1441 . -237) (undo-tree-id1442 . -237) (undo-tree-id1443 . -237) (undo-tree-id1444 . -237) (undo-tree-id1445 . -237) (undo-tree-id1446 . -237) (undo-tree-id1447 . -237) (undo-tree-id1448 . -237) (undo-tree-id1449 . -237) (undo-tree-id1450 . -237) (undo-tree-id1451 . -237) (undo-tree-id1452 . -283) (undo-tree-id1453 . -283) (undo-tree-id1454 . -283) (undo-tree-id1455 . -283) (undo-tree-id1456 . -283) (undo-tree-id1457 . -283) (undo-tree-id1458 . -283) (undo-tree-id1459 . -283) (undo-tree-id1460 . -283) (undo-tree-id1461 . -283) (undo-tree-id1462 . -283) (undo-tree-id1463 . -283) (undo-tree-id1464 . -283) (undo-tree-id1465 . -283) (undo-tree-id1466 . -283) (undo-tree-id1467 . -283) (undo-tree-id1468 . -283) (undo-tree-id1469 . -283) (undo-tree-id1470 . -283) (undo-tree-id1471 . -283) (undo-tree-id1472 . -283) (undo-tree-id1473 . -283) (undo-tree-id1474 . -283) (undo-tree-id1475 . -283) (undo-tree-id1476 . -283) (undo-tree-id1477 . -283) (undo-tree-id1478 . -283) (undo-tree-id1479 . -283) (undo-tree-id1480 . -283) (undo-tree-id1481 . -283) (undo-tree-id1482 . -283) (undo-tree-id1483 . -283) (undo-tree-id1484 . -283) (undo-tree-id1485 . -283) (undo-tree-id1486 . -283) (undo-tree-id1487 . -283) (undo-tree-id1488 . -283) (undo-tree-id1489 . -283) (undo-tree-id1490 . -283) (undo-tree-id1491 . -283) (undo-tree-id1492 . -283) (undo-tree-id1493 . -283) (undo-tree-id1494 . -283) (undo-tree-id1495 . -283) (undo-tree-id1496 . -283) (undo-tree-id1497 . -284) 6479) nil (25747 30953 533925 309000) 0 nil])
([nil nil ((6196 . 6197)) nil (25747 30953 533859 756000) 0 nil])
([nil nil ((#("#+BEGIN_SRC schem
" 0 17 (face org-block-begin-line font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t fontified t) 17 18 (face org-block-begin-line font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t fontified t)) . 6179) (undo-tree-id871 . -17) (undo-tree-id872 . -1) (undo-tree-id873 . -17) (undo-tree-id874 . -17) (undo-tree-id875 . -17) (undo-tree-id876 . -17) (undo-tree-id877 . -17) (undo-tree-id878 . -17) (undo-tree-id879 . -17) (undo-tree-id880 . -17) (undo-tree-id881 . -17) (undo-tree-id882 . -17) (undo-tree-id883 . -17) (undo-tree-id884 . -17) (undo-tree-id885 . -17) (undo-tree-id886 . -17) (undo-tree-id887 . -17) (undo-tree-id888 . -17) (undo-tree-id889 . -17) (undo-tree-id890 . -17) (undo-tree-id891 . -17) (undo-tree-id892 . -17) (undo-tree-id893 . -17) (undo-tree-id894 . -17) (undo-tree-id895 . -17) (undo-tree-id896 . -17) (undo-tree-id897 . -17) (undo-tree-id898 . -17) (undo-tree-id899 . -17) (undo-tree-id900 . -17) (undo-tree-id901 . -17) (undo-tree-id902 . -17) (undo-tree-id903 . -17) (undo-tree-id904 . -17) (undo-tree-id905 . -17) (undo-tree-id906 . -17) (undo-tree-id907 . -17) (undo-tree-id908 . -17) (undo-tree-id909 . -17) (undo-tree-id910 . -17) (undo-tree-id911 . -17) (undo-tree-id912 . -17) (undo-tree-id913 . -17) (undo-tree-id914 . -17) (undo-tree-id915 . -17) (undo-tree-id916 . -17) (undo-tree-id917 . -17) (undo-tree-id918 . -17) (undo-tree-id919 . -17) (undo-tree-id920 . -17) (undo-tree-id921 . -17) (undo-tree-id922 . -17) (undo-tree-id923 . -17) (undo-tree-id924 . -17) (undo-tree-id925 . -17) (undo-tree-id926 . -17) (undo-tree-id927 . -17) (undo-tree-id928 . -17) (undo-tree-id929 . -17) (undo-tree-id930 . -17) (undo-tree-id931 . -17) (undo-tree-id932 . -17) (undo-tree-id933 . -17) (undo-tree-id934 . -17) (undo-tree-id935 . -17) (undo-tree-id936 . -17) (undo-tree-id937 . -17) (undo-tree-id938 . -17) (undo-tree-id939 . -17) (undo-tree-id940 . -17) (undo-tree-id941 . -17) (undo-tree-id942 . -17) (undo-tree-id943 . -17) (undo-tree-id944 . -17) (undo-tree-id945 . -17) (undo-tree-id946 . -17) (undo-tree-id947 . -17) (undo-tree-id948 . -17) (undo-tree-id949 . -17) (undo-tree-id950 . -17) (undo-tree-id951 . -17) (undo-tree-id952 . -17) (undo-tree-id953 . -17) (undo-tree-id954 . -17) (undo-tree-id955 . -17) (undo-tree-id956 . -17) (undo-tree-id957 . -17) (undo-tree-id958 . -17) (undo-tree-id959 . -17) (undo-tree-id960 . -17) (undo-tree-id961 . -17) (undo-tree-id962 . -17) (undo-tree-id963 . -17) (undo-tree-id964 . -17) (undo-tree-id965 . -17) (undo-tree-id966 . -17) (undo-tree-id967 . -17) (undo-tree-id968 . -17) (undo-tree-id969 . -17) (undo-tree-id970 . -17) (undo-tree-id971 . -17) (undo-tree-id972 . -17) (undo-tree-id973 . -17) (undo-tree-id974 . -17) (undo-tree-id975 . -17) (undo-tree-id976 . -17) (undo-tree-id977 . -17) (undo-tree-id978 . -17) (undo-tree-id979 . -17) (undo-tree-id980 . -17) (undo-tree-id981 . -17) (undo-tree-id982 . -17) (undo-tree-id983 . -17) (undo-tree-id984 . -17) (undo-tree-id985 . -17) (undo-tree-id986 . -17) (undo-tree-id987 . -17) (undo-tree-id988 . -17) (undo-tree-id989 . -17) (undo-tree-id990 . -17) (undo-tree-id991 . -17) (undo-tree-id992 . -17) (undo-tree-id993 . -17) (undo-tree-id994 . -17) (undo-tree-id995 . -17) (undo-tree-id996 . -17) (undo-tree-id997 . -17) (undo-tree-id998 . -17) (undo-tree-id999 . -17) (undo-tree-id1000 . -17) (undo-tree-id1001 . -17) (undo-tree-id1002 . -17) (undo-tree-id1003 . -17) (undo-tree-id1004 . -17) (undo-tree-id1005 . -17) (undo-tree-id1006 . -17) (undo-tree-id1007 . -17) (undo-tree-id1008 . -17) (undo-tree-id1009 . -17) (undo-tree-id1010 . -17) (undo-tree-id1011 . -17) (undo-tree-id1012 . -17) (undo-tree-id1013 . -17) (undo-tree-id1014 . -17) (undo-tree-id1015 . -17) (undo-tree-id1016 . -17) (undo-tree-id1017 . -17) (undo-tree-id1018 . -17) (undo-tree-id1019 . -17) (undo-tree-id1020 . -17) (undo-tree-id1021 . -17) (undo-tree-id1022 . -17) (undo-tree-id1023 . -17) (undo-tree-id1024 . -17) (undo-tree-id1025 . -17) (undo-tree-id1026 . -17) (undo-tree-id1027 . -17) (undo-tree-id1028 . -17) (undo-tree-id1029 . -17) (undo-tree-id1030 . -17) (undo-tree-id1031 . -17) (undo-tree-id1032 . -17) (undo-tree-id1033 . -17) (undo-tree-id1034 . -17) (undo-tree-id1035 . -17) (undo-tree-id1036 . -17) (undo-tree-id1037 . -17) (undo-tree-id1038 . -17) (undo-tree-id1039 . -17) (undo-tree-id1040 . -17) (undo-tree-id1041 . -17) (undo-tree-id1042 . -17) (undo-tree-id1043 . -17) (undo-tree-id1044 . -17) (undo-tree-id1045 . -17) (undo-tree-id1046 . -17) (undo-tree-id1047 . -17) (undo-tree-id1048 . -17) (undo-tree-id1049 . -17) (undo-tree-id1050 . -17) (undo-tree-id1051 . -17) (undo-tree-id1052 . -17) (undo-tree-id1053 . -17) (undo-tree-id1054 . -17) (undo-tree-id1055 . -17) (undo-tree-id1056 . -17) (undo-tree-id1057 . -17) (undo-tree-id1058 . -17) (undo-tree-id1059 . -17) (undo-tree-id1060 . -17) (undo-tree-id1061 . -17) (undo-tree-id1062 . -17) (undo-tree-id1063 . -17) (undo-tree-id1064 . -17) (undo-tree-id1065 . -17) (undo-tree-id1066 . -17) (undo-tree-id1067 . -17) (undo-tree-id1068 . -17) (undo-tree-id1069 . -17) (undo-tree-id1070 . -17) (undo-tree-id1071 . -17) (undo-tree-id1072 . -17) (undo-tree-id1073 . -17) (undo-tree-id1074 . -17) (undo-tree-id1075 . -17) (undo-tree-id1076 . -17) (undo-tree-id1077 . -17) (undo-tree-id1078 . -17) (undo-tree-id1079 . -17) (undo-tree-id1080 . -17) (undo-tree-id1081 . -17) (undo-tree-id1082 . -17) (undo-tree-id1083 . -17) (undo-tree-id1084 . -17) (undo-tree-id1085 . -17) (undo-tree-id1086 . -17) (undo-tree-id1087 . -17) (undo-tree-id1088 . -17) (undo-tree-id1089 . -17) (undo-tree-id1090 . -17) (undo-tree-id1091 . -17) (undo-tree-id1092 . -17) (undo-tree-id1093 . -17) (undo-tree-id1094 . -17) (undo-tree-id1095 . -17) (undo-tree-id1096 . -17) (undo-tree-id1097 . -17) (undo-tree-id1098 . -17) (undo-tree-id1099 . -17) (undo-tree-id1100 . -17) (undo-tree-id1101 . -17) (undo-tree-id1102 . -17) (undo-tree-id1103 . -17) (undo-tree-id1104 . -17) (undo-tree-id1105 . -17) (undo-tree-id1106 . -17) (undo-tree-id1107 . -17) (undo-tree-id1108 . -17) (undo-tree-id1109 . -17) (undo-tree-id1110 . -17) (undo-tree-id1111 . -17) (undo-tree-id1112 . -17) (undo-tree-id1113 . -17) (undo-tree-id1114 . -17) (undo-tree-id1115 . -17) (undo-tree-id1116 . -17) (undo-tree-id1117 . -17) (undo-tree-id1118 . -17) (undo-tree-id1119 . -17) (undo-tree-id1120 . -17) (undo-tree-id1121 . -17) (undo-tree-id1122 . -17) (undo-tree-id1123 . -17) (undo-tree-id1124 . -17) (undo-tree-id1125 . -17) (undo-tree-id1126 . -17) (undo-tree-id1127 . -17) (undo-tree-id1128 . -17) (undo-tree-id1129 . -17) (undo-tree-id1130 . -17) (undo-tree-id1131 . -17) (undo-tree-id1132 . -18) (undo-tree-id1133 . -18) (undo-tree-id1134 . -18) (undo-tree-id1135 . -18) (undo-tree-id1136 . -18) (undo-tree-id1137 . -18) (undo-tree-id1138 . -18) (undo-tree-id1139 . -18) (undo-tree-id1140 . -18) (undo-tree-id1141 . -18) (undo-tree-id1142 . -18) (undo-tree-id1143 . -18) (undo-tree-id1144 . -18) (undo-tree-id1145 . -18) (undo-tree-id1146 . -18) (undo-tree-id1147 . -18) (undo-tree-id1148 . -18) (undo-tree-id1149 . -18) (undo-tree-id1150 . -18) (undo-tree-id1151 . -18) (undo-tree-id1152 . -18) (undo-tree-id1153 . -18) (undo-tree-id1154 . -18) (undo-tree-id1155 . -18) (undo-tree-id1156 . -18) (undo-tree-id1157 . -18) (undo-tree-id1158 . -18) (undo-tree-id1159 . -18) (undo-tree-id1160 . -18) (undo-tree-id1161 . -18) (undo-tree-id1162 . -18) (undo-tree-id1163 . -18) (undo-tree-id1164 . -18) (undo-tree-id1165 . -18) (undo-tree-id1166 . -18) (undo-tree-id1167 . -18) (undo-tree-id1168 . -18) (undo-tree-id1169 . -18) (undo-tree-id1170 . -18) (undo-tree-id1171 . -18) (undo-tree-id1172 . -18) (undo-tree-id1173 . -18) (undo-tree-id1174 . -18) (undo-tree-id1175 . -2) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -18) 6180) nil (25747 30953 533855 498000) 0 nil])
([nil nil ((#("* " 0 1 (composition (0 1 [9672]) face (org-superstar-header-bullet org-level-1) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 1 2 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 6179) (6181 . 6184) (6179 . 6181) (6178 . 6179) 6095) nil (25747 30953 533752 625000) 0 nil])
([nil nil ((#("Speaking of which, here is a list of the parameter-based conditionals I have written:
" 0 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 85 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 85 86 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 6093) (undo-tree-id527 . 83) (undo-tree-id528 . -85) (undo-tree-id529 . -2) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -3) (undo-tree-id574 . -1) (undo-tree-id575 . -2) (undo-tree-id576 . -2) (undo-tree-id577 . -2) (undo-tree-id578 . -2) (undo-tree-id579 . -2) (undo-tree-id580 . -2) (undo-tree-id581 . -2) (undo-tree-id582 . -2) (undo-tree-id583 . -2) (undo-tree-id584 . -2) (undo-tree-id585 . -2) (undo-tree-id586 . -2) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) (undo-tree-id590 . -2) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (undo-tree-id593 . -2) (undo-tree-id594 . -2) (undo-tree-id595 . -2) (undo-tree-id596 . -2) (undo-tree-id597 . -2) (undo-tree-id598 . -2) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (undo-tree-id615 . -2) (undo-tree-id616 . -2) (undo-tree-id617 . -2) (undo-tree-id618 . -2) (undo-tree-id619 . -2) (undo-tree-id620 . -2) (undo-tree-id621 . -2) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -2) (undo-tree-id626 . -2) (undo-tree-id627 . -2) (undo-tree-id628 . -2) (undo-tree-id629 . -2) (undo-tree-id630 . -2) (undo-tree-id631 . -2) (undo-tree-id632 . -2) (undo-tree-id633 . -2) (undo-tree-id634 . -2) (undo-tree-id635 . -2) (undo-tree-id636 . -2) (undo-tree-id637 . -2) (undo-tree-id638 . -2) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (undo-tree-id641 . -2) (undo-tree-id642 . -2) (undo-tree-id643 . -2) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) (undo-tree-id651 . -2) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -2) (undo-tree-id655 . -2) (undo-tree-id656 . -2) (undo-tree-id657 . -2) (undo-tree-id658 . -2) (undo-tree-id659 . -2) (undo-tree-id660 . -2) (undo-tree-id661 . -2) (undo-tree-id662 . -86) (undo-tree-id663 . -86) (undo-tree-id664 . -86) (undo-tree-id665 . -86) (undo-tree-id666 . -86) (undo-tree-id667 . -86) (undo-tree-id668 . -86) (undo-tree-id669 . -86) (undo-tree-id670 . -86) (undo-tree-id671 . -86) (undo-tree-id672 . -86) (undo-tree-id673 . -86) (undo-tree-id674 . -86) (undo-tree-id675 . -86) (undo-tree-id676 . -86) (undo-tree-id677 . -86) (undo-tree-id678 . -86) (undo-tree-id679 . -86) (undo-tree-id680 . -86) (undo-tree-id681 . -86) (undo-tree-id682 . -86) (undo-tree-id683 . -86) (undo-tree-id684 . -86) (undo-tree-id685 . -86) (undo-tree-id686 . -86) (undo-tree-id687 . -86) (undo-tree-id688 . -86) (undo-tree-id689 . -86) (undo-tree-id690 . -86) (undo-tree-id691 . -86) (undo-tree-id692 . -86) (undo-tree-id693 . -86) (undo-tree-id694 . -86) (undo-tree-id695 . -86) (undo-tree-id696 . -86) (undo-tree-id697 . -86) (undo-tree-id698 . -86) (undo-tree-id699 . -86) (undo-tree-id700 . -86) (undo-tree-id701 . -86) (undo-tree-id702 . -86) (undo-tree-id703 . -86) (undo-tree-id704 . -86) (undo-tree-id705 . -86) (undo-tree-id706 . -86) (undo-tree-id707 . -86) (undo-tree-id708 . -86) (undo-tree-id709 . -86) (undo-tree-id710 . -86) (undo-tree-id711 . -86) (undo-tree-id712 . -86) (undo-tree-id713 . -86) (undo-tree-id714 . -86) (undo-tree-id715 . -86) (undo-tree-id716 . -86) (undo-tree-id717 . -86) (undo-tree-id718 . -86) (undo-tree-id719 . -86) (undo-tree-id720 . -86) (undo-tree-id721 . -3) (undo-tree-id722 . -3) (undo-tree-id723 . -3) (undo-tree-id724 . -3) (undo-tree-id725 . -3) (undo-tree-id726 . -3) (undo-tree-id727 . -3) (undo-tree-id728 . -3) (undo-tree-id729 . -3) (undo-tree-id730 . -3) (undo-tree-id731 . -3) (undo-tree-id732 . -3) (undo-tree-id733 . -3) (undo-tree-id734 . -3) (undo-tree-id735 . -3) (undo-tree-id736 . -3) (undo-tree-id737 . -3) (undo-tree-id738 . -3) (undo-tree-id739 . -3) (undo-tree-id740 . -3) (undo-tree-id741 . -3) (undo-tree-id742 . -3) (undo-tree-id743 . -3) (undo-tree-id744 . -3) (undo-tree-id745 . -3) (undo-tree-id746 . -3) (undo-tree-id747 . -3) (undo-tree-id748 . -3) (undo-tree-id749 . -3) (undo-tree-id750 . -3) (undo-tree-id751 . -3) (undo-tree-id752 . -3) (undo-tree-id753 . -3) (undo-tree-id754 . -3) (undo-tree-id755 . -3) (undo-tree-id756 . -3) (undo-tree-id757 . -3) (undo-tree-id758 . -3) (undo-tree-id759 . -3) (undo-tree-id760 . -3) (undo-tree-id761 . -3) (undo-tree-id762 . -3) (undo-tree-id763 . -3) (undo-tree-id764 . -2) (undo-tree-id765 . -2) (undo-tree-id766 . -2) (undo-tree-id767 . -2) (undo-tree-id768 . -2) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (undo-tree-id814 . -2) (undo-tree-id815 . -2) (undo-tree-id816 . -2) (undo-tree-id817 . -2) (undo-tree-id818 . -2) (undo-tree-id819 . -2) (undo-tree-id820 . -2) (undo-tree-id821 . -2) (undo-tree-id822 . -2) (undo-tree-id823 . -2) (undo-tree-id824 . -2) (undo-tree-id825 . -2) (undo-tree-id826 . -2) (undo-tree-id827 . -2) (undo-tree-id828 . -2) (undo-tree-id829 . -2) (undo-tree-id830 . -2) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (undo-tree-id834 . -2) (undo-tree-id835 . -2) (undo-tree-id836 . -2) (undo-tree-id837 . -2) (undo-tree-id838 . -2) (undo-tree-id839 . -2) (undo-tree-id840 . -2) (undo-tree-id841 . -2) (undo-tree-id842 . -2) (undo-tree-id843 . -2) (undo-tree-id844 . -2) (undo-tree-id845 . -2) (undo-tree-id846 . -2) (undo-tree-id847 . -2) (undo-tree-id848 . -2) (undo-tree-id849 . -2) (undo-tree-id850 . -2) (undo-tree-id851 . -2) (undo-tree-id852 . -2) (undo-tree-id853 . -2) (undo-tree-id854 . -2) (undo-tree-id855 . -2) (undo-tree-id856 . -2) (undo-tree-id857 . -2) (undo-tree-id858 . -2) (undo-tree-id859 . -2) (undo-tree-id860 . -2) (undo-tree-id861 . -2) (undo-tree-id862 . -2) (undo-tree-id863 . -2) (undo-tree-id864 . -2) (undo-tree-id865 . -2) (undo-tree-id866 . -2) (undo-tree-id867 . -2) (undo-tree-id868 . -2) (undo-tree-id869 . -2) (undo-tree-id870 . -86) 6095) nil (25747 30953 559736 703000) 0 nil])
([nil nil ((#("* " 0 1 (composition (0 1 [9672]) face (org-superstar-header-bullet org-level-1) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil) 1 2 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 6093) (6095 . 6098) (6093 . 6096) (#("* 
" 0 1 (composition (0 1 [9672]) face (org-superstar-header-bullet org-level-1) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil) 1 2 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil) 2 3 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 6309) (undo-tree-id2569 . -3) (undo-tree-id2570 . -3) (undo-tree-id2571 . -3) (undo-tree-id2572 . -3) (undo-tree-id2573 . -3) (undo-tree-id2574 . -3) (undo-tree-id2575 . -3) (undo-tree-id2576 . -3) (undo-tree-id2577 . -3) (undo-tree-id2578 . -3) (undo-tree-id2579 . -3) (undo-tree-id2580 . -3) (undo-tree-id2581 . -3) (undo-tree-id2582 . -3) (undo-tree-id2583 . -3) (undo-tree-id2584 . -3) (undo-tree-id2585 . -3) (undo-tree-id2586 . -3) (undo-tree-id2587 . -3) (undo-tree-id2588 . -3) (undo-tree-id2589 . -3) (undo-tree-id2590 . -3) (undo-tree-id2591 . -3) (undo-tree-id2592 . -3) (undo-tree-id2593 . -3) (undo-tree-id2594 . -3) (undo-tree-id2595 . -3) (undo-tree-id2596 . -3) (undo-tree-id2597 . -3) (undo-tree-id2598 . -3) (undo-tree-id2599 . -3) (undo-tree-id2600 . -3) (undo-tree-id2601 . -3) (undo-tree-id2602 . -3) (undo-tree-id2603 . -3) (undo-tree-id2604 . -3) (undo-tree-id2605 . -3) (undo-tree-id2606 . -3) (undo-tree-id2607 . -3) (undo-tree-id2608 . -3) (undo-tree-id2609 . -3) (undo-tree-id2610 . -3) (undo-tree-id2611 . -3) (undo-tree-id2612 . -3) (undo-tree-id2613 . -3) (undo-tree-id2614 . -3) (undo-tree-id2615 . -3) (undo-tree-id2616 . -3) (undo-tree-id2617 . -3) (undo-tree-id2618 . -3) (undo-tree-id2619 . -3) (undo-tree-id2620 . -3) (undo-tree-id2621 . -3) (undo-tree-id2622 . -3) (undo-tree-id2623 . -3) (undo-tree-id2624 . -3) (undo-tree-id2625 . -3) (undo-tree-id2626 . -3) (undo-tree-id2627 . -3) (undo-tree-id2628 . -3) (undo-tree-id2629 . -3) (undo-tree-id2630 . -3) (undo-tree-id2631 . -3) (undo-tree-id2632 . -3) (undo-tree-id2633 . -3) (undo-tree-id2634 . -3) (undo-tree-id2635 . -3) (undo-tree-id2636 . -3) (undo-tree-id2637 . -3) (undo-tree-id2638 . -3) (undo-tree-id2639 . -3) (undo-tree-id2640 . -3) (undo-tree-id2641 . -3) (undo-tree-id2642 . -3) (undo-tree-id2643 . -3) (undo-tree-id2644 . -3) (undo-tree-id2645 . -3) (undo-tree-id2646 . -3) (undo-tree-id2647 . -3) (undo-tree-id2648 . -3) (undo-tree-id2649 . -3) (undo-tree-id2650 . -3) (undo-tree-id2651 . -3) (undo-tree-id2652 . -3) (undo-tree-id2653 . -3) (undo-tree-id2654 . -3) (undo-tree-id2655 . -3) (undo-tree-id2656 . -3) (undo-tree-id2657 . -3) (undo-tree-id2658 . -3) (undo-tree-id2659 . -3) (undo-tree-id2660 . -3) (undo-tree-id2661 . -3) (undo-tree-id2662 . -3) (undo-tree-id2663 . -3) (undo-tree-id2664 . -3) (undo-tree-id2665 . -3) (undo-tree-id2666 . -3) (undo-tree-id2667 . -3) (undo-tree-id2668 . -3) (undo-tree-id2669 . -3) (undo-tree-id2670 . -3) (undo-tree-id2671 . -3) (undo-tree-id2672 . -3) (undo-tree-id2673 . -3) (undo-tree-id2674 . -3) (undo-tree-id2675 . -3) (undo-tree-id2676 . -3) (undo-tree-id2677 . -3) (undo-tree-id2678 . -3) (undo-tree-id2679 . -3) (undo-tree-id2680 . -3) (undo-tree-id2681 . -3) (undo-tree-id2682 . -3) (undo-tree-id2683 . -3) (undo-tree-id2684 . -3) (undo-tree-id2685 . -3) (undo-tree-id2686 . -3) (undo-tree-id2687 . -3) (undo-tree-id2688 . -3) (undo-tree-id2689 . -3) (undo-tree-id2690 . -3) (undo-tree-id2691 . -3) (undo-tree-id2692 . -3) (undo-tree-id2693 . -3) (undo-tree-id2694 . -3) (undo-tree-id2695 . -3) (undo-tree-id2696 . -3) (undo-tree-id2697 . -3) (undo-tree-id2698 . -3) (undo-tree-id2699 . -3) (undo-tree-id2700 . -3) (undo-tree-id2701 . -3) (undo-tree-id2702 . -3) (undo-tree-id2703 . -3) (undo-tree-id2704 . -3) (undo-tree-id2705 . -3) (undo-tree-id2706 . -3) (undo-tree-id2707 . -3) (undo-tree-id2708 . -3) (undo-tree-id2709 . -3) (undo-tree-id2710 . -3) (undo-tree-id2711 . -3) (undo-tree-id2712 . -3) (undo-tree-id2713 . -3) (undo-tree-id2714 . -3) (undo-tree-id2715 . -3) (undo-tree-id2716 . -3) (undo-tree-id2717 . -3) (undo-tree-id2718 . -3) (undo-tree-id2719 . -3) (undo-tree-id2720 . -3) (undo-tree-id2721 . -3) (undo-tree-id2722 . -3) (undo-tree-id2723 . -3) (undo-tree-id2724 . -3) (undo-tree-id2725 . -3) (undo-tree-id2726 . -3) (undo-tree-id2727 . -3) (undo-tree-id2728 . -3) (undo-tree-id2729 . -3) (undo-tree-id2730 . -3) (undo-tree-id2731 . -3) (undo-tree-id2732 . -3) (undo-tree-id2733 . -3) (undo-tree-id2734 . -3) (undo-tree-id2735 . -3) (undo-tree-id2736 . -3) (undo-tree-id2737 . -3) (undo-tree-id2738 . -3) (undo-tree-id2739 . -3) (undo-tree-id2740 . -3) (undo-tree-id2741 . -3) (undo-tree-id2742 . -3) (undo-tree-id2743 . -3) (undo-tree-id2744 . -3) (undo-tree-id2745 . -3) (undo-tree-id2746 . -3) (undo-tree-id2747 . -3) (undo-tree-id2748 . -3) (undo-tree-id2749 . -3) (undo-tree-id2750 . -3) (undo-tree-id2751 . -3) (undo-tree-id2752 . -3) (undo-tree-id2753 . -3) (undo-tree-id2754 . -3) (undo-tree-id2755 . -3) (undo-tree-id2756 . -3) (undo-tree-id2757 . -3) (undo-tree-id2758 . -3) (undo-tree-id2759 . -3) (undo-tree-id2760 . -3) (undo-tree-id2761 . -3) (undo-tree-id2762 . -3) (undo-tree-id2763 . -3) (undo-tree-id2764 . -3) (undo-tree-id2765 . -3) (undo-tree-id2766 . -3) (undo-tree-id2767 . -3) (undo-tree-id2768 . -3) (undo-tree-id2769 . -3) (undo-tree-id2770 . -3) (undo-tree-id2771 . -3) (undo-tree-id2772 . -3) (undo-tree-id2773 . -3) (undo-tree-id2774 . -3) (undo-tree-id2775 . -3) (undo-tree-id2776 . -3) (undo-tree-id2777 . -3) (undo-tree-id2778 . -3) (undo-tree-id2779 . -3) (undo-tree-id2780 . -3) (undo-tree-id2781 . -3) (undo-tree-id2782 . -3) (undo-tree-id2783 . -3) (undo-tree-id2784 . -3) (undo-tree-id2785 . -3) (undo-tree-id2786 . -3) (undo-tree-id2787 . -3) (undo-tree-id2788 . -3) (undo-tree-id2789 . -3) (undo-tree-id2790 . -3) (undo-tree-id2791 . -3) (undo-tree-id2792 . -3) (undo-tree-id2793 . -3) (undo-tree-id2794 . -3) (undo-tree-id2795 . -3) (undo-tree-id2796 . -3) (undo-tree-id2797 . -3) (undo-tree-id2798 . -3) (undo-tree-id2799 . -3) (undo-tree-id2800 . -3) (undo-tree-id2801 . -3) (undo-tree-id2802 . -3) (undo-tree-id2803 . -3) (undo-tree-id2804 . -3) (undo-tree-id2805 . -3) (undo-tree-id2806 . -3) (undo-tree-id2807 . -3) (undo-tree-id2808 . -3) (undo-tree-id2809 . -3) (undo-tree-id2810 . -3) (undo-tree-id2811 . -3) (undo-tree-id2812 . -3) (undo-tree-id2813 . -3) (undo-tree-id2814 . -3) (undo-tree-id2815 . -3) (undo-tree-id2816 . -3) (undo-tree-id2817 . -3) (undo-tree-id2818 . -3) (undo-tree-id2819 . -3) (undo-tree-id2820 . -3) (undo-tree-id2821 . -3) (undo-tree-id2822 . -3) (undo-tree-id2823 . -3) (undo-tree-id2824 . -3) (undo-tree-id2825 . -3) (undo-tree-id2826 . -3) (undo-tree-id2827 . -3) (undo-tree-id2828 . -3) (undo-tree-id2829 . -3) (undo-tree-id2830 . -3) (undo-tree-id2831 . -3) (undo-tree-id2832 . -3) (undo-tree-id2833 . -3) (undo-tree-id2834 . -3) (undo-tree-id2835 . -3) (undo-tree-id2836 . -3) (undo-tree-id2837 . -3) (undo-tree-id2838 . -3) (undo-tree-id2839 . -3) (undo-tree-id2840 . -3) (undo-tree-id2841 . -3) (undo-tree-id2842 . -3) (undo-tree-id2843 . -3) (undo-tree-id2844 . -3) (undo-tree-id2845 . -3) (undo-tree-id2846 . -3) (undo-tree-id2847 . -3) (undo-tree-id2848 . -3) (undo-tree-id2849 . -3) (undo-tree-id2850 . -3) (undo-tree-id2851 . -3) (undo-tree-id2852 . -3) (undo-tree-id2853 . -3) (undo-tree-id2854 . -3) (undo-tree-id2855 . -3) (undo-tree-id2856 . -3) (undo-tree-id2857 . -3) (undo-tree-id2858 . -3) (undo-tree-id2859 . -3) (undo-tree-id2860 . -3) (undo-tree-id2861 . -3) (undo-tree-id2862 . -3) (undo-tree-id2863 . -3) (undo-tree-id2864 . -3) (undo-tree-id2865 . -3) (undo-tree-id2866 . -3) (undo-tree-id2867 . -3) (undo-tree-id2868 . -3) (undo-tree-id2869 . -3) (undo-tree-id2870 . -3) (undo-tree-id2871 . -3) (undo-tree-id2872 . -3) (undo-tree-id2873 . -3) (undo-tree-id2874 . -3) (undo-tree-id2875 . -3) (undo-tree-id2876 . -3) (undo-tree-id2877 . -3) (undo-tree-id2878 . -3) (undo-tree-id2879 . -3) (undo-tree-id2880 . -3) (undo-tree-id2881 . -3) (undo-tree-id2882 . -3) (undo-tree-id2883 . -3) (undo-tree-id2884 . -3) (undo-tree-id2885 . -3) (undo-tree-id2886 . -3) (undo-tree-id2887 . -3) (undo-tree-id2888 . -3) (undo-tree-id2889 . -3) (undo-tree-id2890 . -3) (undo-tree-id2891 . -3) (undo-tree-id2892 . -3) (undo-tree-id2893 . -3) (undo-tree-id2894 . -3) (undo-tree-id2895 . -3) (undo-tree-id2896 . -3) (undo-tree-id2897 . -3) (undo-tree-id2898 . -3) (undo-tree-id2899 . -3) (undo-tree-id2900 . -3) (undo-tree-id2901 . -3) (undo-tree-id2902 . -3) (undo-tree-id2903 . -3) (undo-tree-id2904 . -3) (undo-tree-id2905 . -3) (undo-tree-id2906 . -3) (undo-tree-id2907 . -3) (undo-tree-id2908 . -3) (undo-tree-id2909 . -3) (undo-tree-id2910 . -3) (undo-tree-id2911 . -3) (undo-tree-id2912 . -3) (undo-tree-id2913 . -3) (undo-tree-id2914 . -3) (undo-tree-id2915 . -3) (undo-tree-id2916 . -3) (undo-tree-id2917 . -3) (undo-tree-id2918 . -3) (undo-tree-id2919 . -3) (undo-tree-id2920 . -3) (undo-tree-id2921 . -3) (undo-tree-id2922 . -3) (undo-tree-id2923 . -3) (undo-tree-id2924 . -3) (undo-tree-id2925 . -3) (undo-tree-id2926 . -3) (undo-tree-id2927 . -3) (undo-tree-id2928 . -3) (undo-tree-id2929 . -3) (undo-tree-id2930 . -3) (undo-tree-id2931 . -3) (6284 . 6311) (#("some dummy examples of their usage" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 16 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 16 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 17 18 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 18 19 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 19 20 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 20 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 21 22 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 22 23 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 23 24 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 24 25 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 25 26 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 26 27 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 27 28 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 28 29 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 29 30 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 30 31 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 31 32 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 32 33 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 33 34 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6284) (6303 . 6318) (#(" of themL" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6303) (6275 . 6312) (#("In no particular order, they are" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 16 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 16 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 17 18 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 18 19 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 19 20 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 20 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 21 22 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 22 23 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 23 24 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 24 25 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 25 26 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 26 27 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 27 28 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 28 29 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 29 30 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 30 31 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 31 32 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6275) (6275 . 6307) (#("T" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6275) (6274 . 6276) (6226 . 6227) (6210 . 6211) (6250 . 6272) (#("!" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6250) (6249 . 6251) (#("-reco" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6249) (6241 . 6254) (#("parameter recor" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6241) (6237 . 6256) (#("\"" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6202) (#("\"" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6200) (6201 . 6203) (6200 . 6202) (#("\"" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6200) (6193 . 6201) (#("present" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6193) (6218 . 6235) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6218) (6217 . 6219) (#("0" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6217) (6163 . 6218) (#("rely on parameters to " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 16 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 16 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 17 18 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 18 19 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 19 20 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 20 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 21 22 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6163) (6119 . 6185) (#("made a " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6119) (6111 . 6126) (6099 . 6100) (#("c" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 6099) (6095 . 6111) (#("** " 0 1 (composition (5 1 [32]) face org-superstar-leading wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil) 1 2 (composition (6 1 [8594]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil) 2 3 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . 6093) (6096 . 6098) (#("
The next section covers " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 16 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 16 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 17 18 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 18 19 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 19 20 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 20 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 21 22 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 22 23 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 23 24 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 24 25 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6092) (6092 . 6117)) ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6092) (#("The next section " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 16 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 16 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6093) (#("covers " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6110) (6092 . 6117) (#("* " 0 1 (composition (0 1 [9672]) face (org-superstar-header-bullet org-level-1) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil) 1 2 (face org-level-1 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . 6096) (undo-tree-id2225 . 2) (6093 . 6096) (#("The conditionals" 0 4 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil) 4 5 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil) 5 16 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 6095) (6099 . 6100) (#("C" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 6099) (#("
" 0 1 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 6111) (#("I have made a " 0 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6112) (6119 . 6126) (#("written a number of c" 0 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6119) (#("onditional macro" 0 16 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6140) (#("s that rely on parame" 0 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 16 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 16 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 17 18 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 18 19 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 19 20 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 20 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6156) (#("ters to " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6177) (6163 . 6185) (#("check if " 0 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6163) (#("a given parameter is " 0 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6172) (#("present in the parame" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 21 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6193) (#("ter0" 0 3 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6214) (6217 . 6218) (#("-a" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6217) (6218 . 6219) (#("alist " 0 5 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6218) (#("and update " 0 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6224) (6193 . 6200) (#("set to \"" 0 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6193) (6200 . 6201) (#("\"\"" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6200) (#("on" 0 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6201) (6200 . 6201) (6202 . 6203) (#("the parameter recor" 0 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 16 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 16 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 17 18 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 18 19 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6237) (6241 . 6256) (#("~package-reco" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 8 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6241) (6249 . 6254) (#("~!" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6249) (6250 . 6251) (#(" record appropriately" 0 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6250) (#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6271) (#("~" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6210) (#("~" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6226) (#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 6274) (#("T" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6275) (6275 . 6276) (#("In no particular orde" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 16 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 16 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 17 18 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 18 19 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 19 20 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 20 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6275) (#("r, they are" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6296) (6275 . 6307) (#("Here " 0 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6275) (#("are some dummy exampl" 0 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 15 16 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 16 17 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 17 18 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 18 19 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 19 20 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 20 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6280) (#("es of themL" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6301) (6303 . 6312) (#(" of their usage" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6303) (6284 . 6318) (#("examples of their usa" 0 21 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6284) (#("ge:" 0 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 6305) (#("
* " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (composition (0 1 [9672]) face (org-superstar-header-bullet org-level-1) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil) 2 3 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 6308) (6309 . 6312) (#("* 
" 0 1 (composition (0 1 [9672]) face (org-superstar-header-bullet org-level-1) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil) 1 2 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil) 2 3 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 6093) (undo-tree-id2226 . 1) (undo-tree-id2227 . -3) (undo-tree-id2228 . -3) (undo-tree-id2229 . -3) (undo-tree-id2230 . -3) (undo-tree-id2231 . -3) (undo-tree-id2232 . -3) (undo-tree-id2233 . -3) (undo-tree-id2234 . -3) (undo-tree-id2235 . -3) (undo-tree-id2236 . -3) (undo-tree-id2237 . -3) (undo-tree-id2238 . -3) (undo-tree-id2239 . -3) (undo-tree-id2240 . -3) (undo-tree-id2241 . -3) (undo-tree-id2242 . -3) (undo-tree-id2243 . -3) (undo-tree-id2244 . -3) (undo-tree-id2245 . -3) (undo-tree-id2246 . -3) (undo-tree-id2247 . -3) (undo-tree-id2248 . -3) (undo-tree-id2249 . -3) (undo-tree-id2250 . -3) (undo-tree-id2251 . -3) (undo-tree-id2252 . -3) (undo-tree-id2253 . -3) (undo-tree-id2254 . -3) (undo-tree-id2255 . -3) (undo-tree-id2256 . -3) (undo-tree-id2257 . -3) (undo-tree-id2258 . -3) (undo-tree-id2259 . -3) (undo-tree-id2260 . -3) (undo-tree-id2261 . -3) (undo-tree-id2262 . -3) (undo-tree-id2263 . -3) (undo-tree-id2264 . -3) (undo-tree-id2265 . -3) (undo-tree-id2266 . -3) (undo-tree-id2267 . -3) (undo-tree-id2268 . -3) (undo-tree-id2269 . -3) (undo-tree-id2270 . -3) (undo-tree-id2271 . -3) (undo-tree-id2272 . -3) (undo-tree-id2273 . -3) (undo-tree-id2274 . -3) (undo-tree-id2275 . -3) (undo-tree-id2276 . -3) (undo-tree-id2277 . -3) (undo-tree-id2278 . -3) (undo-tree-id2279 . -3) (undo-tree-id2280 . -3) (undo-tree-id2281 . -3) (undo-tree-id2282 . -3) (undo-tree-id2283 . -3) (undo-tree-id2284 . -3) (undo-tree-id2285 . -3) (undo-tree-id2286 . -3) (undo-tree-id2287 . -3) (undo-tree-id2288 . -3) (undo-tree-id2289 . -3) (undo-tree-id2290 . -3) (undo-tree-id2291 . -3) (undo-tree-id2292 . -3) (undo-tree-id2293 . -3) (undo-tree-id2294 . -3) (undo-tree-id2295 . -3) (undo-tree-id2296 . -3) (undo-tree-id2297 . -3) (undo-tree-id2298 . -3) (undo-tree-id2299 . -3) (undo-tree-id2300 . -3) (undo-tree-id2301 . -3) (undo-tree-id2302 . -3) (undo-tree-id2303 . -3) (undo-tree-id2304 . -3) (undo-tree-id2305 . -3) (undo-tree-id2306 . -3) (undo-tree-id2307 . -3) (undo-tree-id2308 . -3) (undo-tree-id2309 . -3) (undo-tree-id2310 . -3) (undo-tree-id2311 . -3) (undo-tree-id2312 . -3) (undo-tree-id2313 . -3) (undo-tree-id2314 . -3) (undo-tree-id2315 . -3) (undo-tree-id2316 . -3) (undo-tree-id2317 . -3) (undo-tree-id2318 . -3) (undo-tree-id2319 . -3) (undo-tree-id2320 . -3) (undo-tree-id2321 . -3) (undo-tree-id2322 . -3) (undo-tree-id2323 . -3) (undo-tree-id2324 . -3) (undo-tree-id2325 . -3) (undo-tree-id2326 . -3) (undo-tree-id2327 . -3) (undo-tree-id2328 . -3) (undo-tree-id2329 . -3) (undo-tree-id2330 . -3) (undo-tree-id2331 . -3) (undo-tree-id2332 . -3) (undo-tree-id2333 . -3) (undo-tree-id2334 . -3) (undo-tree-id2335 . -3) (undo-tree-id2336 . -3) (undo-tree-id2337 . -3) (undo-tree-id2338 . -3) (undo-tree-id2339 . -3) (undo-tree-id2340 . -3) (undo-tree-id2341 . -3) (undo-tree-id2342 . -3) (undo-tree-id2343 . -3) (undo-tree-id2344 . -3) (undo-tree-id2345 . -3) (undo-tree-id2346 . -3) (undo-tree-id2347 . -3) (undo-tree-id2348 . -3) (undo-tree-id2349 . -3) (undo-tree-id2350 . -3) (undo-tree-id2351 . -3) (undo-tree-id2352 . -3) (undo-tree-id2353 . -3) (undo-tree-id2354 . -3) (undo-tree-id2355 . -3) (undo-tree-id2356 . -3) (undo-tree-id2357 . -3) (undo-tree-id2358 . -3) (undo-tree-id2359 . -3) (undo-tree-id2360 . -3) (undo-tree-id2361 . -3) (undo-tree-id2362 . -3) (undo-tree-id2363 . -3) (undo-tree-id2364 . -3) (undo-tree-id2365 . -3) (undo-tree-id2366 . -3) (undo-tree-id2367 . -3) (undo-tree-id2368 . -3) (undo-tree-id2369 . -3) (undo-tree-id2370 . -3) (undo-tree-id2371 . -3) (undo-tree-id2372 . -3) (undo-tree-id2373 . -3) (undo-tree-id2374 . -3) (undo-tree-id2375 . -3) (undo-tree-id2376 . -3) (undo-tree-id2377 . -3) (undo-tree-id2378 . -3) (undo-tree-id2379 . -3) (undo-tree-id2380 . -3) (undo-tree-id2381 . -3) (undo-tree-id2382 . -3) (undo-tree-id2383 . -3) (undo-tree-id2384 . -3) (undo-tree-id2385 . -3) (undo-tree-id2386 . -3) (undo-tree-id2387 . -3) (undo-tree-id2388 . -3) (undo-tree-id2389 . -3) (undo-tree-id2390 . -3) (undo-tree-id2391 . -3) (undo-tree-id2392 . -3) (undo-tree-id2393 . -3) (undo-tree-id2394 . -3) (undo-tree-id2395 . -3) (undo-tree-id2396 . -3) (undo-tree-id2397 . -3) (undo-tree-id2398 . -3) (undo-tree-id2399 . -3) (undo-tree-id2400 . -3) (undo-tree-id2401 . -3) (undo-tree-id2402 . -3) (undo-tree-id2403 . -3) (undo-tree-id2404 . -3) (undo-tree-id2405 . -3) (undo-tree-id2406 . -3) (undo-tree-id2407 . -3) (undo-tree-id2408 . -3) (undo-tree-id2409 . -3) (undo-tree-id2410 . -3) (undo-tree-id2411 . -3) (undo-tree-id2412 . -3) (undo-tree-id2413 . -3) (undo-tree-id2414 . -3) (undo-tree-id2415 . -3) (undo-tree-id2416 . -3) (undo-tree-id2417 . -3) (undo-tree-id2418 . -3) (undo-tree-id2419 . -3) (undo-tree-id2420 . -3) (undo-tree-id2421 . -3) (undo-tree-id2422 . -3) (undo-tree-id2423 . -3) (undo-tree-id2424 . -3) (undo-tree-id2425 . -3) (undo-tree-id2426 . -3) (undo-tree-id2427 . -3) (undo-tree-id2428 . -3) (undo-tree-id2429 . -3) (undo-tree-id2430 . -3) (undo-tree-id2431 . -3) (undo-tree-id2432 . -3) (undo-tree-id2433 . -3) (undo-tree-id2434 . -3) (undo-tree-id2435 . -3) (undo-tree-id2436 . -3) (undo-tree-id2437 . -3) (undo-tree-id2438 . -3) (undo-tree-id2439 . -3) (undo-tree-id2440 . -3) (undo-tree-id2441 . -3) (undo-tree-id2442 . -3) (undo-tree-id2443 . -3) (undo-tree-id2444 . -3) (undo-tree-id2445 . -3) (undo-tree-id2446 . -3) (undo-tree-id2447 . -3) (undo-tree-id2448 . -3) (undo-tree-id2449 . -3) (undo-tree-id2450 . -3) (undo-tree-id2451 . -3) (undo-tree-id2452 . -3) (undo-tree-id2453 . -3) (undo-tree-id2454 . -3) (undo-tree-id2455 . -3) (undo-tree-id2456 . -3) (undo-tree-id2457 . -3) (undo-tree-id2458 . -3) (undo-tree-id2459 . -3) (undo-tree-id2460 . -3) (undo-tree-id2461 . -3) (undo-tree-id2462 . -3) (undo-tree-id2463 . -3) (undo-tree-id2464 . -3) (undo-tree-id2465 . -3) (undo-tree-id2466 . -3) (undo-tree-id2467 . -3) (undo-tree-id2468 . -3) (undo-tree-id2469 . -3) (undo-tree-id2470 . -3) (undo-tree-id2471 . -3) (undo-tree-id2472 . -3) (undo-tree-id2473 . -3) (undo-tree-id2474 . -3) (undo-tree-id2475 . -3) (undo-tree-id2476 . -3) (undo-tree-id2477 . -3) (undo-tree-id2478 . -3) (undo-tree-id2479 . -3) (undo-tree-id2480 . -3) (undo-tree-id2481 . -3) (undo-tree-id2482 . -3) (undo-tree-id2483 . -3) (undo-tree-id2484 . -3) (undo-tree-id2485 . -3) (undo-tree-id2486 . -3) (undo-tree-id2487 . -3) (undo-tree-id2488 . -3) (undo-tree-id2489 . -3) (undo-tree-id2490 . -3) (undo-tree-id2491 . -3) (undo-tree-id2492 . -3) (undo-tree-id2493 . -3) (undo-tree-id2494 . -3) (undo-tree-id2495 . -3) (undo-tree-id2496 . -3) (undo-tree-id2497 . -3) (undo-tree-id2498 . -3) (undo-tree-id2499 . -3) (undo-tree-id2500 . -3) (undo-tree-id2501 . -3) (undo-tree-id2502 . -3) (undo-tree-id2503 . -3) (undo-tree-id2504 . -3) (undo-tree-id2505 . -3) (undo-tree-id2506 . -3) (undo-tree-id2507 . -3) (undo-tree-id2508 . -3) (undo-tree-id2509 . -3) (undo-tree-id2510 . -3) (undo-tree-id2511 . -3) (undo-tree-id2512 . -3) (undo-tree-id2513 . -3) (undo-tree-id2514 . -3) (undo-tree-id2515 . -3) (undo-tree-id2516 . -3) (undo-tree-id2517 . -3) (undo-tree-id2518 . -3) (undo-tree-id2519 . -3) (undo-tree-id2520 . -3) (undo-tree-id2521 . -3) (undo-tree-id2522 . -3) (undo-tree-id2523 . -3) (undo-tree-id2524 . -3) (undo-tree-id2525 . -3) (undo-tree-id2526 . -3) (undo-tree-id2527 . -3) (undo-tree-id2528 . -3) (undo-tree-id2529 . -3) (undo-tree-id2530 . -3) (undo-tree-id2531 . -3) (undo-tree-id2532 . -3) (undo-tree-id2533 . -3) (undo-tree-id2534 . -3) (undo-tree-id2535 . -3) (undo-tree-id2536 . -3) (undo-tree-id2537 . -3) (undo-tree-id2538 . -3) (undo-tree-id2539 . -3) (undo-tree-id2540 . -3) (undo-tree-id2541 . -3) (undo-tree-id2542 . -3) (undo-tree-id2543 . -3) (undo-tree-id2544 . -3) (undo-tree-id2545 . -3) (undo-tree-id2546 . -3) (undo-tree-id2547 . -3) (undo-tree-id2548 . -3) (undo-tree-id2549 . -3) (undo-tree-id2550 . -3) (undo-tree-id2551 . -3) (undo-tree-id2552 . -3) (undo-tree-id2553 . -3) (undo-tree-id2554 . -3) (undo-tree-id2555 . -3) (undo-tree-id2556 . -3) (undo-tree-id2557 . -3) (undo-tree-id2558 . -3) (undo-tree-id2559 . -3) (undo-tree-id2560 . -3) (undo-tree-id2561 . -3) (undo-tree-id2562 . -3) (undo-tree-id2563 . -3) (undo-tree-id2564 . -3) (undo-tree-id2565 . -3) (undo-tree-id2566 . -3) (undo-tree-id2567 . -3) (#("** " 0 1 (composition (5 1 [32]) face org-superstar-leading wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil) 1 2 (composition (6 1 [8594]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil) 2 3 (face org-level-2 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 6095) (undo-tree-id2568 . 3) (6093 . 6095)) (25747 30954 605343 870000) 0 nil])
([nil nil ((#("** 
" 0 1 (composition (5 1 [32]) face org-superstar-leading wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (composition (6 1 [8594]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 3 4 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 6093) (undo-tree-id3037 . 4) (undo-tree-id3038 . -3)) nil (25747 31357 830450 225000) 0 nil])
([nil nil ((6312 . 6324) (#("* " 0 1 (composition (0 1 [9672]) face (org-superstar-header-bullet org-level-1) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 1 2 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 6309) (6311 . 6314) (6309 . 6311) (6308 . 6309) 6276) nil (25747 31357 830449 103000) 0 nil])
([nil nil ((6345 . 6353) (#("_" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6345) (undo-tree-id3035 . -1) 6346 (6344 . 6346) (6343 . 6344) (6325 . 6343) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6325) (undo-tree-id3036 . -1) 6326 (6325 . 6326) (6324 . 6325)) nil (25747 31357 830448 281000) 0 nil])
([nil nil ((6360 . 6369) (#("g" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6360) (undo-tree-id3030 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6361) (undo-tree-id3031 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6362) (undo-tree-id3032 . -1) 6363 (6364 . 6376) (6360 . 6364) (#("p" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6360) (undo-tree-id3033 . -1) 6361 (6360 . 6361) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -6360) (undo-tree-id3034 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6361) (6347 . 6362) (6346 . 6348) (6343 . 6346) 6333) nil (25747 31357 830446 117000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6385 . 6386) (#("
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6423) (6383 . 6424) 6368) nil (25747 31357 830442 481000) 0 nil])
([nil nil ((6424 . 6440) (6422 . 6424)) nil (25747 31357 830441 649000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6499) (6441 . 6500) 6439) nil (25747 31357 830441 238000) 0 nil])
([nil nil ((6473 . 6474) (#(")" 0 1 (face (org-block) font-lock-multiline t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil src-block t font-lock-fontified t)) . -6473) (6469 . 6474) (#("." 0 1 (face (org-block) font-lock-multiline t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t)) . -6469) (undo-tree-id3027 . -1) (#("." 0 1 (face (org-block) font-lock-multiline t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t)) . -6470) (undo-tree-id3028 . -1) 6471 (6468 . 6471) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t src-block t font-lock-fontified t)) . -6459) (undo-tree-id3029 . -1) 6460 (6458 . 6460)) nil (25747 31357 830440 537000) 0 nil])
([nil nil ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6509) (undo-tree-id3025 . -1) 6510 (6509 . 6510) (#("N" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6509) (undo-tree-id3026 . -1) 6510 (6509 . 6510) (6506 . 6509) 6473) nil (25747 31357 830438 774000) 0 nil])
([nil nil ((#("  
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6507) (undo-tree-id3022 . 1) (undo-tree-id3023 . -2) (undo-tree-id3024 . -1) 6508) nil (25747 31357 830437 541000) 0 nil])
([nil nil ((6566 . 6585) (6552 . 6566) (6531 . 6552) (6510 . 6531) (6489 . 6510) (6468 . 6489) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6468) (undo-tree-id2984 . -1) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6469) (undo-tree-id2985 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6470) (undo-tree-id2986 . -1) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6471) (undo-tree-id2987 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6472) (undo-tree-id2988 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6473) (undo-tree-id2989 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6474) (undo-tree-id2990 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6475) (undo-tree-id2991 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6476) (undo-tree-id2992 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6477) (undo-tree-id2993 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6478) (undo-tree-id2994 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6479) (undo-tree-id2995 . -1) (#("m" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6480) (undo-tree-id2996 . -1) 6481 (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6481) (undo-tree-id2997 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6482) (undo-tree-id2998 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6483) (undo-tree-id2999 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6484) (undo-tree-id3000 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6485) (undo-tree-id3001 . -1) 6486 (6412 . 6414) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6412) (undo-tree-id3002 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6413) (undo-tree-id3003 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6414) (undo-tree-id3004 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6415) (undo-tree-id3005 . -1) 6416 (6480 . 6488) (6459 . 6480) (6439 . 6459) (6418 . 6439) (6417 . 6418) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6417) (undo-tree-id3006 . -1) (#("I" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6418) (undo-tree-id3007 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6419) (undo-tree-id3008 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6420) (undo-tree-id3009 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6421) (undo-tree-id3010 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6422) (undo-tree-id3011 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6423) (undo-tree-id3012 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6424) (undo-tree-id3013 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6425) (undo-tree-id3014 . -1) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6426) (undo-tree-id3015 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6427) (undo-tree-id3016 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6428) (undo-tree-id3017 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6429) (undo-tree-id3018 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6430) (undo-tree-id3019 . -1) 6431 (6421 . 6431) (6412 . 6421) (6391 . 6412) (6370 . 6391) (6369 . 6370) (6348 . 6369) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6348) (undo-tree-id3020 . -1) 6349 (6348 . 6349) (#("p" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6348) (undo-tree-id3021 . -1) 6349 (6346 . 6349) (6325 . 6346) (6324 . 6325) 6311) nil (25747 31357 830433 273000) 0 nil])
([nil nil ((6777 . 6778) 6768) nil (25747 31357 830415 29000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7246 . 7247) (nil fontified nil 7237 . 7247) (nil fontified nil 7172 . 7237) (nil fontified nil 7114 . 7172) (nil fontified nil 7074 . 7114) (nil fontified nil 7055 . 7074) (nil fontified nil 6885 . 7055) (nil fontified nil 6794 . 6885) (nil fontified nil 6778 . 6794) (6778 . 7247)) nil (25747 31357 830414 378000) 0 nil])
([nil nil ((6793 . 6797)) nil (25747 31357 830413 256000) 0 nil])
([nil nil ((6811 . 6815)) nil (25747 31357 830413 95000) 0 nil])
([nil nil ((#("takes a parameter or a list of parameters and checks if any of them are on." 0 75 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 6817) (undo-tree-id2983 . -74)) nil (25747 31357 830412 634000) 0 nil])
([nil nil ((#("If they are, it returns the first expression, but if all of them are off, it returns either nothing or the second expression. It behaves similarly to Guile's ~if~ macro.
" 0 158 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 158 159 (invisible t org-emphasis t font-lock-multiline t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 159 161 (org-emphasis t font-lock-multiline t face (org-code) fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 161 162 (invisible t org-emphasis t font-lock-multiline t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 162 170 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 6818) (undo-tree-id2981 . -169) (undo-tree-id2982 . -16) 6834) nil (25747 31357 830412 43000) 0 nil])
([nil nil ((6903 . 6909) (#("r" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6903) (undo-tree-id2961 . -1) (#("e" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6904) (undo-tree-id2962 . -1) (#("t" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6905) (undo-tree-id2963 . -1) (#("u" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6906) (undo-tree-id2964 . -1) (#("r" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6907) (undo-tree-id2965 . -1) (#("n" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6908) (undo-tree-id2966 . -1) (#(" " 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6909) (undo-tree-id2967 . -1) 6910 (6901 . 6910) (6880 . 6901) (6873 . 6880) (6852 . 6873) (#("n" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6852) (undo-tree-id2968 . -1) (#("l" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6853) (undo-tree-id2969 . -1) (#("i" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6854) (undo-tree-id2970 . -1) (#("k" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6855) (undo-tree-id2971 . -1) (#("e" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6856) (undo-tree-id2972 . -1) (#(" " 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6857) (undo-tree-id2973 . -1) (#("i" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6858) (undo-tree-id2974 . -1) (#("t" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6859) (undo-tree-id2975 . -1) (#(" " 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6860) (undo-tree-id2976 . -1) (#("i" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6861) (undo-tree-id2977 . -1) (#("t" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6862) (undo-tree-id2978 . -1) (#(" " 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6863) (undo-tree-id2979 . -1) (#("r" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -6864) (undo-tree-id2980 . -1) 6865 (6860 . 6865) (6859 . 6860) (6838 . 6859) (6817 . 6838)) nil (25747 31357 830409 759000) 0 nil])
([nil nil ((#("  (parameter/if parameter do-something do-something-else)
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 3 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 56 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 56 57 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 57 58 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 6969) (undo-tree-id2959 . -57) (undo-tree-id2960 . -56) 7025) nil (25747 31357 830389 110000) 0 nil])
([nil nil ((#("  (parameter/if parameter do-something)
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 3 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 38 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 38 39 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 39 40 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 6929) (undo-tree-id2957 . -39) (undo-tree-id2958 . -38) 6967) nil (25747 31357 830388 168000) 0 nil])
([nil nil ((6944 . 6948)) nil (25747 31357 830387 16000) 0 nil])
([nil nil ((#("
" 0 1 (face org-block-end-line src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7008)) nil (25747 31357 830386 786000) 0 nil])
([nil nil ((7012 . 7021) (7011 . 7012) (7008 . 7011) (7007 . 7008) 6999) nil (25747 31359 462187 539000) 0 nil])
([nil nil ((7087 . 7112) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7087) (7059 . 7088) (#("scheme's " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7059) (7027 . 7068) (#("parameter/match" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7027) (7021 . 7042)) ((#("match" 0 5 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . 7021) (#("
" 0 1 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 7026) (#("parameter/match" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 4 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 6 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7027) (7027 . 7042) (#("~para" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 5 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7027) (#("meter/match~ is simil" 0 11 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 11 12 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 12 21 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7032) (#("ar to scheme's " 0 6 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 7 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 9 10 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 10 11 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 11 12 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 12 13 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 13 14 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 14 15 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7053) (7059 . 7068) (#("Guile's ~cond~, but a" 0 8 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 8 9 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 9 13 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 13 14 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 14 21 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7059) (#("lso ver " 0 7 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 7 8 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7080) (7087 . 7088) (#("y different." 0 12 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7087) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7099) (#("It takes in " 0 12 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7100)) (25747 31360 149043 897000) 0 nil])
([nil nil ((7545 . 7552) (#("N" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7545) (undo-tree-id3236 . -1) 7546 (7543 . 7546) (7542 . 7543) (7524 . 7542) (7523 . 7524) (7522 . 7523) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7522) (undo-tree-id3237 . -1) (#("w" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7523) (undo-tree-id3238 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7524) (undo-tree-id3239 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7525) (undo-tree-id3240 . -1) (#("c" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7526) (undo-tree-id3241 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7527) (undo-tree-id3242 . -1) 7528 (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7528) (undo-tree-id3243 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7529) (undo-tree-id3244 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7530) (undo-tree-id3245 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7531) (undo-tree-id3246 . -1) (#("m" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7532) (undo-tree-id3247 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7533) (undo-tree-id3248 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7534) (undo-tree-id3249 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7535) (undo-tree-id3250 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7536) (undo-tree-id3251 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7537) (undo-tree-id3252 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7538) (undo-tree-id3253 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7539) (undo-tree-id3254 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7540) (undo-tree-id3255 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7541) (undo-tree-id3256 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7542) (undo-tree-id3257 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7543) (undo-tree-id3258 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7544) (undo-tree-id3259 . -1) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7545) (undo-tree-id3260 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7546) (undo-tree-id3261 . -1) 7547 (7531 . 7547) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7531) (undo-tree-id3262 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7532) (undo-tree-id3263 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7533) (undo-tree-id3264 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7534) (undo-tree-id3265 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7535) (undo-tree-id3266 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7536) (undo-tree-id3267 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7537) (undo-tree-id3268 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7538) (undo-tree-id3269 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7539) (undo-tree-id3270 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7540) (undo-tree-id3271 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7541) (undo-tree-id3272 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7542) (undo-tree-id3273 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7543) (undo-tree-id3274 . -1) 7544 (7543 . 7544) (7522 . 7543) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7522) (undo-tree-id3275 . -1) 7523 (#("(" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -7523) (undo-tree-id3276 . -1) (#(")" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7524) (7522 . 7525) (7501 . 7522) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7501) (undo-tree-id3277 . -1) 7502 (7494 . 7502) (7473 . 7494) (7471 . 7473) (7375 . 7385) (7448 . 7461) (7447 . 7448) (7441 . 7447) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7441) (undo-tree-id3278 . -1) 7442 (7428 . 7442) (7407 . 7428) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7407) (undo-tree-id3279 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7408) (undo-tree-id3280 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7409) (undo-tree-id3281 . -1) (#("m" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7410) (undo-tree-id3282 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7411) (undo-tree-id3283 . -1) (#("k" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7412) (undo-tree-id3284 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7413) (undo-tree-id3285 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7414) (undo-tree-id3286 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7415) (undo-tree-id3287 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7416) (undo-tree-id3288 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7417) (undo-tree-id3289 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7418) (undo-tree-id3290 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7419) (undo-tree-id3291 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7420) (undo-tree-id3292 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7421) (undo-tree-id3293 . -1) 7422 (7410 . 7422) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7410) (undo-tree-id3294 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7411) (undo-tree-id3295 . -1) (#("q" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7412) (undo-tree-id3296 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7413) (undo-tree-id3297 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7414) (undo-tree-id3298 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7415) (undo-tree-id3299 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7416) (undo-tree-id3300 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7417) (undo-tree-id3301 . -1) 7418 (7410 . 7418) (#("m" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7410) (undo-tree-id3302 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7411) (undo-tree-id3303 . -1) (#("k" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7412) (undo-tree-id3304 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7413) (undo-tree-id3305 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7414) (undo-tree-id3306 . -1) 7415 (7403 . 7415) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7403) (undo-tree-id3307 . -1) 7404 (#("y" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7404) (undo-tree-id3308 . -1) (#("~" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7405) (undo-tree-id3309 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7406) (undo-tree-id3310 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7407) (undo-tree-id3311 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7408) (undo-tree-id3312 . -1) 7409 (7398 . 7409) (7377 . 7398) (7373 . 7377) (7372 . 7373) (7367 . 7372) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7367) (undo-tree-id3313 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7368) (undo-tree-id3314 . -1) 7369 (7358 . 7369) (7337 . 7358) (7318 . 7337) (7297 . 7318) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7297) (undo-tree-id3315 . -1) (#("x" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7298) (undo-tree-id3316 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7299) (undo-tree-id3317 . -1) (#("c" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7300) (undo-tree-id3318 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7301) (undo-tree-id3319 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7302) (undo-tree-id3320 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7303) (undo-tree-id3321 . -1) 7304 (7296 . 7304) (7287 . 7296) (7266 . 7287) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7266) (undo-tree-id3322 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7267) (undo-tree-id3323 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7268) (undo-tree-id3324 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7269) (undo-tree-id3325 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7270) (undo-tree-id3326 . -1) 7271 (7255 . 7271) (#("H" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7255) (undo-tree-id3327 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7256) (undo-tree-id3328 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7257) (undo-tree-id3329 . -1) 7258 (7256 . 7258) (7238 . 7256) (7217 . 7238) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7217) (undo-tree-id3330 . -1) 7218 (7214 . 7218) (#("m" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7214) (undo-tree-id3331 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7215) (undo-tree-id3332 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7216) (undo-tree-id3333 . -1) (#("c" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7217) (undo-tree-id3334 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7218) (undo-tree-id3335 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7219) (undo-tree-id3336 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7220) (undo-tree-id3337 . -1) 7221 (7213 . 7221) (7199 . 7213) (7178 . 7199) (#("," 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7178) (undo-tree-id3338 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7179) (undo-tree-id3339 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7180) (undo-tree-id3340 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7181) (undo-tree-id3341 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7182) (undo-tree-id3342 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7183) (undo-tree-id3343 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7184) (undo-tree-id3344 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7185) (undo-tree-id3345 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7186) (undo-tree-id3346 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7187) (undo-tree-id3347 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7188) (undo-tree-id3348 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7189) (undo-tree-id3349 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7190) (undo-tree-id3350 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7191) (undo-tree-id3351 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7192) (undo-tree-id3352 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7193) (undo-tree-id3353 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7194) (undo-tree-id3354 . -1) 7195 (7185 . 7195) (7170 . 7185) (7157 . 7169) (7153 . 7156) (7147 . 7153) (7142 . 7147) (7141 . 7143) (7126 . 7142) (7118 . 7126) (#("p" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7118) (undo-tree-id3355 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7119) (undo-tree-id3356 . -1) 7120 (7118 . 7120) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7118) (undo-tree-id3357 . -1) 7119 (7118 . 7119) (#("p" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7118) (undo-tree-id3358 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7119) (undo-tree-id3359 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7120) (undo-tree-id3360 . -1) 7121 (7112 . 7121)) nil (25747 31854 603875 531000) 0 nil])
([nil nil ((7635 . 7644) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7635) (undo-tree-id3224 . -1) 7636 (7618 . 7636) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7618) (undo-tree-id3225 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7619) (undo-tree-id3226 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7620) (undo-tree-id3227 . -1) (#("h" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7621) (undo-tree-id3228 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7622) (undo-tree-id3229 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7623) (undo-tree-id3230 . -1) (#("g" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7624) (undo-tree-id3231 . -1) 7625 (7613 . 7625) (#("+" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7613) (undo-tree-id3232 . -1) 7614 (7613 . 7614) (7612 . 7614) (7609 . 7612) (7601 . 7608) (7580 . 7601) (#("=" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7580) (undo-tree-id3233 . -1) 7581 (7578 . 7581) (7577 . 7578) (7567 . 7576) (7566 . 7568) (7565 . 7567) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7565) (undo-tree-id3234 . -1) 7566 (7564 . 7566) (7561 . 7564) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7561) (undo-tree-id3235 . -1) 7562 (7546 . 7561) (7545 . 7547) (7542 . 7545) 7532) nil (25747 31854 603825 938000) 0 nil])
([nil nil ((7612 . 7613) 7543) nil (25747 31854 603819 946000) 0 nil])
([nil nil ((7675 . 7676) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -7675) (7675 . 7676) (7672 . 7674) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7672) (undo-tree-id3219 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7673) (undo-tree-id3220 . -1) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7674) (undo-tree-id3221 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7675) (undo-tree-id3222 . -1) 7676 (7664 . 7676) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7664) (undo-tree-id3223 . -1) 7665 (7660 . 7665) (7652 . 7659) (7651 . 7652) (7650 . 7652) (7649 . 7651) (7646 . 7649)) nil (25747 31854 603819 95000) 0 nil])
([nil nil ((7649 . 7650) 7543) nil (25747 31854 603816 29000) 0 nil])
([nil nil ((7804 . 7808) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7804) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) 7805 (7803 . 7805) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7803) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) 7804 (7791 . 7804) (7770 . 7791) (7751 . 7770) (7730 . 7751) (7712 . 7730) (7711 . 7712) (7691 . 7711) (7688 . 7691) (7687 . 7688) 7686) nil (25747 31854 603814 105000) 0 nil])
([nil nil ((7706 . 7715) (#("-" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -7706) (undo-tree-id3136 . -1) (#("c" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -7707) (undo-tree-id3137 . -1) (#("a" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -7708) (undo-tree-id3138 . -1) (#("s" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -7709) (undo-tree-id3139 . -1) (#("e" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -7710) (undo-tree-id3140 . -1) 7711) nil (25747 31854 603770 985000) 0 nil])
([nil nil ((7716 . 7718)) nil (25747 31854 603767 248000) 0 nil])
([nil nil ((7963 . 7983) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7963) (undo-tree-id3039 . -1) 7964 (7953 . 7964) (#("h" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7953) (undo-tree-id3040 . -1) 7954 (7940 . 7954) (7919 . 7940) (#("~" 0 1 (invisible t org-emphasis t font-lock-multiline t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7919) (undo-tree-id3041 . -1) 7920 (7910 . 7920) (7900 . 7910) (7815 . 7900) (#("- 
- ~paramter/match-any~ a variant of ~parameter/match~ where ~all~ is not an option" 0 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 4 (face org-superstar-item composition (1 1 [8211]) fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 5 6 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 6 24 (org-emphasis t font-lock-multiline t face (org-code) fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 24 25 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 25 39 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 39 40 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 40 55 (org-emphasis t font-lock-multiline t face (org-code) fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 55 56 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 56 63 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 63 64 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 64 67 (org-emphasis t font-lock-multiline t face (org-code) fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 67 68 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 68 85 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 7815) (undo-tree-id3042 . -85) (7815 . 7818) 7897 (7892 . 7897) (7871 . 7892) (#("w" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7871) (undo-tree-id3043 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7872) (undo-tree-id3044 . -1) 7873 (7871 . 7873) (7851 . 7871) (#("p" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7851) (undo-tree-id3045 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7852) (undo-tree-id3046 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7853) (undo-tree-id3047 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7854) (undo-tree-id3048 . -1) (#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7855) (undo-tree-id3049 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7856) (undo-tree-id3050 . -1) (#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7857) (undo-tree-id3051 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7858) (undo-tree-id3052 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7859) (undo-tree-id3053 . -1) 7860 (7854 . 7860) (7833 . 7854) (7817 . 7833) (#("p" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7817) (undo-tree-id3054 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7818) (undo-tree-id3055 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7819) (undo-tree-id3056 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7820) (undo-tree-id3057 . -1) 7821 (7817 . 7821) (7716 . 7817) (#("- 
- ~parameter/match-case~ is the same as ~parameter/match~, but it short-circuits once a list works" 0 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 4 (face org-superstar-item composition (1 1 [8211]) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 6 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 26 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 26 27 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 27 43 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 43 44 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 44 59 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 59 60 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 60 101 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7716) (undo-tree-id3058 . 96) (undo-tree-id3059 . -101) (undo-tree-id3060 . -96) (undo-tree-id3061 . -96) (undo-tree-id3062 . -96) (undo-tree-id3063 . -96) (undo-tree-id3064 . -96) (undo-tree-id3065 . -96) (undo-tree-id3066 . -96) (undo-tree-id3067 . -96) (undo-tree-id3068 . -96) (undo-tree-id3069 . -96) (undo-tree-id3070 . -96) (undo-tree-id3071 . -96) (undo-tree-id3072 . -96) (undo-tree-id3073 . -96) (undo-tree-id3074 . -96) (undo-tree-id3075 . -96) (undo-tree-id3076 . -96) (undo-tree-id3077 . -96) (undo-tree-id3078 . -96) (undo-tree-id3079 . -96) (undo-tree-id3080 . -96) (undo-tree-id3081 . -96) (undo-tree-id3082 . -96) (undo-tree-id3083 . -96) (undo-tree-id3084 . -96) (undo-tree-id3085 . -96) (undo-tree-id3086 . -96) (undo-tree-id3087 . -96) (undo-tree-id3088 . -96) (undo-tree-id3089 . -96) (undo-tree-id3090 . -96) (undo-tree-id3091 . -96) (undo-tree-id3092 . -96) (undo-tree-id3093 . -96) (undo-tree-id3094 . -96) (undo-tree-id3095 . -96) (undo-tree-id3096 . -96) (undo-tree-id3097 . -96) (undo-tree-id3098 . -96) (undo-tree-id3099 . -96) (undo-tree-id3100 . -96) (undo-tree-id3101 . -96) (undo-tree-id3102 . -96) (undo-tree-id3103 . -96) (undo-tree-id3104 . -97) (undo-tree-id3105 . -97) (undo-tree-id3106 . -97) (undo-tree-id3107 . -97) (undo-tree-id3108 . -97) (undo-tree-id3109 . -97) (undo-tree-id3110 . -97) (undo-tree-id3111 . -97) (undo-tree-id3112 . -97) (undo-tree-id3113 . -97) (undo-tree-id3114 . -97) (undo-tree-id3115 . -97) (undo-tree-id3116 . -97) (undo-tree-id3117 . -97) (undo-tree-id3118 . -97) (undo-tree-id3119 . -97) (undo-tree-id3120 . -97) (undo-tree-id3121 . -97) (undo-tree-id3122 . -97) (undo-tree-id3123 . -97) (undo-tree-id3124 . -97) (undo-tree-id3125 . -97) (undo-tree-id3126 . -97) (undo-tree-id3127 . -97) (undo-tree-id3128 . -97) (undo-tree-id3129 . -97) (undo-tree-id3130 . -97) (undo-tree-id3131 . -97) (undo-tree-id3132 . -97) (undo-tree-id3133 . -97) (7716 . 7719) (#("
  " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 3 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7814) (undo-tree-id3134 . -3) 7817 (#("-" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7817) (undo-tree-id3135 . -1) 7818 (7817 . 7818) (7814 . 7817) 7717) nil (25747 31854 603761 988000) 0 nil])
([nil nil ((8007 . 8008) (7986 . 8007) (#("p" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -7986) (undo-tree-id3501 . -1) 7987 (7986 . 7987) (7898 . 7986) (#("- 
- ~parameter/match-all~ a variant of ~parameter/match~ where ~all~ is the only option" 0 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 4 (face org-superstar-item composition (1 1 [8211]) fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 5 6 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 6 25 (org-emphasis t font-lock-multiline t face (org-code) fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 25 26 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 26 40 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 40 41 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 41 56 (org-emphasis t font-lock-multiline t face (org-code) fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 56 57 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 57 64 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 64 65 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 65 68 (org-emphasis t font-lock-multiline t face (org-code) fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 68 69 (invisible t org-emphasis t font-lock-multiline t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent))) 69 88 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 7898) (undo-tree-id3502 . -88) (undo-tree-id3503 . -88) (7898 . 7901) (#("
  " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 3 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7983) (undo-tree-id3504 . -3) 7986 (7983 . 7986) (t 25747 31854 609317 176000) 7982) nil (25747 31991 821866 441000) 0 nil])
([nil nil ((7823 . 7824)) nil (25747 31991 821864 247000) 0 nil])
([nil nil ((8040 . 8052) (#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8040) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8041) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) 8042 (8026 . 8042) (8049 . 8055) (8028 . 8049) (#("q" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8028) (undo-tree-id3500 . -1) 8029 (8009 . 8029)) nil (25747 31991 821859 989000) 0 nil])
([nil nil ((8067 . 8080) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8067) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8068) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8069) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8070) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8071) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8072) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8073) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8074) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (#("h" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8075) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) 8076 (#("cases" 0 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 8067) (undo-tree-id4346 . -4) (undo-tree-id4347 . -1) (undo-tree-id4348 . -5) (undo-tree-id4349 . -5) (t 25747 31991 827113 464000)) nil (25747 32000 974762 191000) 0 nil])
([nil nil ((8609 . 8613) (#("]" 0 1 (src-block t face (rainbow-delimiters-unmatched-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8609) (undo-tree-id4385 . -1) 8610 (8609 . 8610) (#("]" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8609) (8604 . 8610) (#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8604) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) 8605 (8603 . 8604) (8596 . 8603) (#("(" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8597) (undo-tree-id4391 . -1) (#(")" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 8598) (8597 . 8598) (8597 . 8598) (#("(" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8597) (8597 . 8598) (8596 . 8597) (8591 . 8596) (8585 . 8591) (8584 . 8585) (8571 . 8584) (8550 . 8571) (8532 . 8550) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8532) (undo-tree-id4392 . -1) 8533 (8518 . 8533) (8499 . 8518) (#("m" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8499) (undo-tree-id4393 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8500) (undo-tree-id4394 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8501) (undo-tree-id4395 . -1) (#("c" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8502) (undo-tree-id4396 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8503) (undo-tree-id4397 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8504) (undo-tree-id4398 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8505) (undo-tree-id4399 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8506) (undo-tree-id4400 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8507) (undo-tree-id4401 . -1) 8508 (8504 . 8508) (8499 . 8504) (#("m" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8499) (undo-tree-id4402 . -1) 8500 (8480 . 8500) (#("#" 0 1 (face font-lock-comment-face font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8480) (undo-tree-id4403 . -1) (#("+" 0 1 (font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8481) (undo-tree-id4404 . -1) (#("B" 0 1 (face org-meta-line font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8482) (undo-tree-id4405 . -1) 8483 (8480 . 8483) (8479 . 8480) (8469 . 8479) (8448 . 8469) (8440 . 8448) (8419 . 8440) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8419) (undo-tree-id4406 . -1) 8420 (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8420) (undo-tree-id4407 . -1) (#("p" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8421) (undo-tree-id4408 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8422) (undo-tree-id4409 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8423) (undo-tree-id4410 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8424) (undo-tree-id4411 . -1) 8425 (8421 . 8425) (8400 . 8421) (8379 . 8400) (8372 . 8379) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8372) (undo-tree-id4412 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8373) (undo-tree-id4413 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8374) (undo-tree-id4414 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8375) (undo-tree-id4415 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8376) (undo-tree-id4416 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8377) (undo-tree-id4417 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8378) (undo-tree-id4418 . -1) 8379 (8360 . 8379) (8339 . 8360) (8318 . 8339) (8297 . 8318) (8279 . 8297) (#("I" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8279) (undo-tree-id4419 . -1) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8280) (undo-tree-id4420 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8281) (undo-tree-id4421 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8282) (undo-tree-id4422 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8283) (undo-tree-id4423 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8284) (undo-tree-id4424 . -1) (#("d" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8285) (undo-tree-id4425 . -1) (#("," 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8286) (undo-tree-id4426 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8287) (undo-tree-id4427 . -1) (#("I" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8288) (undo-tree-id4428 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8289) (undo-tree-id4429 . -1) 8290 (8279 . 8290) (8278 . 8279) (8270 . 8278) (8252 . 8270) (8233 . 8252) (8212 . 8233) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8212) (undo-tree-id4430 . -1) (#("y" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8213) (undo-tree-id4431 . -1) (#("g" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8214) (undo-tree-id4432 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8215) (undo-tree-id4433 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8216) (undo-tree-id4434 . -1) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8217) (undo-tree-id4435 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8218) (undo-tree-id4436 . -1) (#("c" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8219) (undo-tree-id4437 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8220) (undo-tree-id4438 . -1) 8221 (8220 . 8221) (8199 . 8220) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8199) (undo-tree-id4439 . -1) 8200 (8187 . 8200) (8166 . 8187) (8152 . 8166) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8152) (undo-tree-id4440 . -1) 8153 (8143 . 8153) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8143) (undo-tree-id4441 . -1) 8144 (8133 . 8144) (8112 . 8133) (#("`" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8112) (undo-tree-id4442 . -1) (#("~" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8113) (undo-tree-id4443 . -1) 8114 (8113 . 8114) (#("m" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8113) (undo-tree-id4444 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8114) (undo-tree-id4445 . -1) (#("d" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8115) (undo-tree-id4446 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8116) (undo-tree-id4447 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8117) (undo-tree-id4448 . -1) (#("y" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8118) (undo-tree-id4449 . -1) (#("-" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8119) (undo-tree-id4450 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8120) (undo-tree-id4451 . -1) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8121) (undo-tree-id4452 . -1) (#("p" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8122) (undo-tree-id4453 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8123) (undo-tree-id4454 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8124) (undo-tree-id4455 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8125) (undo-tree-id4456 . -1) (#("`" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8126) (undo-tree-id4457 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8127) (undo-tree-id4458 . -1) 8128 (8119 . 8128) (#("0" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8119) (undo-tree-id4459 . -1) 8120 (8109 . 8120) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8109) (undo-tree-id4460 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8110) (undo-tree-id4461 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8111) (undo-tree-id4462 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8112) (undo-tree-id4463 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8113) (undo-tree-id4464 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8114) (undo-tree-id4465 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8115) (undo-tree-id4466 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8116) (undo-tree-id4467 . -1) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8117) (undo-tree-id4468 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8118) (undo-tree-id4469 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8119) (undo-tree-id4470 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8120) (undo-tree-id4471 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8121) (undo-tree-id4472 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8122) (undo-tree-id4473 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8123) (undo-tree-id4474 . -1) 8124 (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8124) (undo-tree-id4475 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8125) (undo-tree-id4476 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8126) (undo-tree-id4477 . -1) 8127 (8108 . 8127) (8107 . 8108) (8105 . 8107) (8084 . 8105) (#("

" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 2 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 8080) (8083 . 8086) (#("  " 0 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 8082) (undo-tree-id4478 . -2) (8082 . 8085) (#("  " 0 2 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 8081) (undo-tree-id4479 . -2) (8083 . 8084) (8080 . 8083) (t 25747 32000 980507 833000) 8079) nil (25747 32386 474983 539000) 0 nil])
([nil nil ((8758 . 8759) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8758) (8758 . 8759) (8739 . 8756) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8739) (undo-tree-id4359 . -1) 8740 (8739 . 8740) (8736 . 8740) (8733 . 8737) (#("p" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8733) (undo-tree-id4360 . -1) 8734 (8733 . 8734) (8730 . 8733) (8729 . 8730) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8729) (8729 . 8730) (8726 . 8728) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8726) (undo-tree-id4361 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8727) (undo-tree-id4362 . -1) (#("g" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8728) (undo-tree-id4363 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8729) (undo-tree-id4364 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8730) (undo-tree-id4365 . -1) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8731) (undo-tree-id4366 . -1) 8732 (8725 . 8732) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8725) (undo-tree-id4367 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8726) (undo-tree-id4368 . -1) (#("b" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8727) (undo-tree-id4369 . -1) 8728 (8727 . 8728) (8714 . 8727) (8712 . 8715) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8712) (undo-tree-id4370 . -1) 8713 (8704 . 8711) (8703 . 8705) (8700 . 8704) (8697 . 8700) (8684 . 8695) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8684) (undo-tree-id4371 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8685) (undo-tree-id4372 . -1) 8686 (8681 . 8686) (8679 . 8682) (8677 . 8678) (8664 . 8677) (8662 . 8665) (8658 . 8661) (8657 . 8659) (8654 . 8658) (8651 . 8654) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8651) (undo-tree-id4373 . -1) 8652 (8648 . 8650) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8648) (undo-tree-id4374 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8649) (undo-tree-id4375 . -1) 8650 (8647 . 8650) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8647) (undo-tree-id4376 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8648) (undo-tree-id4377 . -1) (#("b" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8649) (undo-tree-id4378 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8650) (undo-tree-id4379 . -1) (#("\"" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8651) (undo-tree-id4380 . -1) 8652 (8648 . 8651) (8647 . 8649) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8647) (8635 . 8648) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8635) (undo-tree-id4381 . -1) (#("k" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8636) (undo-tree-id4382 . -1) 8637 (8632 . 8637) (8631 . 8633) (8612 . 8631) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8612) (undo-tree-id4383 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8613) (undo-tree-id4384 . -1) 8614 (8607 . 8614) (8606 . 8608) (8603 . 8606) 8593) nil (25747 32386 474945 969000) 0 nil])
([nil nil ((#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8773) (undo-tree-id4353 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8774) (undo-tree-id4354 . -1) (#("w" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8775) (undo-tree-id4355 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8776) (undo-tree-id4356 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8777) (undo-tree-id4357 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8778) (undo-tree-id4358 . -1) 8779 (8770 . 8779) (8769 . 8770) 8768) nil (25747 32386 474931 632000) 0 nil])
([nil nil ((#("Thi
" 0 3 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 4 (src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 8770) (undo-tree-id4350 . 1) (undo-tree-id4351 . -3) (undo-tree-id4352 . -2) 8772) nil (25747 32386 474926 813000) 0 nil])
([nil nil ((8713 . 8714) (8710 . 8711) (8661 . 8662) (8658 . 8659)) nil (25747 32386 474914 289000) 0 nil])
([nil nil ((9182 . 9185) (9161 . 9182) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9161) (undo-tree-id4480 . -1) 9162 (9157 . 9162) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9157) (undo-tree-id4481 . -1) (#("b" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9158) (undo-tree-id4482 . -1) 9159 (9157 . 9159) (9141 . 9157) (9120 . 9141) (9099 . 9120) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9099) (undo-tree-id4483 . -1) 9100 (9089 . 9100) (9072 . 9075) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9072) (undo-tree-id4484 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9073) (undo-tree-id4485 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9074) (undo-tree-id4486 . -1) 9075 (9068 . 9075) (9041 . 9042) (9039 . 9041) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9039) (undo-tree-id4487 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9040) (undo-tree-id4488 . -1) 9041 (9015 . 9035) (9056 . 9061) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9056) (undo-tree-id4489 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9057) (undo-tree-id4490 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9058) (undo-tree-id4491 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9059) (undo-tree-id4492 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9060) (undo-tree-id4493 . -1) 9061 (9053 . 9061) (9047 . 9053) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9047) (undo-tree-id4494 . -1) 9048 (9047 . 9048) (9027 . 9032) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9027) (undo-tree-id4495 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9028) (undo-tree-id4496 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9029) (undo-tree-id4497 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9030) (undo-tree-id4498 . -1) 9031 (9040 . 9046) (9019 . 9040) (9013 . 9019) (9012 . 9013) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9012) (undo-tree-id4499 . -1) (#("T" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9013) (undo-tree-id4500 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9014) (undo-tree-id4501 . -1) 9015 (8998 . 9015) (8977 . 8998) (8964 . 8977) (8943 . 8964) (#("," 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8943) (undo-tree-id4502 . -1) 8944 (8938 . 8944) (8919 . 8938) (8898 . 8919) (#(";" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8898) (undo-tree-id4503 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8899) (undo-tree-id4504 . -1) 8900 (8894 . 8900) (8873 . 8894) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8873) (undo-tree-id4505 . -1) 8874 (8865 . 8874) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8865) (undo-tree-id4506 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8866) (undo-tree-id4507 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8867) (undo-tree-id4508 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8868) (undo-tree-id4509 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8869) (undo-tree-id4510 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8870) (undo-tree-id4511 . -1) (#("," 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8871) (undo-tree-id4512 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8872) (undo-tree-id4513 . -1) (#("I" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8873) (undo-tree-id4514 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8874) (undo-tree-id4515 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8875) (undo-tree-id4516 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8876) (undo-tree-id4517 . -1) (#("v" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8877) (undo-tree-id4518 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8878) (undo-tree-id4519 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8879) (undo-tree-id4520 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8880) (undo-tree-id4521 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8881) (undo-tree-id4522 . -1) 8882 (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8882) (undo-tree-id4523 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8883) (undo-tree-id4524 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8884) (undo-tree-id4525 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8885) (undo-tree-id4526 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8886) (undo-tree-id4527 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8887) (undo-tree-id4528 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8888) (undo-tree-id4529 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8889) (undo-tree-id4530 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8890) (undo-tree-id4531 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8891) (undo-tree-id4532 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8892) (undo-tree-id4533 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8893) (undo-tree-id4534 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8894) (undo-tree-id4535 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8895) (undo-tree-id4536 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8896) (undo-tree-id4537 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8897) (undo-tree-id4538 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8898) (undo-tree-id4539 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8899) (undo-tree-id4540 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8900) (undo-tree-id4541 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8901) (undo-tree-id4542 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -8902) (undo-tree-id4543 . -1) 8903 (8889 . 8903) (8883 . 8889) (8862 . 8883) (8861 . 8862) (8841 . 8861) (8820 . 8841) (8815 . 8820) (8794 . 8815) (8793 . 8794) (8776 . 8793) (#("** " 0 1 (composition (5 1 [32]) face org-superstar-leading wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (composition (6 1 [8594]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 8774) (8777 . 8779) (8774 . 8777) (8774 . 8775) 8782 (t 25747 32386 480984 641000)) nil (25747 32508 771760 457000) 0 nil])
([nil nil ((#("https://git.savannah.gnu.org/git/hello.git
" 0 41 (font-lock-multiline t htmlize-link (:uri "https://git.savannah.gnu.org/git/hello.git") help-echo "LINK: https://git.savannah.gnu.org/git/hello.git" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 41 42 (font-lock-multiline t htmlize-link (:uri "https://git.savannah.gnu.org/git/hello.git") help-echo "LINK: https://git.savannah.gnu.org/git/hello.git" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 42 43 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 9492) (undo-tree-id4779 . -42) (undo-tree-id4780 . -43) (t 25747 32508 780521 221000)) nil (25747 32987 243897 317000) 0 nil])
([nil nil ((#("https://git.savannah.gnu.org/git/gnulib.git
" 0 42 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://git.savannah.gnu.org/git/gnulib.git") help-echo "LINK: https://git.savannah.gnu.org/git/gnulib.git" wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 42 43 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://git.savannah.gnu.org/git/gnulib.git") help-echo "LINK: https://git.savannah.gnu.org/git/gnulib.git" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 43 44 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 9492) (undo-tree-id4766 . -43) (undo-tree-id4767 . -44) (undo-tree-id4768 . -44) (undo-tree-id4769 . -43) (undo-tree-id4770 . -44) (undo-tree-id4771 . -44) (undo-tree-id4772 . -44) (undo-tree-id4773 . -44) (undo-tree-id4774 . -44) (undo-tree-id4775 . -44) (undo-tree-id4776 . -44) (undo-tree-id4777 . -44) (undo-tree-id4778 . -44)) nil (25747 32987 243896 24000) 0 nil])
([nil nil ((#("Next, I will be working on a package transformation that will take an alist containing parameters and their values and apply it to a given parameterized packages.
" 0 163 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 9305) (undo-tree-id4585 . -162) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -163) (undo-tree-id4589 . -163) (undo-tree-id4590 . -163) (undo-tree-id4591 . -163) (undo-tree-id4592 . -163) (undo-tree-id4593 . -163) (undo-tree-id4594 . -163) (undo-tree-id4595 . -163) (undo-tree-id4596 . -163) (undo-tree-id4597 . -163) (undo-tree-id4598 . -163) (undo-tree-id4599 . -163) (undo-tree-id4600 . -163) (undo-tree-id4601 . -163) (undo-tree-id4602 . -163) (undo-tree-id4603 . -163) (undo-tree-id4604 . -163) (undo-tree-id4605 . -163) (undo-tree-id4606 . -163) (undo-tree-id4607 . -163) (undo-tree-id4608 . -163) (undo-tree-id4609 . -163) (undo-tree-id4610 . -163) (undo-tree-id4611 . -163) (undo-tree-id4612 . -163) (undo-tree-id4613 . -163) (undo-tree-id4614 . -163) (undo-tree-id4615 . -163) (undo-tree-id4616 . -163) (undo-tree-id4617 . -2) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -163) 9306) nil (25747 32987 243888 841000) 0 nil])
([nil nil ((9463 . 9470) (9442 . 9463) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9442) (undo-tree-id4544 . -1) 9443 (9442 . 9443) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9442) (undo-tree-id4545 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9443) (undo-tree-id4546 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9444) (undo-tree-id4547 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9445) (undo-tree-id4548 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9446) (undo-tree-id4549 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9447) (undo-tree-id4550 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9448) (undo-tree-id4551 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9449) (undo-tree-id4552 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9450) (undo-tree-id4553 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9451) (undo-tree-id4554 . -1) 9452 (9447 . 9452) (9435 . 9447) (9414 . 9435) (9393 . 9414) (9383 . 9393) (9306 . 9309) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9306) (undo-tree-id4555 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9307) (undo-tree-id4556 . -1) 9308 (9376 . 9382) (9355 . 9376) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9355) (undo-tree-id4557 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9356) (undo-tree-id4558 . -1) 9357 (9353 . 9357) (9345 . 9353) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9345) (undo-tree-id4559 . -1) 9346 (9337 . 9346) (#("p" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9337) (undo-tree-id4560 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9338) (undo-tree-id4561 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9339) (undo-tree-id4562 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9340) (undo-tree-id4563 . -1) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9341) (undo-tree-id4564 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9342) (undo-tree-id4565 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9343) (undo-tree-id4566 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9344) (undo-tree-id4567 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9345) (undo-tree-id4568 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9346) (undo-tree-id4569 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9347) (undo-tree-id4570 . -1) 9348 (9337 . 9348) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9337) (undo-tree-id4571 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9338) (undo-tree-id4572 . -1) (#("g" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9339) (undo-tree-id4573 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9340) (undo-tree-id4574 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9341) (undo-tree-id4575 . -1) 9342 (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9342) (undo-tree-id4576 . -1) 9343 (9332 . 9343) (9311 . 9332) (#(";" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9311) (undo-tree-id4577 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9312) (undo-tree-id4578 . -1) 9313 (9311 . 9313) (#(";" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9311) (undo-tree-id4579 . -1) 9312 (9310 . 9312) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9310) (undo-tree-id4580 . -1) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9311) (undo-tree-id4581 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9312) (undo-tree-id4582 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9313) (undo-tree-id4583 . -1) 9314 (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9314) (undo-tree-id4584 . -1) 9315 (9305 . 9315) (9304 . 9305) 9197) nil (25747 32987 243819 770000) 0 nil])
([nil nil ((9505 . 9509) (#("," 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9505) (undo-tree-id4997 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9506) (undo-tree-id4998 . -1) 9507 (9492 . 9507) (9471 . 9492) (9470 . 9471) (t 25747 32987 248972 74000)) nil (25747 33084 85225 941000) 0 nil])
([nil nil ((#("After the parsing phase is perfected, 
" 0 38 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 38 39 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 9471) (undo-tree-id4994 . 1) (undo-tree-id4995 . -38) (undo-tree-id4996 . -37) 9508) nil (25747 33084 85224 468000) 0 nil])
([nil nil ((90 . 93)) nil (25747 33084 85223 235000) 0 nil])
([nil nil ((114 . 115) (#("]" 0 1 (wrap-prefix "" line-prefix "" fontified nil)) . -114) (114 . 115) (#("[" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -114) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) 115 (115 . 117) (114 . 116) (#("]" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -92) (undo-tree-id4988 . -1) (#("]" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -93) (undo-tree-id4989 . -1) 94 (91 . 93) (90 . 92) (#("(" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -90) (undo-tree-id4990 . -1) (#("(" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -91) (undo-tree-id4991 . -1) (#(")" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -92) (undo-tree-id4992 . 1) (undo-tree-id4993 . -1) 93) nil (25747 33084 85750 539000) 0 nil])
([nil nil ((91 . 93) (#("]" 0 1 (face org-link font-lock-multiline t htmlize-link (:uri "Parameterized Packages") help-echo "LINK: Parameterized Packages" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix "" line-prefix "" fontified t)) . -115) (undo-tree-id5054 . -1) 116 (115 . 116) (#("]" 0 1 (htmlize-link (:uri "Parameterized Packages") help-echo "LINK: Parameterized Packages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix "" line-prefix "" fontified nil)) . -115) (115 . 116) (#("[" 0 1 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "Parameterized Packages") help-echo "LINK: Parameterized Packages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix "" line-prefix "" fontified t)) . -115) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (#("]" 0 1 (htmlize-link (:uri "Parameterized Packages") help-echo "LINK: Parameterized Packages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix "" line-prefix "" fontified t)) . -116) (undo-tree-id5059 . 1) (undo-tree-id5060 . -1) (#("]" 0 1 (htmlize-link (:uri "Parameterized Packages") help-echo "LINK: Parameterized Packages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix "" line-prefix "" fontified t)) . -117) (undo-tree-id5061 . -1) 118) nil (25747 33526 695811 605000) 0 nil] [nil nil ((nil rear-nonsticky nil 182 . 183) (nil fontified nil 116 . 183) (116 . 183) 115) ((#("https://guix.gnu.org/blog/2023/parameterized-packages-for-gnu-guix/" 0 66 (face org-link font-lock-multiline t htmlize-link (:uri "Parameterized Packages") help-echo "LINK: Parameterized Packages" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link fontified nil wrap-prefix "" line-prefix "") 66 67 (face org-link font-lock-multiline t htmlize-link (:uri "Parameterized Packages") help-echo "LINK: Parameterized Packages" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-fold--spec-org-link-description-global org-link-description isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-link-global org-link rear-nonsticky nil fontified nil wrap-prefix "" line-prefix "")) . 116) (undo-tree-id4999 . -66) (undo-tree-id5000 . -66) (undo-tree-id5001 . -66) (undo-tree-id5002 . -66) (nil rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) 182 . 183)) (25747 33084 85082 638000) 0 nil])
([nil nil ((nil rear-nonsticky nil 158 . 159) (nil fontified nil 92 . 159) (92 . 159) 91) nil (25747 33526 695792 479000) 0 nil])
nil
([nil nil ((184 . 185) (#("]" 0 1 (htmlize-link (:uri "Parameterized Packages") help-echo "LINK: Parameterized Packages" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix "" line-prefix "" fontified nil)) . -184) (184 . 185)) nil (25747 33526 695792 118000) 0 nil])
([nil nil ((215 . 227) (#("h" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -215) (undo-tree-id5048 . -1) (#("e" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -216) (undo-tree-id5049 . -1) (#("r" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -217) (undo-tree-id5050 . -1) (#("e" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -218) (undo-tree-id5051 . -1) (#("'" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -219) (undo-tree-id5052 . -1) (#("s" 0 1 (wrap-prefix "" line-prefix "" fontified t)) . -220) (undo-tree-id5053 . -1) 221) nil (25747 33526 695791 96000) 0 nil])
([nil nil ((305 . 319) (#("U" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -305) (undo-tree-id5046 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -306) (undo-tree-id5047 . -1) 307 (305 . 307) (304 . 305) 303) nil (25747 33526 695787 579000) 0 nil])
([nil nil ((328 . 334) (#("s" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -328) (undo-tree-id5045 . -1) 329) nil (25747 33526 695786 417000) 0 nil])
([nil nil ((#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1231) (undo-tree-id5044 . -1) 1232) nil (25747 33526 695785 676000) 0 nil])
([nil nil ((1402 . 1403)) nil (25747 33526 695785 185000) 0 nil])
([nil nil ((548 . 557) (527 . 548) (#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -527) (undo-tree-id5043 . -1) 528) nil (25747 33526 695784 814000) 0 nil])
([nil nil ((#("After writing draft parsers that handle this, " 0 46 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1221) (undo-tree-id5042 . -45)) nil (25747 33526 695784 133000) 0 nil])
([nil nil ((1222 . 1227)) nil (25747 33526 695783 442000) 0 nil])
([nil nil ((1246 . 1248) (1245 . 1247)) nil (25747 33526 695783 41000) 0 nil])
([nil nil ((#("]" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1248) (undo-tree-id5041 . -1) 1249) nil (25747 33526 695782 740000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1370 . 1371) (nil fontified nil 1247 . 1371) (1247 . 1371) 1246) nil (25747 33526 695782 39000) 0 nil])
([nil nil ((1386 . 1387) (#("]" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -1386) (1385 . 1387) (#("]" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -1385) (1385 . 1386) (#("]" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1373) (undo-tree-id5040 . -1) 1374 (1372 . 1374)) nil (25747 33526 695781 388000) 0 nil])
([nil nil ((#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1447) (undo-tree-id5039 . -1) 1448) nil (25747 33526 695780 236000) 0 nil])
([nil nil ((#("for a few fields and macros like one that makes it convenient to write a parameter specification record as a property and one that makes it convenient to map build systems to respective transforms for parameters." 0 212 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1473) (undo-tree-id5038 . -211)) nil (25747 33526 695779 404000) 0 nil])
([nil nil ((1583 . 1587) (1582 . 1583) (#("y" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1582) (undo-tree-id5016 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1583) (undo-tree-id5017 . -1) (#("-" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1584) (undo-tree-id5018 . -1) 1585 (1573 . 1585) (1552 . 1573) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1552) (undo-tree-id5019 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1553) (undo-tree-id5020 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1554) (undo-tree-id5021 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1555) (undo-tree-id5022 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1556) (undo-tree-id5023 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1557) (undo-tree-id5024 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1558) (undo-tree-id5025 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1559) (undo-tree-id5026 . -1) 1560 (1553 . 1560) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1553) (undo-tree-id5027 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1554) (undo-tree-id5028 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1555) (undo-tree-id5029 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1556) (undo-tree-id5030 . -1) 1557 (1555 . 1557) (1536 . 1555) (1515 . 1536) (#("b" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1515) (undo-tree-id5031 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1516) (undo-tree-id5032 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1517) (undo-tree-id5033 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1518) (undo-tree-id5034 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1519) (undo-tree-id5035 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1520) (undo-tree-id5036 . -1) 1521 (1518 . 1521) (1517 . 1518) (1496 . 1517) (1475 . 1496) (#("m" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1475) (undo-tree-id5037 . -1) 1476 (1473 . 1476)) nil (25747 33526 695777 100000) 0 nil])
([nil nil ((1894 . 1903) (#("present" 0 7 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1894) (undo-tree-id5015 . -6)) nil (25747 33526 695767 902000) 0 nil])
([nil nil ((1904 . 1905) (1901 . 1902)) nil (25747 33526 695767 1000) 0 nil])
([nil nil ((#("/" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1905) (undo-tree-id5005 . -1) (#("/" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1906) (undo-tree-id5006 . -1) 1907 (1895 . 1905) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1895) (undo-tree-id5007 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1896) (undo-tree-id5008 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1897) (undo-tree-id5009 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1898) (undo-tree-id5010 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1899) (undo-tree-id5011 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1900) (undo-tree-id5012 . -1) (#("o" 0 1 (org-emphasis t font-lock-multiline t face (italic) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1902) (undo-tree-id5013 . -1) (#("n" 0 1 (org-emphasis t font-lock-multiline t face (italic) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1903) (undo-tree-id5014 . -1) 1904) nil (25747 33526 695766 79000) 0 nil])
([nil nil ((#("[" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -2302) (undo-tree-id5003 . -1) (#("]" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2303) (#("[" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -2303) (undo-tree-id5004 . -1) (#("]" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2304) (2303 . 2305) (2302 . 2304)) nil (25747 33526 695759 557000) 0 nil])
([nil nil ((#("       " 0 7 (wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 2591) (#("  " 0 2 (wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 2628) (#("  " 0 2 (wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 2646) (#("  " 0 2 (wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 2687) (#(" " 0 1 (wrap-prefix #("           " 0 2 (face org-indent) 2 11 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 2701) (#("  " 0 2 (wrap-prefix #("           " 0 2 (face org-indent) 2 11 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 2708) (2738 . 2740) (2759 . 2762) (2770 . 2774) (2789 . 2792) (2802 . 2805) (2815 . 2819) (2828 . 2830) (2840 . 2845) (2902 . 2906) (2935 . 2945) 2550) nil (25747 33526 695745 370000) 0 nil])
([nil nil ((4444 . 4446) (#("[" 0 1 (htmlize-link (:uri "defining package variants") help-echo "LINK: defining package variants" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4471) (undo-tree-id5062 . -1) (#("]" 0 1 (htmlize-link (:uri "defining package variants") help-echo "LINK: defining package variants" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4472) (undo-tree-id5063 . -1) (#("]" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4473) (undo-tree-id5064 . -1) 4474 (t 25747 33526 702251 664000)) nil (25747 33563 98281 46000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4515 . 4516) (nil fontified nil 4445 . 4516) (4445 . 4516) 4444) nil (25747 33563 98269 724000) 0 nil])
([nil nil ((4544 . 4545) (#("]" 0 1 (htmlize-link (:uri "defining package variants") help-echo "LINK: defining package variants" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -4544) (4544 . 4545)) nil (25747 33563 98264 144000) 0 nil])
([nil nil ((3387 . 3388) (3372 . 3373) (t 25747 33563 105990 883000)) nil (25747 33611 873742 189000) 0 nil])
([nil nil ((3598 . 3605) (#("*" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3598) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (#("*" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3599) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) 3600 (#("l" 0 1 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3599) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (#("o" 0 1 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3600) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (#("c" 0 1 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3601) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (#("a" 0 1 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3602) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (#("l" 0 1 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3603) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) 3604 (t 25747 33611 878036 456000)) nil (25747 33625 315676 199000) 0 nil])
([nil nil ((3932 . 3948) (3925 . 3932) (3904 . 3925) (3883 . 3904) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3883) (undo-tree-id6228 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3884) (undo-tree-id6229 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3885) (undo-tree-id6230 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3886) (undo-tree-id6231 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3887) (undo-tree-id6232 . -1) 3888 (3869 . 3888) (3848 . 3869) (3827 . 3848) (3814 . 3827) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3814) (undo-tree-id6233 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3815) (undo-tree-id6234 . -1) 3816 (3808 . 3816) (3787 . 3808) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3787) (undo-tree-id6235 . -1) 3788 (3787 . 3788) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3787) (undo-tree-id6236 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3788) (undo-tree-id6237 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3789) (undo-tree-id6238 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3790) (undo-tree-id6239 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3791) (undo-tree-id6240 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3792) (undo-tree-id6241 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3793) (undo-tree-id6242 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3794) (undo-tree-id6243 . -1) 3795 (3791 . 3795) (3787 . 3791) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3787) (undo-tree-id6244 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3788) (undo-tree-id6245 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3789) (undo-tree-id6246 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3790) (undo-tree-id6247 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3791) (undo-tree-id6248 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3792) (undo-tree-id6249 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3793) (undo-tree-id6250 . -1) 3794 (3787 . 3794) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3787) (undo-tree-id6251 . -1) 3788 (3769 . 3788) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3769) (undo-tree-id6252 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3770) (undo-tree-id6253 . -1) (#("f" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3771) (undo-tree-id6254 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3772) (undo-tree-id6255 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3773) (undo-tree-id6256 . -1) 3774 (3772 . 3774) (3761 . 3772) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3761) (undo-tree-id6257 . -1) 3762 (3747 . 3762) (3726 . 3747) (#("j" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3726) (undo-tree-id6258 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3727) (undo-tree-id6259 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3728) (undo-tree-id6260 . -1) 3729 (3725 . 3729) (3724 . 3725) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3724) (undo-tree-id6261 . -1) 3725 (3724 . 3725) (t 25747 33625 322047 501000)) nil (25747 33771 274825 287000) 0 nil])
([nil nil ((4293 . 4303) (t 25747 33771 281610 833000)) nil (25747 33827 742040 357000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4558) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4559) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4560) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4561) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4562) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4563) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4564) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (#("j" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4565) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) 4566 (4560 . 4566) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4560) (undo-tree-id7223 . -1) 4561 (4559 . 4562) (t 25747 33827 750205 841000)) nil (25747 33846 286505 903000) 0 nil])
([nil nil ((#("this is particularly useful for /local/ definitions as their transforms obviously apply to their package" 0 32 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 32 33 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 33 38 (org-emphasis t font-lock-multiline t face (italic) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 38 39 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 39 104 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 4452) (undo-tree-id7224 . -103) (undo-tree-id7225 . -7) 4459 (t 25747 33846 294121 795000)) nil (25747 33883 24941 378000) 0 nil])
([nil nil ((4515 . 4520)) ((#(" ~_~ " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 3 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 3 4 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 4 5 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 4515)) (25747 33887 448933 231000) 0 nil])
([nil nil ((4520 . 4521)) nil (25747 34019 261667 451000) 0 nil] [nil nil ((nil rear-nonsticky nil 4622 . 4623) (nil fontified nil 4519 . 4623) (4519 . 4623) 4518) ((#("this is particularly useful for /local/ definitions as their transforms obviously apply to their package" 0 32 (fontified nil wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 32 33 (invisible t org-emphasis t font-lock-multiline t fontified nil wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 33 38 (org-emphasis t font-lock-multiline t face (italic) fontified nil wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 38 39 (invisible t org-emphasis t font-lock-multiline t fontified nil wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 39 103 (fontified nil wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 103 104 (rear-nonsticky nil fontified nil wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 4519) (undo-tree-id7226 . -103) (undo-tree-id7227 . -103) (undo-tree-id7228 . -103) (undo-tree-id7229 . -103) (nil rear-nonsticky t 4622 . 4623)) (25747 33887 448479 688000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4624 . 4625) (nil fontified nil 4521 . 4625) (4521 . 4625) 4520) nil (25747 34019 261666 870000) 0 nil])
nil
([nil nil ((4518 . 4519) (#("~" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4518) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4519) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4520) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (#("t" 0 1 (fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -4521) (undo-tree-id7261 . -1) (#("h" 0 1 (fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -4522) (undo-tree-id7262 . -1) (#("i" 0 1 (fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -4523) (undo-tree-id7263 . -1) (#("s" 0 1 (fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -4524) (undo-tree-id7264 . -1) 4525) nil (25747 34019 261665 467000) 0 nil])
([nil nil ((4515 . 4516) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4515) (undo-tree-id7249 . -1) 4516) nil (25747 34019 261657 181000) 0 nil])
([nil nil ((4515 . 4516) (4515 . 4521) (#("T" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4515) (undo-tree-id7239 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4516) (undo-tree-id7240 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4517) (undo-tree-id7241 . -1) 4518 (#("s" 0 1 (fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -4523) (undo-tree-id7242 . -1) (#("y" 0 1 (fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -4524) (undo-tree-id7243 . -1) (#("m" 0 1 (fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -4525) (undo-tree-id7244 . -1) (#("b" 0 1 (fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -4526) (undo-tree-id7245 . -1) (#("o" 0 1 (fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -4527) (undo-tree-id7246 . -1) (#("l" 0 1 (fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -4528) (undo-tree-id7247 . -1) (#(" " 0 1 (fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . -4529) (undo-tree-id7248 . -1) 4530 (4523 . 4530) (4515 . 4518)) nil (25747 34019 261655 528000) 0 nil])
([nil nil ((4626 . 4627)) nil (25747 34019 261649 697000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4450) (undo-tree-id7236 . -1) (#("(" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4451) (undo-tree-id7237 . -1) (#(")" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4452) (undo-tree-id7238 . -1) 4453) nil (25747 34019 261648 786000) 0 nil])
([nil nil ((4774 . 4787) (4753 . 4774) (4744 . 4753) (4723 . 4744) (4702 . 4723) (4695 . 4702) (4674 . 4695) (4653 . 4674) (4637 . 4653) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4637) (undo-tree-id7234 . -1) 4638 (4623 . 4638) (#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4623) (undo-tree-id7235 . -1) 4624) nil (25747 34019 261645 710000) 0 nil])
([nil nil ((#(", however ideally one should use the ~use-transforms~ field to define the transforms for local parameters as it saves the effort of using this macro" 0 37 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 37 38 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 38 52 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 52 53 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 53 148 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 4638) (undo-tree-id7230 . -147) (undo-tree-id7231 . -148) (undo-tree-id7232 . -2) (undo-tree-id7233 . -148)) nil (25747 34019 261640 650000) 0 nil])
([nil nil ((5402 . 5403) (5387 . 5388) (5383 . 5401) (#("this" 0 4 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 5383) (undo-tree-id7265 . -3) (undo-tree-id7266 . -3) (undo-tree-id7267 . -3) (undo-tree-id7268 . -3) (undo-tree-id7269 . -3) (undo-tree-id7270 . -3) (undo-tree-id7271 . -3) (undo-tree-id7272 . -3) (undo-tree-id7273 . -3) (undo-tree-id7274 . -3) (undo-tree-id7275 . -3) (undo-tree-id7276 . -3) (undo-tree-id7277 . -3) (undo-tree-id7278 . -3) (undo-tree-id7279 . -3) (undo-tree-id7280 . -3) (undo-tree-id7281 . -3) (undo-tree-id7282 . -3) (undo-tree-id7283 . -3) (undo-tree-id7284 . -3) (undo-tree-id7285 . -3) (undo-tree-id7286 . -3) (undo-tree-id7287 . -3) (undo-tree-id7288 . -3) (undo-tree-id7289 . -3) (undo-tree-id7290 . -3) (undo-tree-id7291 . -3) (undo-tree-id7292 . -3) (undo-tree-id7293 . -3) (undo-tree-id7294 . -3) (undo-tree-id7295 . -3) (undo-tree-id7296 . -3) (undo-tree-id7297 . -3) (undo-tree-id7298 . -3) (undo-tree-id7299 . -3) (undo-tree-id7300 . -3) (undo-tree-id7301 . -3) (undo-tree-id7302 . -3) (undo-tree-id7303 . -3) (undo-tree-id7304 . -3) (undo-tree-id7305 . -3) (undo-tree-id7306 . -3) (undo-tree-id7307 . -3) (undo-tree-id7308 . -3) (undo-tree-id7309 . -3) (undo-tree-id7310 . -3) (undo-tree-id7311 . -3) (undo-tree-id7312 . -3) (undo-tree-id7313 . -3) (undo-tree-id7314 . -3) (undo-tree-id7315 . -3) (undo-tree-id7316 . -3) (undo-tree-id7317 . -3) (undo-tree-id7318 . -3) (undo-tree-id7319 . -3) (undo-tree-id7320 . -3) (undo-tree-id7321 . -3) (undo-tree-id7322 . -3) (undo-tree-id7323 . -3) (undo-tree-id7324 . -3) (undo-tree-id7325 . -3) (undo-tree-id7326 . -3) (undo-tree-id7327 . -3) (undo-tree-id7328 . -3) (undo-tree-id7329 . -3) (undo-tree-id7330 . -3) (undo-tree-id7331 . -3) (undo-tree-id7332 . -3) (undo-tree-id7333 . -3) (undo-tree-id7334 . -3) (undo-tree-id7335 . -3) (undo-tree-id7336 . -3) (undo-tree-id7337 . -3) (undo-tree-id7338 . -3) (undo-tree-id7339 . -3) (undo-tree-id7340 . -3) (undo-tree-id7341 . -4) (undo-tree-id7342 . -4) (undo-tree-id7343 . -4) (undo-tree-id7344 . -4) (undo-tree-id7345 . -4) (undo-tree-id7346 . -4) (undo-tree-id7347 . -4) (undo-tree-id7348 . -4) (undo-tree-id7349 . -4) (undo-tree-id7350 . -4) (undo-tree-id7351 . -4) (undo-tree-id7352 . -4) (undo-tree-id7353 . -4) (undo-tree-id7354 . -4) (undo-tree-id7355 . -4) (undo-tree-id7356 . -4) (undo-tree-id7357 . -4) (undo-tree-id7358 . -4) (undo-tree-id7359 . -4) (undo-tree-id7360 . -4) (undo-tree-id7361 . -4) (undo-tree-id7362 . -4) (undo-tree-id7363 . -4) (undo-tree-id7364 . -4) (undo-tree-id7365 . -4) (undo-tree-id7366 . -4) (undo-tree-id7367 . -4) (undo-tree-id7368 . -4) (undo-tree-id7369 . -4) (undo-tree-id7370 . -4) (undo-tree-id7371 . -4) (undo-tree-id7372 . -4) (undo-tree-id7373 . -4) (undo-tree-id7374 . -4) (undo-tree-id7375 . -4) (undo-tree-id7376 . -4) (undo-tree-id7377 . -4) (undo-tree-id7378 . -4) (undo-tree-id7379 . -4) (undo-tree-id7380 . -4) (undo-tree-id7381 . -4) (undo-tree-id7382 . -4) (undo-tree-id7383 . -4) (undo-tree-id7384 . -4) (undo-tree-id7385 . -4) (undo-tree-id7386 . -4) (undo-tree-id7387 . -4) (undo-tree-id7388 . -4) (undo-tree-id7389 . -4) (undo-tree-id7390 . -4) (undo-tree-id7391 . -4) (undo-tree-id7392 . -4) (undo-tree-id7393 . -4) (undo-tree-id7394 . -4) (undo-tree-id7395 . -4) (undo-tree-id7396 . -4) (undo-tree-id7397 . -4) (undo-tree-id7398 . -4) (undo-tree-id7399 . -4) (undo-tree-id7400 . -4) (undo-tree-id7401 . -4) (undo-tree-id7402 . -4) (undo-tree-id7403 . -4) (undo-tree-id7404 . -4) (undo-tree-id7405 . -4) (undo-tree-id7406 . -4) (undo-tree-id7407 . -4) (undo-tree-id7408 . -4) (undo-tree-id7409 . -4) (undo-tree-id7410 . -4) (undo-tree-id7411 . -4) (undo-tree-id7412 . -4) (undo-tree-id7413 . -4) (undo-tree-id7414 . -4) (undo-tree-id7415 . -4) (undo-tree-id7416 . -4) (undo-tree-id7417 . -4) (undo-tree-id7418 . -4) (undo-tree-id7419 . -4) (undo-tree-id7420 . -4) (undo-tree-id7421 . -4) (undo-tree-id7422 . -4) (undo-tree-id7423 . -4) (undo-tree-id7424 . -4) (undo-tree-id7425 . -4) (undo-tree-id7426 . -4) (undo-tree-id7427 . -4) (undo-tree-id7428 . -4) (undo-tree-id7429 . -4) (undo-tree-id7430 . -4) (undo-tree-id7431 . -4) (t 25747 34019 268527 507000)) nil (25747 34053 182097 98000) 0 nil])
([nil nil ((5567 . 5568) (5546 . 5567) (#("w" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5546) (undo-tree-id11500 . -1) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5547) (undo-tree-id11501 . -1) (#("l" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5548) (undo-tree-id11502 . -1) (#("l" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5549) (undo-tree-id11503 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5550) (undo-tree-id11504 . -1) (#("b" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5551) (undo-tree-id11505 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5552) (undo-tree-id11506 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5553) (undo-tree-id11507 . -1) (#("u" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5554) (undo-tree-id11508 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5555) (undo-tree-id11509 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5556) (undo-tree-id11510 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5557) (undo-tree-id11511 . -1) 5558 (t 25747 34053 189203 188000)) nil (25747 34107 622164 753000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5883) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5884) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5885) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) (undo-tree-id8390 . -1) (undo-tree-id8391 . -1) (undo-tree-id8392 . -1) (undo-tree-id8393 . -1) (undo-tree-id8394 . -1) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (undo-tree-id8461 . -1) (undo-tree-id8462 . -1) (undo-tree-id8463 . -1) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) (undo-tree-id8469 . -1) (undo-tree-id8470 . -1) (undo-tree-id8471 . -1) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) (undo-tree-id8474 . -1) (undo-tree-id8475 . -1) (undo-tree-id8476 . -1) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) (undo-tree-id8523 . -1) (undo-tree-id8524 . -1) (undo-tree-id8525 . -1) (undo-tree-id8526 . -1) (undo-tree-id8527 . -1) (undo-tree-id8528 . -1) (undo-tree-id8529 . -1) (undo-tree-id8530 . -1) (undo-tree-id8531 . -1) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (undo-tree-id8538 . -1) (undo-tree-id8539 . -1) (undo-tree-id8540 . -1) (undo-tree-id8541 . -1) (undo-tree-id8542 . -1) (undo-tree-id8543 . -1) (undo-tree-id8544 . -1) (undo-tree-id8545 . -1) (undo-tree-id8546 . -1) (undo-tree-id8547 . -1) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) (undo-tree-id8568 . -1) (undo-tree-id8569 . -1) (undo-tree-id8570 . -1) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5886) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (undo-tree-id8675 . -1) (undo-tree-id8676 . -1) (undo-tree-id8677 . -1) (undo-tree-id8678 . -1) (undo-tree-id8679 . -1) (undo-tree-id8680 . -1) (undo-tree-id8681 . -1) (undo-tree-id8682 . -1) (undo-tree-id8683 . -1) (undo-tree-id8684 . -1) (undo-tree-id8685 . -1) (undo-tree-id8686 . -1) (undo-tree-id8687 . -1) (undo-tree-id8688 . -1) (undo-tree-id8689 . -1) (undo-tree-id8690 . -1) (undo-tree-id8691 . -1) (undo-tree-id8692 . -1) (undo-tree-id8693 . -1) (undo-tree-id8694 . -1) (undo-tree-id8695 . -1) (undo-tree-id8696 . -1) (undo-tree-id8697 . -1) (undo-tree-id8698 . -1) (undo-tree-id8699 . -1) (undo-tree-id8700 . -1) (undo-tree-id8701 . -1) (undo-tree-id8702 . -1) (undo-tree-id8703 . -1) (undo-tree-id8704 . -1) (undo-tree-id8705 . -1) (undo-tree-id8706 . -1) (undo-tree-id8707 . -1) (undo-tree-id8708 . -1) (undo-tree-id8709 . -1) (undo-tree-id8710 . -1) (undo-tree-id8711 . -1) (undo-tree-id8712 . -1) (undo-tree-id8713 . -1) (undo-tree-id8714 . -1) (undo-tree-id8715 . -1) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1) (undo-tree-id8720 . -1) (undo-tree-id8721 . -1) (undo-tree-id8722 . -1) (undo-tree-id8723 . -1) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (undo-tree-id8726 . -1) (undo-tree-id8727 . -1) (undo-tree-id8728 . -1) (undo-tree-id8729 . -1) (undo-tree-id8730 . -1) (undo-tree-id8731 . -1) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . -1) (undo-tree-id8738 . -1) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) (undo-tree-id8741 . -1) (undo-tree-id8742 . -1) (undo-tree-id8743 . -1) (undo-tree-id8744 . -1) (undo-tree-id8745 . -1) (undo-tree-id8746 . -1) (undo-tree-id8747 . -1) (undo-tree-id8748 . -1) (undo-tree-id8749 . -1) (undo-tree-id8750 . -1) (undo-tree-id8751 . -1) (undo-tree-id8752 . -1) (undo-tree-id8753 . -1) (undo-tree-id8754 . -1) (undo-tree-id8755 . -1) (undo-tree-id8756 . -1) (undo-tree-id8757 . -1) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (undo-tree-id8764 . -1) (undo-tree-id8765 . -1) (undo-tree-id8766 . -1) (undo-tree-id8767 . -1) (undo-tree-id8768 . -1) (undo-tree-id8769 . -1) (undo-tree-id8770 . -1) (undo-tree-id8771 . -1) (undo-tree-id8772 . -1) (undo-tree-id8773 . -1) (undo-tree-id8774 . -1) (undo-tree-id8775 . -1) (undo-tree-id8776 . -1) (undo-tree-id8777 . -1) (undo-tree-id8778 . -1) (undo-tree-id8779 . -1) (undo-tree-id8780 . -1) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1) (undo-tree-id8786 . -1) (undo-tree-id8787 . -1) (undo-tree-id8788 . -1) (undo-tree-id8789 . -1) (undo-tree-id8790 . -1) (undo-tree-id8791 . -1) (undo-tree-id8792 . -1) (undo-tree-id8793 . -1) (undo-tree-id8794 . -1) (undo-tree-id8795 . -1) (undo-tree-id8796 . -1) (undo-tree-id8797 . -1) (undo-tree-id8798 . -1) (undo-tree-id8799 . -1) (undo-tree-id8800 . -1) (undo-tree-id8801 . -1) (undo-tree-id8802 . -1) (undo-tree-id8803 . -1) (undo-tree-id8804 . -1) (undo-tree-id8805 . -1) (undo-tree-id8806 . -1) (undo-tree-id8807 . -1) (undo-tree-id8808 . -1) (undo-tree-id8809 . -1) (undo-tree-id8810 . -1) (undo-tree-id8811 . -1) (undo-tree-id8812 . -1) (undo-tree-id8813 . -1) (undo-tree-id8814 . -1) (undo-tree-id8815 . -1) (undo-tree-id8816 . -1) (undo-tree-id8817 . -1) (undo-tree-id8818 . -1) (undo-tree-id8819 . -1) (undo-tree-id8820 . -1) (undo-tree-id8821 . -1) (undo-tree-id8822 . -1) (undo-tree-id8823 . -1) (undo-tree-id8824 . -1) (undo-tree-id8825 . -1) (undo-tree-id8826 . -1) (undo-tree-id8827 . -1) (undo-tree-id8828 . -1) (undo-tree-id8829 . -1) (undo-tree-id8830 . -1) (undo-tree-id8831 . -1) (undo-tree-id8832 . -1) (undo-tree-id8833 . -1) (undo-tree-id8834 . -1) (undo-tree-id8835 . -1) (undo-tree-id8836 . -1) (undo-tree-id8837 . -1) (undo-tree-id8838 . -1) (undo-tree-id8839 . -1) (undo-tree-id8840 . -1) (undo-tree-id8841 . -1) (undo-tree-id8842 . -1) (undo-tree-id8843 . -1) (undo-tree-id8844 . -1) (undo-tree-id8845 . -1) (undo-tree-id8846 . -1) (undo-tree-id8847 . -1) (undo-tree-id8848 . -1) (undo-tree-id8849 . -1) (undo-tree-id8850 . -1) (undo-tree-id8851 . -1) (undo-tree-id8852 . -1) (undo-tree-id8853 . -1) (undo-tree-id8854 . -1) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) (undo-tree-id8857 . -1) (undo-tree-id8858 . -1) (undo-tree-id8859 . -1) (undo-tree-id8860 . -1) (undo-tree-id8861 . -1) (undo-tree-id8862 . -1) (undo-tree-id8863 . -1) (undo-tree-id8864 . -1) (undo-tree-id8865 . -1) (undo-tree-id8866 . -1) (undo-tree-id8867 . -1) (undo-tree-id8868 . -1) (undo-tree-id8869 . -1) (undo-tree-id8870 . -1) (undo-tree-id8871 . -1) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (undo-tree-id8876 . -1) (undo-tree-id8877 . -1) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (undo-tree-id8880 . -1) (undo-tree-id8881 . -1) (undo-tree-id8882 . -1) (undo-tree-id8883 . -1) (undo-tree-id8884 . -1) (undo-tree-id8885 . -1) (undo-tree-id8886 . -1) (undo-tree-id8887 . -1) (undo-tree-id8888 . -1) (undo-tree-id8889 . -1) (undo-tree-id8890 . -1) (undo-tree-id8891 . -1) (undo-tree-id8892 . -1) (undo-tree-id8893 . -1) (undo-tree-id8894 . -1) (undo-tree-id8895 . -1) (undo-tree-id8896 . -1) (undo-tree-id8897 . -1) (undo-tree-id8898 . -1) (undo-tree-id8899 . -1) (undo-tree-id8900 . -1) (undo-tree-id8901 . -1) (undo-tree-id8902 . -1) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) (undo-tree-id8906 . -1) (undo-tree-id8907 . -1) (undo-tree-id8908 . -1) (undo-tree-id8909 . -1) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (#("c" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5887) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (#("u" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5888) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (undo-tree-id9564 . -1) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (undo-tree-id9577 . -1) (undo-tree-id9578 . -1) (undo-tree-id9579 . -1) (undo-tree-id9580 . -1) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (undo-tree-id9583 . -1) (undo-tree-id9584 . -1) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) (undo-tree-id9605 . -1) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5889) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) (undo-tree-id9611 . -1) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (undo-tree-id9660 . -1) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (undo-tree-id9663 . -1) (undo-tree-id9664 . -1) (undo-tree-id9665 . -1) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (undo-tree-id9669 . -1) (undo-tree-id9670 . -1) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) (undo-tree-id9673 . -1) (undo-tree-id9674 . -1) (undo-tree-id9675 . -1) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . -1) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (undo-tree-id9685 . -1) (undo-tree-id9686 . -1) (undo-tree-id9687 . -1) (undo-tree-id9688 . -1) (undo-tree-id9689 . -1) (undo-tree-id9690 . -1) (undo-tree-id9691 . -1) (undo-tree-id9692 . -1) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (undo-tree-id9706 . -1) (undo-tree-id9707 . -1) (undo-tree-id9708 . -1) (undo-tree-id9709 . -1) (undo-tree-id9710 . -1) (undo-tree-id9711 . -1) (undo-tree-id9712 . -1) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -1) (undo-tree-id9718 . -1) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (undo-tree-id9726 . -1) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) (undo-tree-id9730 . -1) (undo-tree-id9731 . -1) (undo-tree-id9732 . -1) (undo-tree-id9733 . -1) (undo-tree-id9734 . -1) (undo-tree-id9735 . -1) (undo-tree-id9736 . -1) (undo-tree-id9737 . -1) (undo-tree-id9738 . -1) (undo-tree-id9739 . -1) (undo-tree-id9740 . -1) (undo-tree-id9741 . -1) (undo-tree-id9742 . -1) (undo-tree-id9743 . -1) (undo-tree-id9744 . -1) (undo-tree-id9745 . -1) (undo-tree-id9746 . -1) (undo-tree-id9747 . -1) (undo-tree-id9748 . -1) (undo-tree-id9749 . -1) (undo-tree-id9750 . -1) (undo-tree-id9751 . -1) (undo-tree-id9752 . -1) (undo-tree-id9753 . -1) (undo-tree-id9754 . -1) (undo-tree-id9755 . -1) (undo-tree-id9756 . -1) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . -1) (undo-tree-id9802 . -1) (undo-tree-id9803 . -1) (undo-tree-id9804 . -1) (undo-tree-id9805 . -1) (undo-tree-id9806 . -1) (undo-tree-id9807 . -1) (undo-tree-id9808 . -1) (undo-tree-id9809 . -1) (undo-tree-id9810 . -1) (undo-tree-id9811 . -1) (undo-tree-id9812 . -1) (undo-tree-id9813 . -1) (undo-tree-id9814 . -1) (undo-tree-id9815 . -1) (undo-tree-id9816 . -1) (undo-tree-id9817 . -1) (undo-tree-id9818 . -1) (undo-tree-id9819 . -1) (undo-tree-id9820 . -1) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . -1) (undo-tree-id9824 . -1) (undo-tree-id9825 . -1) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) (undo-tree-id9844 . -1) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (undo-tree-id9847 . -1) (undo-tree-id9848 . -1) (undo-tree-id9849 . -1) (undo-tree-id9850 . -1) (undo-tree-id9851 . -1) (undo-tree-id9852 . -1) (undo-tree-id9853 . -1) (undo-tree-id9854 . -1) (undo-tree-id9855 . -1) (undo-tree-id9856 . -1) (undo-tree-id9857 . -1) (undo-tree-id9858 . -1) (undo-tree-id9859 . -1) (undo-tree-id9860 . -1) (undo-tree-id9861 . -1) (undo-tree-id9862 . -1) (undo-tree-id9863 . -1) (undo-tree-id9864 . -1) (undo-tree-id9865 . -1) (undo-tree-id9866 . -1) (undo-tree-id9867 . -1) (undo-tree-id9868 . -1) (undo-tree-id9869 . -1) (undo-tree-id9870 . -1) (undo-tree-id9871 . -1) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5890) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) (undo-tree-id9891 . -1) (undo-tree-id9892 . -1) (undo-tree-id9893 . -1) (undo-tree-id9894 . -1) (undo-tree-id9895 . -1) (undo-tree-id9896 . -1) (undo-tree-id9897 . -1) (undo-tree-id9898 . -1) (undo-tree-id9899 . -1) (undo-tree-id9900 . -1) (undo-tree-id9901 . -1) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (undo-tree-id9904 . -1) (undo-tree-id9905 . -1) (undo-tree-id9906 . -1) (undo-tree-id9907 . -1) (undo-tree-id9908 . -1) (undo-tree-id9909 . -1) (undo-tree-id9910 . -1) (undo-tree-id9911 . -1) (undo-tree-id9912 . -1) (undo-tree-id9913 . -1) (undo-tree-id9914 . -1) (undo-tree-id9915 . -1) (undo-tree-id9916 . -1) (undo-tree-id9917 . -1) (undo-tree-id9918 . -1) (undo-tree-id9919 . -1) (undo-tree-id9920 . -1) (undo-tree-id9921 . -1) (undo-tree-id9922 . -1) (undo-tree-id9923 . -1) (undo-tree-id9924 . -1) (undo-tree-id9925 . -1) (undo-tree-id9926 . -1) (undo-tree-id9927 . -1) (undo-tree-id9928 . -1) (undo-tree-id9929 . -1) (undo-tree-id9930 . -1) (undo-tree-id9931 . -1) (undo-tree-id9932 . -1) (undo-tree-id9933 . -1) (undo-tree-id9934 . -1) (undo-tree-id9935 . -1) (undo-tree-id9936 . -1) (undo-tree-id9937 . -1) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (undo-tree-id9940 . -1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (undo-tree-id9943 . -1) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (undo-tree-id9948 . -1) (undo-tree-id9949 . -1) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) (undo-tree-id9962 . -1) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (undo-tree-id9976 . -1) (undo-tree-id9977 . -1) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . -1) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . -1) (undo-tree-id9999 . -1) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1) (undo-tree-id10012 . -1) (undo-tree-id10013 . -1) (undo-tree-id10014 . -1) (undo-tree-id10015 . -1) (undo-tree-id10016 . -1) (undo-tree-id10017 . -1) (undo-tree-id10018 . -1) (undo-tree-id10019 . -1) (undo-tree-id10020 . -1) (undo-tree-id10021 . -1) (undo-tree-id10022 . -1) (undo-tree-id10023 . -1) (undo-tree-id10024 . -1) (undo-tree-id10025 . -1) (undo-tree-id10026 . -1) (undo-tree-id10027 . -1) (undo-tree-id10028 . -1) (undo-tree-id10029 . -1) (undo-tree-id10030 . -1) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (undo-tree-id10033 . -1) (undo-tree-id10034 . -1) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) (undo-tree-id10037 . -1) (undo-tree-id10038 . -1) (undo-tree-id10039 . -1) (undo-tree-id10040 . -1) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (undo-tree-id10052 . -1) (undo-tree-id10053 . -1) (undo-tree-id10054 . -1) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) (undo-tree-id10070 . -1) (undo-tree-id10071 . -1) (undo-tree-id10072 . -1) (undo-tree-id10073 . -1) (undo-tree-id10074 . -1) (undo-tree-id10075 . -1) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (undo-tree-id10080 . -1) (undo-tree-id10081 . -1) (undo-tree-id10082 . -1) (undo-tree-id10083 . -1) (undo-tree-id10084 . -1) (undo-tree-id10085 . -1) (undo-tree-id10086 . -1) (undo-tree-id10087 . -1) (undo-tree-id10088 . -1) (undo-tree-id10089 . -1) (undo-tree-id10090 . -1) (undo-tree-id10091 . -1) (undo-tree-id10092 . -1) (undo-tree-id10093 . -1) (undo-tree-id10094 . -1) (undo-tree-id10095 . -1) (undo-tree-id10096 . -1) (undo-tree-id10097 . -1) (undo-tree-id10098 . -1) (undo-tree-id10099 . -1) (undo-tree-id10100 . -1) (undo-tree-id10101 . -1) (undo-tree-id10102 . -1) (undo-tree-id10103 . -1) (undo-tree-id10104 . -1) (undo-tree-id10105 . -1) (undo-tree-id10106 . -1) (undo-tree-id10107 . -1) (undo-tree-id10108 . -1) (undo-tree-id10109 . -1) (undo-tree-id10110 . -1) (undo-tree-id10111 . -1) (undo-tree-id10112 . -1) (undo-tree-id10113 . -1) (undo-tree-id10114 . -1) (undo-tree-id10115 . -1) (undo-tree-id10116 . -1) (undo-tree-id10117 . -1) (undo-tree-id10118 . -1) (undo-tree-id10119 . -1) (undo-tree-id10120 . -1) (undo-tree-id10121 . -1) (undo-tree-id10122 . -1) (undo-tree-id10123 . -1) (undo-tree-id10124 . -1) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) (undo-tree-id10136 . -1) (undo-tree-id10137 . -1) (undo-tree-id10138 . -1) (undo-tree-id10139 . -1) (undo-tree-id10140 . -1) (undo-tree-id10141 . -1) (undo-tree-id10142 . -1) (undo-tree-id10143 . -1) (undo-tree-id10144 . -1) (undo-tree-id10145 . -1) (undo-tree-id10146 . -1) (undo-tree-id10147 . -1) (undo-tree-id10148 . -1) (undo-tree-id10149 . -1) (undo-tree-id10150 . -1) (undo-tree-id10151 . -1) (undo-tree-id10152 . -1) (undo-tree-id10153 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5891) (undo-tree-id10154 . -1) (undo-tree-id10155 . -1) (undo-tree-id10156 . -1) (undo-tree-id10157 . -1) (undo-tree-id10158 . -1) (undo-tree-id10159 . -1) (undo-tree-id10160 . -1) (undo-tree-id10161 . -1) (undo-tree-id10162 . -1) (undo-tree-id10163 . -1) (undo-tree-id10164 . -1) (undo-tree-id10165 . -1) (undo-tree-id10166 . -1) (undo-tree-id10167 . -1) (undo-tree-id10168 . -1) (undo-tree-id10169 . -1) (undo-tree-id10170 . -1) (undo-tree-id10171 . -1) (undo-tree-id10172 . -1) (undo-tree-id10173 . -1) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . -1) (undo-tree-id10182 . -1) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . -1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) (undo-tree-id10188 . -1) (undo-tree-id10189 . -1) (undo-tree-id10190 . -1) (undo-tree-id10191 . -1) (undo-tree-id10192 . -1) (undo-tree-id10193 . -1) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) (undo-tree-id10198 . -1) (undo-tree-id10199 . -1) (undo-tree-id10200 . -1) (undo-tree-id10201 . -1) (undo-tree-id10202 . -1) (undo-tree-id10203 . -1) (undo-tree-id10204 . -1) (undo-tree-id10205 . -1) (undo-tree-id10206 . -1) (undo-tree-id10207 . -1) (undo-tree-id10208 . -1) (undo-tree-id10209 . -1) (undo-tree-id10210 . -1) (undo-tree-id10211 . -1) (undo-tree-id10212 . -1) (undo-tree-id10213 . -1) (undo-tree-id10214 . -1) (undo-tree-id10215 . -1) (undo-tree-id10216 . -1) (undo-tree-id10217 . -1) (undo-tree-id10218 . -1) (undo-tree-id10219 . -1) (undo-tree-id10220 . -1) (undo-tree-id10221 . -1) (undo-tree-id10222 . -1) (undo-tree-id10223 . -1) (undo-tree-id10224 . -1) (undo-tree-id10225 . -1) (undo-tree-id10226 . -1) (undo-tree-id10227 . -1) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10230 . -1) (undo-tree-id10231 . -1) (undo-tree-id10232 . -1) (undo-tree-id10233 . -1) (undo-tree-id10234 . -1) (undo-tree-id10235 . -1) (undo-tree-id10236 . -1) (undo-tree-id10237 . -1) (undo-tree-id10238 . -1) (undo-tree-id10239 . -1) (undo-tree-id10240 . -1) (undo-tree-id10241 . -1) (undo-tree-id10242 . -1) (undo-tree-id10243 . -1) (undo-tree-id10244 . -1) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) (undo-tree-id10247 . -1) (undo-tree-id10248 . -1) (undo-tree-id10249 . -1) (undo-tree-id10250 . -1) (undo-tree-id10251 . -1) (undo-tree-id10252 . -1) (undo-tree-id10253 . -1) (undo-tree-id10254 . -1) (undo-tree-id10255 . -1) (undo-tree-id10256 . -1) (undo-tree-id10257 . -1) (undo-tree-id10258 . -1) (undo-tree-id10259 . -1) (undo-tree-id10260 . -1) (undo-tree-id10261 . -1) (undo-tree-id10262 . -1) (undo-tree-id10263 . -1) (undo-tree-id10264 . -1) (undo-tree-id10265 . -1) (undo-tree-id10266 . -1) (undo-tree-id10267 . -1) (undo-tree-id10268 . -1) (undo-tree-id10269 . -1) (undo-tree-id10270 . -1) (undo-tree-id10271 . -1) (undo-tree-id10272 . -1) (undo-tree-id10273 . -1) (undo-tree-id10274 . -1) (undo-tree-id10275 . -1) (undo-tree-id10276 . -1) (undo-tree-id10277 . -1) (undo-tree-id10278 . -1) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (undo-tree-id10281 . -1) (undo-tree-id10282 . -1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (undo-tree-id10286 . -1) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . -1) (undo-tree-id10292 . -1) (undo-tree-id10293 . -1) (undo-tree-id10294 . -1) (undo-tree-id10295 . -1) (undo-tree-id10296 . -1) (undo-tree-id10297 . -1) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (undo-tree-id10301 . -1) (undo-tree-id10302 . -1) (undo-tree-id10303 . -1) (undo-tree-id10304 . -1) (undo-tree-id10305 . -1) (undo-tree-id10306 . -1) (undo-tree-id10307 . -1) (undo-tree-id10308 . -1) (undo-tree-id10309 . -1) (undo-tree-id10310 . -1) (undo-tree-id10311 . -1) (undo-tree-id10312 . -1) (undo-tree-id10313 . -1) (undo-tree-id10314 . -1) (undo-tree-id10315 . -1) (undo-tree-id10316 . -1) (undo-tree-id10317 . -1) (undo-tree-id10318 . -1) (undo-tree-id10319 . -1) (undo-tree-id10320 . -1) (undo-tree-id10321 . -1) (undo-tree-id10322 . -1) (undo-tree-id10323 . -1) (undo-tree-id10324 . -1) (undo-tree-id10325 . -1) (undo-tree-id10326 . -1) (undo-tree-id10327 . -1) (undo-tree-id10328 . -1) (undo-tree-id10329 . -1) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) (undo-tree-id10335 . -1) (undo-tree-id10336 . -1) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1) (undo-tree-id10365 . -1) (undo-tree-id10366 . -1) (undo-tree-id10367 . -1) (undo-tree-id10368 . -1) (undo-tree-id10369 . -1) (undo-tree-id10370 . -1) (undo-tree-id10371 . -1) (undo-tree-id10372 . -1) (undo-tree-id10373 . -1) (undo-tree-id10374 . -1) (undo-tree-id10375 . -1) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) (undo-tree-id10402 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5892) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (undo-tree-id10429 . -1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) (undo-tree-id10446 . -1) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) (undo-tree-id10452 . -1) (undo-tree-id10453 . -1) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) (undo-tree-id10457 . -1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) (undo-tree-id10465 . -1) (undo-tree-id10466 . -1) (undo-tree-id10467 . -1) (undo-tree-id10468 . -1) (undo-tree-id10469 . -1) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (undo-tree-id10472 . -1) (undo-tree-id10473 . -1) (undo-tree-id10474 . -1) (undo-tree-id10475 . -1) (undo-tree-id10476 . -1) (undo-tree-id10477 . -1) (undo-tree-id10478 . -1) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) (undo-tree-id10481 . -1) (undo-tree-id10482 . -1) (undo-tree-id10483 . -1) (undo-tree-id10484 . -1) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1) (undo-tree-id10487 . -1) (undo-tree-id10488 . -1) (undo-tree-id10489 . -1) (undo-tree-id10490 . -1) (undo-tree-id10491 . -1) (undo-tree-id10492 . -1) (undo-tree-id10493 . -1) (undo-tree-id10494 . -1) (undo-tree-id10495 . -1) (undo-tree-id10496 . -1) (undo-tree-id10497 . -1) (undo-tree-id10498 . -1) (undo-tree-id10499 . -1) (undo-tree-id10500 . -1) (undo-tree-id10501 . -1) (undo-tree-id10502 . -1) (undo-tree-id10503 . -1) (undo-tree-id10504 . -1) (undo-tree-id10505 . -1) (undo-tree-id10506 . -1) (undo-tree-id10507 . -1) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (undo-tree-id10510 . -1) (undo-tree-id10511 . -1) (undo-tree-id10512 . -1) (undo-tree-id10513 . -1) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (undo-tree-id10526 . -1) (undo-tree-id10527 . -1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) (undo-tree-id10549 . -1) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (undo-tree-id10558 . -1) (undo-tree-id10559 . -1) (undo-tree-id10560 . -1) (undo-tree-id10561 . -1) (undo-tree-id10562 . -1) (undo-tree-id10563 . -1) (undo-tree-id10564 . -1) (undo-tree-id10565 . -1) (undo-tree-id10566 . -1) (undo-tree-id10567 . -1) (undo-tree-id10568 . -1) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (undo-tree-id10572 . -1) (undo-tree-id10573 . -1) (undo-tree-id10574 . -1) (undo-tree-id10575 . -1) (undo-tree-id10576 . -1) (undo-tree-id10577 . -1) (undo-tree-id10578 . -1) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (undo-tree-id10612 . -1) (undo-tree-id10613 . -1) (undo-tree-id10614 . -1) (undo-tree-id10615 . -1) (undo-tree-id10616 . -1) (undo-tree-id10617 . -1) (undo-tree-id10618 . -1) (undo-tree-id10619 . -1) (undo-tree-id10620 . -1) (undo-tree-id10621 . -1) (undo-tree-id10622 . -1) (undo-tree-id10623 . -1) (undo-tree-id10624 . -1) (undo-tree-id10625 . -1) (undo-tree-id10626 . -1) (undo-tree-id10627 . -1) (undo-tree-id10628 . -1) (undo-tree-id10629 . -1) (undo-tree-id10630 . -1) (undo-tree-id10631 . -1) (undo-tree-id10632 . -1) (undo-tree-id10633 . -1) (undo-tree-id10634 . -1) (undo-tree-id10635 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5893) (undo-tree-id10636 . -1) (undo-tree-id10637 . -1) (undo-tree-id10638 . -1) (undo-tree-id10639 . -1) (undo-tree-id10640 . -1) (undo-tree-id10641 . -1) (undo-tree-id10642 . -1) (undo-tree-id10643 . -1) (undo-tree-id10644 . -1) (undo-tree-id10645 . -1) (undo-tree-id10646 . -1) (undo-tree-id10647 . -1) (undo-tree-id10648 . -1) (undo-tree-id10649 . -1) (undo-tree-id10650 . -1) (undo-tree-id10651 . -1) (undo-tree-id10652 . -1) (undo-tree-id10653 . -1) (undo-tree-id10654 . -1) (undo-tree-id10655 . -1) (undo-tree-id10656 . -1) (undo-tree-id10657 . -1) (undo-tree-id10658 . -1) (undo-tree-id10659 . -1) (undo-tree-id10660 . -1) (undo-tree-id10661 . -1) (undo-tree-id10662 . -1) (undo-tree-id10663 . -1) (undo-tree-id10664 . -1) (undo-tree-id10665 . -1) (undo-tree-id10666 . -1) (undo-tree-id10667 . -1) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) (undo-tree-id10673 . -1) (undo-tree-id10674 . -1) (undo-tree-id10675 . -1) (undo-tree-id10676 . -1) (undo-tree-id10677 . -1) (undo-tree-id10678 . -1) (undo-tree-id10679 . -1) (undo-tree-id10680 . -1) (undo-tree-id10681 . -1) (undo-tree-id10682 . -1) (undo-tree-id10683 . -1) (undo-tree-id10684 . -1) (undo-tree-id10685 . -1) (undo-tree-id10686 . -1) (undo-tree-id10687 . -1) (undo-tree-id10688 . -1) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -1) (undo-tree-id10692 . -1) (undo-tree-id10693 . -1) (undo-tree-id10694 . -1) (undo-tree-id10695 . -1) (undo-tree-id10696 . -1) (undo-tree-id10697 . -1) (undo-tree-id10698 . -1) (undo-tree-id10699 . -1) (undo-tree-id10700 . -1) (undo-tree-id10701 . -1) (undo-tree-id10702 . -1) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) (undo-tree-id10708 . -1) (undo-tree-id10709 . -1) (undo-tree-id10710 . -1) (undo-tree-id10711 . -1) (undo-tree-id10712 . -1) (undo-tree-id10713 . -1) (undo-tree-id10714 . -1) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (undo-tree-id10727 . -1) (undo-tree-id10728 . -1) (undo-tree-id10729 . -1) (undo-tree-id10730 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) (undo-tree-id10733 . -1) (undo-tree-id10734 . -1) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1) (undo-tree-id10737 . -1) (undo-tree-id10738 . -1) (undo-tree-id10739 . -1) (undo-tree-id10740 . -1) (undo-tree-id10741 . -1) (undo-tree-id10742 . -1) (undo-tree-id10743 . -1) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (undo-tree-id10750 . -1) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (undo-tree-id10757 . -1) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) (undo-tree-id10760 . -1) (undo-tree-id10761 . -1) (undo-tree-id10762 . -1) (undo-tree-id10763 . -1) (undo-tree-id10764 . -1) (undo-tree-id10765 . -1) (undo-tree-id10766 . -1) (undo-tree-id10767 . -1) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (undo-tree-id10771 . -1) (undo-tree-id10772 . -1) (undo-tree-id10773 . -1) (undo-tree-id10774 . -1) (undo-tree-id10775 . -1) (undo-tree-id10776 . -1) (undo-tree-id10777 . -1) (undo-tree-id10778 . -1) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -1) (undo-tree-id10789 . -1) (undo-tree-id10790 . -1) (undo-tree-id10791 . -1) (undo-tree-id10792 . -1) (undo-tree-id10793 . -1) (undo-tree-id10794 . -1) (undo-tree-id10795 . -1) (undo-tree-id10796 . -1) (undo-tree-id10797 . -1) (undo-tree-id10798 . -1) (undo-tree-id10799 . -1) (undo-tree-id10800 . -1) (undo-tree-id10801 . -1) (undo-tree-id10802 . -1) (undo-tree-id10803 . -1) (undo-tree-id10804 . -1) (undo-tree-id10805 . -1) (undo-tree-id10806 . -1) (undo-tree-id10807 . -1) (undo-tree-id10808 . -1) (undo-tree-id10809 . -1) (undo-tree-id10810 . -1) (undo-tree-id10811 . -1) (undo-tree-id10812 . -1) (undo-tree-id10813 . -1) (undo-tree-id10814 . -1) (undo-tree-id10815 . -1) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1) (undo-tree-id10825 . -1) (undo-tree-id10826 . -1) (undo-tree-id10827 . -1) (undo-tree-id10828 . -1) (undo-tree-id10829 . -1) (undo-tree-id10830 . -1) (undo-tree-id10831 . -1) (undo-tree-id10832 . -1) (undo-tree-id10833 . -1) (undo-tree-id10834 . -1) (undo-tree-id10835 . -1) (undo-tree-id10836 . -1) (undo-tree-id10837 . -1) (undo-tree-id10838 . -1) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (undo-tree-id10842 . -1) (undo-tree-id10843 . -1) (undo-tree-id10844 . -1) (undo-tree-id10845 . -1) (undo-tree-id10846 . -1) (undo-tree-id10847 . -1) (undo-tree-id10848 . -1) (undo-tree-id10849 . -1) (undo-tree-id10850 . -1) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5894) (undo-tree-id10853 . -1) (undo-tree-id10854 . -1) (undo-tree-id10855 . -1) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1) (undo-tree-id10858 . -1) (undo-tree-id10859 . -1) (undo-tree-id10860 . -1) (undo-tree-id10861 . -1) (undo-tree-id10862 . -1) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) (undo-tree-id10865 . -1) (undo-tree-id10866 . -1) (undo-tree-id10867 . -1) (undo-tree-id10868 . -1) (undo-tree-id10869 . -1) (undo-tree-id10870 . -1) (undo-tree-id10871 . -1) (undo-tree-id10872 . -1) (undo-tree-id10873 . -1) (undo-tree-id10874 . -1) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10877 . -1) (undo-tree-id10878 . -1) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1) (undo-tree-id10881 . -1) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1) (undo-tree-id10886 . -1) (undo-tree-id10887 . -1) (undo-tree-id10888 . -1) (undo-tree-id10889 . -1) (undo-tree-id10890 . -1) (undo-tree-id10891 . -1) (undo-tree-id10892 . -1) (undo-tree-id10893 . -1) (undo-tree-id10894 . -1) (undo-tree-id10895 . -1) (undo-tree-id10896 . -1) (undo-tree-id10897 . -1) (undo-tree-id10898 . -1) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1) (undo-tree-id10901 . -1) (undo-tree-id10902 . -1) (undo-tree-id10903 . -1) (undo-tree-id10904 . -1) (undo-tree-id10905 . -1) (undo-tree-id10906 . -1) (undo-tree-id10907 . -1) (undo-tree-id10908 . -1) (undo-tree-id10909 . -1) (undo-tree-id10910 . -1) (undo-tree-id10911 . -1) (undo-tree-id10912 . -1) (undo-tree-id10913 . -1) (undo-tree-id10914 . -1) (undo-tree-id10915 . -1) (undo-tree-id10916 . -1) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1) (undo-tree-id10932 . -1) (undo-tree-id10933 . -1) (undo-tree-id10934 . -1) (undo-tree-id10935 . -1) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1) (undo-tree-id10941 . -1) (undo-tree-id10942 . -1) (undo-tree-id10943 . -1) (undo-tree-id10944 . -1) (undo-tree-id10945 . -1) (undo-tree-id10946 . -1) (undo-tree-id10947 . -1) (undo-tree-id10948 . -1) (undo-tree-id10949 . -1) (undo-tree-id10950 . -1) (undo-tree-id10951 . -1) (undo-tree-id10952 . -1) (undo-tree-id10953 . -1) (undo-tree-id10954 . -1) (undo-tree-id10955 . -1) (undo-tree-id10956 . -1) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (undo-tree-id10961 . -1) (undo-tree-id10962 . -1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) (undo-tree-id10973 . -1) (undo-tree-id10974 . -1) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (undo-tree-id10977 . -1) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . -1) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . -1) (undo-tree-id10992 . -1) (undo-tree-id10993 . -1) (undo-tree-id10994 . -1) (undo-tree-id10995 . -1) (undo-tree-id10996 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11000 . -1) (undo-tree-id11001 . -1) (undo-tree-id11002 . -1) (undo-tree-id11003 . -1) (undo-tree-id11004 . -1) (undo-tree-id11005 . -1) (undo-tree-id11006 . -1) (undo-tree-id11007 . -1) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1) (undo-tree-id11010 . -1) (undo-tree-id11011 . -1) (undo-tree-id11012 . -1) (undo-tree-id11013 . -1) (undo-tree-id11014 . -1) (undo-tree-id11015 . -1) (undo-tree-id11016 . -1) (undo-tree-id11017 . -1) (undo-tree-id11018 . -1) (undo-tree-id11019 . -1) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1) (undo-tree-id11022 . -1) (undo-tree-id11023 . -1) (undo-tree-id11024 . -1) (undo-tree-id11025 . -1) (undo-tree-id11026 . -1) (undo-tree-id11027 . -1) (undo-tree-id11028 . -1) (undo-tree-id11029 . -1) (undo-tree-id11030 . -1) (undo-tree-id11031 . -1) (undo-tree-id11032 . -1) (undo-tree-id11033 . -1) (undo-tree-id11034 . -1) (undo-tree-id11035 . -1) (undo-tree-id11036 . -1) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . -1) (undo-tree-id11041 . -1) (undo-tree-id11042 . -1) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . -1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5895) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) (undo-tree-id11062 . -1) (undo-tree-id11063 . -1) (undo-tree-id11064 . -1) (undo-tree-id11065 . -1) (undo-tree-id11066 . -1) (undo-tree-id11067 . -1) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1) (undo-tree-id11070 . -1) (undo-tree-id11071 . -1) (undo-tree-id11072 . -1) (undo-tree-id11073 . -1) (undo-tree-id11074 . -1) (undo-tree-id11075 . -1) (undo-tree-id11076 . -1) (undo-tree-id11077 . -1) (undo-tree-id11078 . -1) (undo-tree-id11079 . -1) (undo-tree-id11080 . -1) (undo-tree-id11081 . -1) (undo-tree-id11082 . -1) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) (undo-tree-id11086 . -1) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) (undo-tree-id11091 . -1) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (undo-tree-id11098 . -1) (undo-tree-id11099 . -1) (undo-tree-id11100 . -1) (undo-tree-id11101 . -1) (undo-tree-id11102 . -1) (undo-tree-id11103 . -1) (undo-tree-id11104 . -1) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . -1) (undo-tree-id11108 . -1) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . -1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) (undo-tree-id11114 . -1) (undo-tree-id11115 . -1) (undo-tree-id11116 . -1) (undo-tree-id11117 . -1) (undo-tree-id11118 . -1) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) (undo-tree-id11122 . -1) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (undo-tree-id11131 . -1) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1) (undo-tree-id11136 . -1) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (undo-tree-id11166 . -1) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) (undo-tree-id11229 . -1) (undo-tree-id11230 . -1) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5896) (undo-tree-id11238 . -1) (undo-tree-id11239 . -1) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (undo-tree-id11242 . -1) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (undo-tree-id11276 . -1) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (undo-tree-id11283 . -1) (undo-tree-id11284 . -1) (undo-tree-id11285 . -1) (undo-tree-id11286 . -1) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (undo-tree-id11289 . -1) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) (undo-tree-id11298 . -1) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (undo-tree-id11314 . -1) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) (undo-tree-id11328 . -1) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (undo-tree-id11366 . -1) (undo-tree-id11367 . -1) (undo-tree-id11368 . -1) (undo-tree-id11369 . -1) (undo-tree-id11370 . -1) (undo-tree-id11371 . -1) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (#("t" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5897) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (undo-tree-id11382 . -1) (undo-tree-id11383 . -1) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) (undo-tree-id11386 . -1) (undo-tree-id11387 . -1) (undo-tree-id11388 . -1) (undo-tree-id11389 . -1) (undo-tree-id11390 . -1) (undo-tree-id11391 . -1) (undo-tree-id11392 . -1) (undo-tree-id11393 . -1) (undo-tree-id11394 . -1) (undo-tree-id11395 . -1) (undo-tree-id11396 . -1) (undo-tree-id11397 . -1) (undo-tree-id11398 . -1) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (undo-tree-id11407 . -1) (undo-tree-id11408 . -1) (undo-tree-id11409 . -1) (undo-tree-id11410 . -1) (undo-tree-id11411 . -1) (undo-tree-id11412 . -1) (undo-tree-id11413 . -1) (undo-tree-id11414 . -1) (undo-tree-id11415 . -1) (undo-tree-id11416 . -1) (undo-tree-id11417 . -1) (undo-tree-id11418 . -1) (undo-tree-id11419 . -1) (undo-tree-id11420 . -1) (undo-tree-id11421 . -1) (undo-tree-id11422 . -1) (undo-tree-id11423 . -1) (undo-tree-id11424 . -1) (undo-tree-id11425 . -1) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) (undo-tree-id11431 . -1) (undo-tree-id11432 . -1) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) (undo-tree-id11435 . -1) (undo-tree-id11436 . -1) (undo-tree-id11437 . -1) (undo-tree-id11438 . -1) (undo-tree-id11439 . -1) (undo-tree-id11440 . -1) (undo-tree-id11441 . -1) (undo-tree-id11442 . -1) (undo-tree-id11443 . -1) (undo-tree-id11444 . -1) (undo-tree-id11445 . -1) (undo-tree-id11446 . -1) (undo-tree-id11447 . -1) (undo-tree-id11448 . -1) (undo-tree-id11449 . -1) (undo-tree-id11450 . -1) (undo-tree-id11451 . -1) (undo-tree-id11452 . -1) (undo-tree-id11453 . -1) (undo-tree-id11454 . -1) (undo-tree-id11455 . -1) (undo-tree-id11456 . -1) (undo-tree-id11457 . -1) (undo-tree-id11458 . -1) (undo-tree-id11459 . -1) (undo-tree-id11460 . -1) (undo-tree-id11461 . -1) (undo-tree-id11462 . -1) (undo-tree-id11463 . -1) (undo-tree-id11464 . -1) (undo-tree-id11465 . -1) (undo-tree-id11466 . -1) (undo-tree-id11467 . -1) (#("h" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)))) . -5898) (undo-tree-id11468 . -1) (undo-tree-id11469 . -1) (undo-tree-id11470 . -1) (undo-tree-id11471 . -1) (undo-tree-id11472 . -1) (undo-tree-id11473 . -1) (undo-tree-id11474 . -1) (undo-tree-id11475 . -1) (undo-tree-id11476 . -1) (undo-tree-id11477 . -1) (undo-tree-id11478 . -1) (undo-tree-id11479 . -1) (undo-tree-id11480 . -1) (undo-tree-id11481 . -1) (undo-tree-id11482 . -1) (undo-tree-id11483 . -1) (undo-tree-id11484 . -1) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) (undo-tree-id11490 . -1) (undo-tree-id11491 . -1) (undo-tree-id11492 . -1) (undo-tree-id11493 . -1) (undo-tree-id11494 . -1) (undo-tree-id11495 . -1) (undo-tree-id11496 . -1) (undo-tree-id11497 . -1) (undo-tree-id11498 . -1) (undo-tree-id11499 . -1) 5899 (5883 . 5899)) nil (25747 34107 622112 814000) 0 nil])
([nil nil ((#("a " 0 2 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . 6258) (undo-tree-id11512 . -1) (undo-tree-id11513 . -2) (t 25747 34107 630179 159000)) nil (25747 34138 442647 485000) 0 nil])
([nil nil ((6343 . 6351) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6343) (undo-tree-id11536 . -1) 6344 (6334 . 6344) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6295) (undo-tree-id11537 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6296) (undo-tree-id11538 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6297) (undo-tree-id11539 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6298) (undo-tree-id11540 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6299) (undo-tree-id11541 . -1) (#("p" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6300) (undo-tree-id11542 . -1) (#("p" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6301) (undo-tree-id11543 . -1) (#("l" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6302) (undo-tree-id11544 . -1) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6303) (undo-tree-id11545 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6304) (undo-tree-id11546 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6305) (undo-tree-id11547 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6306) (undo-tree-id11548 . -1) 6307 (t 25747 34138 454010 220000)) nil (25747 34176 415425 739000) 0 nil])
([nil nil ((6387 . 6390) (#("u" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6387) (undo-tree-id11514 . -1) (undo-tree-id11515 . -1) (undo-tree-id11516 . -1) (undo-tree-id11517 . -1) (undo-tree-id11518 . -1) (undo-tree-id11519 . -1) (undo-tree-id11520 . -1) (undo-tree-id11521 . -1) (undo-tree-id11522 . -1) (undo-tree-id11523 . -1) (undo-tree-id11524 . -1) (undo-tree-id11525 . -1) (undo-tree-id11526 . -1) (undo-tree-id11527 . -1) (undo-tree-id11528 . -1) (undo-tree-id11529 . -1) (undo-tree-id11530 . -1) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6388) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -6389) (undo-tree-id11535 . -1) 6390 (6386 . 6390)) nil (25747 34176 415417 534000) 0 nil])
([nil nil ((6601 . 6612) (#("The" 0 3 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 6601) (undo-tree-id11657 . -2) (undo-tree-id11658 . -1) (undo-tree-id11659 . -3) (undo-tree-id11660 . -3) (t 25747 34176 421239 700000)) nil (25747 34203 727246 158000) 0 nil])
([nil nil ((#("e" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -6608) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (undo-tree-id11583 . -1) (undo-tree-id11584 . -1) (undo-tree-id11585 . -1) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -1) (undo-tree-id11600 . -1) (undo-tree-id11601 . -1) (undo-tree-id11602 . -1) (undo-tree-id11603 . -1) (undo-tree-id11604 . -1) (undo-tree-id11605 . -1) (undo-tree-id11606 . -1) (undo-tree-id11607 . -1) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (undo-tree-id11650 . -1) (undo-tree-id11651 . -1) (undo-tree-id11652 . -1) (undo-tree-id11653 . -1) (undo-tree-id11654 . -1) (undo-tree-id11655 . -1) (undo-tree-id11656 . -1) 6609) nil (25747 34203 727240 818000) 0 nil])
([nil nil ((7422 . 7428) (#("u" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -7422) (undo-tree-id11661 . -1) (undo-tree-id11662 . -1) (undo-tree-id11663 . -1) (undo-tree-id11664 . -1) (undo-tree-id11665 . -1) (undo-tree-id11666 . -1) (undo-tree-id11667 . -1) (undo-tree-id11668 . -1) (undo-tree-id11669 . -1) (undo-tree-id11670 . -1) (undo-tree-id11671 . -1) (undo-tree-id11672 . -1) (undo-tree-id11673 . -1) (undo-tree-id11674 . -1) (undo-tree-id11675 . -1) (undo-tree-id11676 . -1) (undo-tree-id11677 . -1) (undo-tree-id11678 . -1) (undo-tree-id11679 . -1) (undo-tree-id11680 . -1) (undo-tree-id11681 . -1) (undo-tree-id11682 . -1) (undo-tree-id11683 . -1) (undo-tree-id11684 . -1) (undo-tree-id11685 . -1) (undo-tree-id11686 . -1) (undo-tree-id11687 . -1) (undo-tree-id11688 . -1) (undo-tree-id11689 . -1) (undo-tree-id11690 . -1) (undo-tree-id11691 . -1) (undo-tree-id11692 . -1) (undo-tree-id11693 . -1) (undo-tree-id11694 . -1) (undo-tree-id11695 . -1) (undo-tree-id11696 . -1) (undo-tree-id11697 . -1) (undo-tree-id11698 . -1) (undo-tree-id11699 . -1) (undo-tree-id11700 . -1) (undo-tree-id11701 . -1) (undo-tree-id11702 . -1) (undo-tree-id11703 . -1) (undo-tree-id11704 . -1) (undo-tree-id11705 . -1) (undo-tree-id11706 . -1) (undo-tree-id11707 . -1) (undo-tree-id11708 . -1) (undo-tree-id11709 . -1) (undo-tree-id11710 . -1) (undo-tree-id11711 . -1) (undo-tree-id11712 . -1) (undo-tree-id11713 . -1) (undo-tree-id11714 . -1) (undo-tree-id11715 . -1) (undo-tree-id11716 . -1) (undo-tree-id11717 . -1) (undo-tree-id11718 . -1) (undo-tree-id11719 . -1) (undo-tree-id11720 . -1) (undo-tree-id11721 . -1) (undo-tree-id11722 . -1) (undo-tree-id11723 . -1) (undo-tree-id11724 . -1) (undo-tree-id11725 . -1) (undo-tree-id11726 . -1) (undo-tree-id11727 . -1) (undo-tree-id11728 . -1) (undo-tree-id11729 . -1) (undo-tree-id11730 . -1) (undo-tree-id11731 . -1) (undo-tree-id11732 . -1) (undo-tree-id11733 . -1) (undo-tree-id11734 . -1) (undo-tree-id11735 . -1) (undo-tree-id11736 . -1) (undo-tree-id11737 . -1) (undo-tree-id11738 . -1) (undo-tree-id11739 . -1) (undo-tree-id11740 . -1) (undo-tree-id11741 . -1) (undo-tree-id11742 . -1) (undo-tree-id11743 . -1) (undo-tree-id11744 . -1) (undo-tree-id11745 . -1) (undo-tree-id11746 . -1) (undo-tree-id11747 . -1) (undo-tree-id11748 . -1) (undo-tree-id11749 . -1) (undo-tree-id11750 . -1) (undo-tree-id11751 . -1) (undo-tree-id11752 . -1) (#("t" 0 1 (fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -7423) (undo-tree-id11753 . -1) (undo-tree-id11754 . -1) (undo-tree-id11755 . -1) (undo-tree-id11756 . -1) (undo-tree-id11757 . -1) (undo-tree-id11758 . -1) (undo-tree-id11759 . -1) (undo-tree-id11760 . -1) (undo-tree-id11761 . -1) (undo-tree-id11762 . -1) (undo-tree-id11763 . -1) (undo-tree-id11764 . -1) (undo-tree-id11765 . -1) (undo-tree-id11766 . -1) (undo-tree-id11767 . -1) (undo-tree-id11768 . -1) (undo-tree-id11769 . -1) (undo-tree-id11770 . -1) (undo-tree-id11771 . -1) (undo-tree-id11772 . -1) (undo-tree-id11773 . -1) (undo-tree-id11774 . -1) (undo-tree-id11775 . -1) (undo-tree-id11776 . -1) (undo-tree-id11777 . -1) (undo-tree-id11778 . -1) (undo-tree-id11779 . -1) (undo-tree-id11780 . -1) (undo-tree-id11781 . -1) (undo-tree-id11782 . -1) (undo-tree-id11783 . -1) (undo-tree-id11784 . -1) 7424 (7419 . 7424) (t 25747 34203 734945 679000)) nil (25747 34232 607061 240000) 0 nil])
([nil nil ((7569 . 7578) (t 25747 34232 615312 112000)) nil (25747 34243 290525 473000) 0 nil])
([nil nil ((8203 . 8213) (8182 . 8203) (8180 . 8181) (8180 . 8182) (8177 . 8180) (t 25747 34243 298774 111000) 8167) nil (25747 34260 403538 674000) 0 nil])
([nil nil ((#("parameter " 0 10 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7906) (undo-tree-id11785 . -9) (undo-tree-id11786 . -1) (undo-tree-id11787 . -2) (undo-tree-id11788 . -1) (undo-tree-id11789 . -1) (undo-tree-id11790 . -1) (undo-tree-id11791 . -1) (undo-tree-id11792 . -1) (undo-tree-id11793 . -1) (undo-tree-id11794 . -1) (undo-tree-id11795 . -1) (undo-tree-id11796 . -1) (undo-tree-id11797 . -1) (undo-tree-id11798 . -1) (undo-tree-id11799 . -1) (undo-tree-id11800 . -1) (undo-tree-id11801 . -1) (undo-tree-id11802 . -1) (undo-tree-id11803 . -1) (undo-tree-id11804 . -1) (undo-tree-id11805 . -1) (undo-tree-id11806 . -1) (undo-tree-id11807 . -1) (undo-tree-id11808 . -1) (undo-tree-id11809 . -1) (undo-tree-id11810 . -1) (undo-tree-id11811 . -1) (undo-tree-id11812 . -1) (undo-tree-id11813 . -1) (undo-tree-id11814 . -1) (undo-tree-id11815 . -1) (undo-tree-id11816 . -1) (undo-tree-id11817 . -1) (undo-tree-id11818 . -2) (undo-tree-id11819 . -10) (t 25747 34260 412306 95000)) nil (25747 34277 471256 919000) 0 nil])
([nil nil ((8368 . 8384) (#("g" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8368) (undo-tree-id12170 . -1) (#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8369) (undo-tree-id12171 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8370) (undo-tree-id12172 . -1) (#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8371) (undo-tree-id12173 . -1) 8372 (8358 . 8372) (8355 . 8358) (#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8355) (undo-tree-id12174 . -1) (#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8356) (undo-tree-id12175 . -1) (#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8357) (undo-tree-id12176 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8358) (undo-tree-id12177 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8359) (undo-tree-id12178 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8360) (undo-tree-id12179 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8361) (undo-tree-id12180 . -1) (#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8362) (undo-tree-id12181 . -1) 8363 (#("a" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8363) (undo-tree-id12182 . -1) (#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8364) (undo-tree-id12183 . -1) (#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8365) (undo-tree-id12184 . -1) (#("h" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8366) (undo-tree-id12185 . -1) (#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8367) (undo-tree-id12186 . -1) (#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8368) (undo-tree-id12187 . -1) (#("g" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8369) (undo-tree-id12188 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8370) (undo-tree-id12189 . -1) (#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8371) (undo-tree-id12190 . -1) (#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8372) (undo-tree-id12191 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8373) (undo-tree-id12192 . -1) (#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8374) (undo-tree-id12193 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8375) (undo-tree-id12194 . -1) (#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8376) (undo-tree-id12195 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8377) (undo-tree-id12196 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8378) (undo-tree-id12197 . -1) (#("f" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8379) (undo-tree-id12198 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8380) (undo-tree-id12199 . -1) (#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8381) (undo-tree-id12200 . -1) (#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8382) (undo-tree-id12201 . -1) (#("d" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8383) (undo-tree-id12202 . -1) 8384 (8383 . 8384) (8362 . 8383) (#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8362) (undo-tree-id12203 . -1) (#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8363) (undo-tree-id12204 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8364) (undo-tree-id12205 . -1) (#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8365) (undo-tree-id12206 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8366) (undo-tree-id12207 . -1) (#("w" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8367) (undo-tree-id12208 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8368) (undo-tree-id12209 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8369) (undo-tree-id12210 . -1) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8370) (undo-tree-id12211 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8371) (undo-tree-id12212 . -1) 8372 (t 25747 34277 479161 990000)) nil (25747 34347 46161 948000) 0 nil])
([nil nil ((8452 . 8466) (#("i" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8452) (undo-tree-id12154 . -1) (#("s" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8453) (undo-tree-id12155 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8454) (undo-tree-id12156 . -1) (#("n" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8455) (undo-tree-id12157 . -1) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8456) (undo-tree-id12158 . -1) (#("t" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8457) (undo-tree-id12159 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8458) (undo-tree-id12160 . -1) (#("a" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8459) (undo-tree-id12161 . -1) (#("n" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8460) (undo-tree-id12162 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8461) (undo-tree-id12163 . -1) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8462) (undo-tree-id12164 . -1) (#("p" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8463) (undo-tree-id12165 . -1) (#("t" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8464) (undo-tree-id12166 . -1) (#("i" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8465) (undo-tree-id12167 . -1) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8466) (undo-tree-id12168 . -1) (#("n" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8467) (undo-tree-id12169 . -1) 8468) nil (25747 34347 46145 537000) 0 nil])
([nil nil ((8565 . 8569) (8544 . 8565) (8537 . 8544) (#("t" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8537) (undo-tree-id12139 . -1) (#("h" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8538) (undo-tree-id12140 . -1) (#("e" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8539) (undo-tree-id12141 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8540) (undo-tree-id12142 . -1) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8541) (undo-tree-id12143 . -1) (#("n" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8542) (undo-tree-id12144 . -1) (#("l" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8543) (undo-tree-id12145 . -1) (#("y" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8544) (undo-tree-id12146 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8545) (undo-tree-id12147 . -1) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8546) (undo-tree-id12148 . -1) (#("p" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8547) (undo-tree-id12149 . -1) (#("t" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8548) (undo-tree-id12150 . -1) (#("i" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8549) (undo-tree-id12151 . -1) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8550) (undo-tree-id12152 . -1) (#("n" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8551) (undo-tree-id12153 . -1) 8552) nil (25747 34347 46138 965000) 0 nil])
([nil nil ((8562 . 8564) (8541 . 8562) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8541) (undo-tree-id12002 . -1) (undo-tree-id12003 . -1) (undo-tree-id12004 . -1) (undo-tree-id12005 . -1) (undo-tree-id12006 . -1) (undo-tree-id12007 . -1) (undo-tree-id12008 . -1) (undo-tree-id12009 . -1) (undo-tree-id12010 . -1) (undo-tree-id12011 . -1) (undo-tree-id12012 . -1) (undo-tree-id12013 . -1) (undo-tree-id12014 . -1) (undo-tree-id12015 . -1) (undo-tree-id12016 . -1) (undo-tree-id12017 . -1) (undo-tree-id12018 . -1) (undo-tree-id12019 . -1) (undo-tree-id12020 . -1) (undo-tree-id12021 . -1) (undo-tree-id12022 . -1) (undo-tree-id12023 . -1) (undo-tree-id12024 . -1) (undo-tree-id12025 . -1) (undo-tree-id12026 . -1) (undo-tree-id12027 . -1) (undo-tree-id12028 . -1) (undo-tree-id12029 . -1) (undo-tree-id12030 . -1) (undo-tree-id12031 . -1) (undo-tree-id12032 . -1) (undo-tree-id12033 . -1) (undo-tree-id12034 . -1) (undo-tree-id12035 . -1) (undo-tree-id12036 . -1) (undo-tree-id12037 . -1) (undo-tree-id12038 . -1) (undo-tree-id12039 . -1) (undo-tree-id12040 . -1) (undo-tree-id12041 . -1) (undo-tree-id12042 . -1) (undo-tree-id12043 . -1) (undo-tree-id12044 . -1) (undo-tree-id12045 . -1) (undo-tree-id12046 . -1) (undo-tree-id12047 . -1) (undo-tree-id12048 . -1) (undo-tree-id12049 . -1) (undo-tree-id12050 . -1) (undo-tree-id12051 . -1) (undo-tree-id12052 . -1) (undo-tree-id12053 . -1) (undo-tree-id12054 . -1) (undo-tree-id12055 . -1) (undo-tree-id12056 . -1) (undo-tree-id12057 . -1) (undo-tree-id12058 . -1) (undo-tree-id12059 . -1) (undo-tree-id12060 . -1) (undo-tree-id12061 . -1) (undo-tree-id12062 . -1) (undo-tree-id12063 . -1) (undo-tree-id12064 . -1) (undo-tree-id12065 . -1) (undo-tree-id12066 . -1) (undo-tree-id12067 . -1) (undo-tree-id12068 . -1) (undo-tree-id12069 . -1) (undo-tree-id12070 . -1) (undo-tree-id12071 . -1) (undo-tree-id12072 . -1) (undo-tree-id12073 . -1) (undo-tree-id12074 . -1) (undo-tree-id12075 . -1) (undo-tree-id12076 . -1) (undo-tree-id12077 . -1) (undo-tree-id12078 . -1) (#("n" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8542) (undo-tree-id12079 . -1) (undo-tree-id12080 . -1) (undo-tree-id12081 . -1) (undo-tree-id12082 . -1) (undo-tree-id12083 . -1) (undo-tree-id12084 . -1) (undo-tree-id12085 . -1) (undo-tree-id12086 . -1) (undo-tree-id12087 . -1) (undo-tree-id12088 . -1) (undo-tree-id12089 . -1) (undo-tree-id12090 . -1) (undo-tree-id12091 . -1) (undo-tree-id12092 . -1) (undo-tree-id12093 . -1) (undo-tree-id12094 . -1) (undo-tree-id12095 . -1) (undo-tree-id12096 . -1) (undo-tree-id12097 . -1) (undo-tree-id12098 . -1) (undo-tree-id12099 . -1) (undo-tree-id12100 . -1) (undo-tree-id12101 . -1) (undo-tree-id12102 . -1) (undo-tree-id12103 . -1) (undo-tree-id12104 . -1) (undo-tree-id12105 . -1) (undo-tree-id12106 . -1) (undo-tree-id12107 . -1) (undo-tree-id12108 . -1) (undo-tree-id12109 . -1) (undo-tree-id12110 . -1) (undo-tree-id12111 . -1) (#("l" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8543) (undo-tree-id12112 . -1) (undo-tree-id12113 . -1) (#("y" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8544) (undo-tree-id12114 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8545) (undo-tree-id12115 . -1) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8546) (undo-tree-id12116 . -1) (#("p" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8547) (undo-tree-id12117 . -1) 8548 (#("t" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8548) (undo-tree-id12118 . -1) (#("i" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8549) (undo-tree-id12119 . -1) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8550) (undo-tree-id12120 . -1) (#("n" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8551) (undo-tree-id12121 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8552) (undo-tree-id12122 . -1) (#("t" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8553) (undo-tree-id12123 . -1) (#("h" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8554) (undo-tree-id12124 . -1) (#("a" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8555) (undo-tree-id12125 . -1) (#("t" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8556) (undo-tree-id12126 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8557) (undo-tree-id12127 . -1) (#("c" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8558) (undo-tree-id12128 . -1) (#("a" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8559) (undo-tree-id12129 . -1) (#("n" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8560) (undo-tree-id12130 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8561) (undo-tree-id12131 . -1) (#("b" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8562) (undo-tree-id12132 . -1) (#("e" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8563) (undo-tree-id12133 . -1) (#(" " 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8564) (undo-tree-id12134 . -1) (#("u" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8565) (undo-tree-id12135 . -1) (#("s" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8566) (undo-tree-id12136 . -1) (#("e" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8567) (undo-tree-id12137 . -1) (#("d" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8568) (undo-tree-id12138 . -1) 8569) nil (25747 34347 46130 639000) 0 nil])
([nil nil ((8585 . 8590) (8581 . 8585) (#("r" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8581) (undo-tree-id11840 . -1) (undo-tree-id11841 . -1) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) (undo-tree-id11844 . -1) (undo-tree-id11845 . -1) (undo-tree-id11846 . -1) (undo-tree-id11847 . -1) (undo-tree-id11848 . -1) (undo-tree-id11849 . -1) (undo-tree-id11850 . -1) (undo-tree-id11851 . -1) (undo-tree-id11852 . -1) (undo-tree-id11853 . -1) (undo-tree-id11854 . -1) (undo-tree-id11855 . -1) (undo-tree-id11856 . -1) (undo-tree-id11857 . -1) (undo-tree-id11858 . -1) (undo-tree-id11859 . -1) (undo-tree-id11860 . -1) (undo-tree-id11861 . -1) (undo-tree-id11862 . -1) (undo-tree-id11863 . -1) (undo-tree-id11864 . -1) (undo-tree-id11865 . -1) (undo-tree-id11866 . -1) (undo-tree-id11867 . -1) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (undo-tree-id11870 . -1) (undo-tree-id11871 . -1) (undo-tree-id11872 . -1) (undo-tree-id11873 . -1) (undo-tree-id11874 . -1) (undo-tree-id11875 . -1) (undo-tree-id11876 . -1) (undo-tree-id11877 . -1) (undo-tree-id11878 . -1) (undo-tree-id11879 . -1) (undo-tree-id11880 . -1) (undo-tree-id11881 . -1) (undo-tree-id11882 . -1) (undo-tree-id11883 . -1) (undo-tree-id11884 . -1) (undo-tree-id11885 . -1) (undo-tree-id11886 . -1) (undo-tree-id11887 . -1) (undo-tree-id11888 . -1) (undo-tree-id11889 . -1) (undo-tree-id11890 . -1) (undo-tree-id11891 . -1) (undo-tree-id11892 . -1) (undo-tree-id11893 . -1) (undo-tree-id11894 . -1) (undo-tree-id11895 . -1) (undo-tree-id11896 . -1) (undo-tree-id11897 . -1) (undo-tree-id11898 . -1) (undo-tree-id11899 . -1) (undo-tree-id11900 . -1) (undo-tree-id11901 . -1) (undo-tree-id11902 . -1) (undo-tree-id11903 . -1) (undo-tree-id11904 . -1) (undo-tree-id11905 . -1) (undo-tree-id11906 . -1) (undo-tree-id11907 . -1) (undo-tree-id11908 . -1) (undo-tree-id11909 . -1) (undo-tree-id11910 . -1) (undo-tree-id11911 . -1) (undo-tree-id11912 . -1) (undo-tree-id11913 . -1) (undo-tree-id11914 . -1) (undo-tree-id11915 . -1) (undo-tree-id11916 . -1) (undo-tree-id11917 . -1) (undo-tree-id11918 . -1) (undo-tree-id11919 . -1) (undo-tree-id11920 . -1) (undo-tree-id11921 . -1) (undo-tree-id11922 . -1) (undo-tree-id11923 . -1) (undo-tree-id11924 . -1) (undo-tree-id11925 . -1) (undo-tree-id11926 . -1) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (#("a" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8582) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) (undo-tree-id11935 . -1) (undo-tree-id11936 . -1) (undo-tree-id11937 . -1) (undo-tree-id11938 . -1) (undo-tree-id11939 . -1) (undo-tree-id11940 . -1) (undo-tree-id11941 . -1) (undo-tree-id11942 . -1) (undo-tree-id11943 . -1) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (undo-tree-id11950 . -1) (undo-tree-id11951 . -1) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (undo-tree-id11954 . -1) (undo-tree-id11955 . -1) (undo-tree-id11956 . -1) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (undo-tree-id11959 . -1) (undo-tree-id11960 . -1) (undo-tree-id11961 . -1) (undo-tree-id11962 . -1) (undo-tree-id11963 . -1) 8583 (8577 . 8583) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8577) (undo-tree-id11964 . -1) (undo-tree-id11965 . -1) (undo-tree-id11966 . -1) (undo-tree-id11967 . -1) (undo-tree-id11968 . -1) (undo-tree-id11969 . -1) (undo-tree-id11970 . -1) (undo-tree-id11971 . -1) (undo-tree-id11972 . -1) (undo-tree-id11973 . -1) (undo-tree-id11974 . -1) (undo-tree-id11975 . -1) (undo-tree-id11976 . -1) (undo-tree-id11977 . -1) (undo-tree-id11978 . -1) (undo-tree-id11979 . -1) (undo-tree-id11980 . -1) (undo-tree-id11981 . -1) (undo-tree-id11982 . -1) (undo-tree-id11983 . -1) (undo-tree-id11984 . -1) (undo-tree-id11985 . -1) (undo-tree-id11986 . -1) (undo-tree-id11987 . -1) (undo-tree-id11988 . -1) (undo-tree-id11989 . -1) (undo-tree-id11990 . -1) (undo-tree-id11991 . -1) (undo-tree-id11992 . -1) (undo-tree-id11993 . -1) (undo-tree-id11994 . -1) (undo-tree-id11995 . -1) 8578 (8558 . 8578) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8558) (undo-tree-id11996 . -1) (#("p" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8559) (undo-tree-id11997 . -1) (#("t" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8560) (undo-tree-id11998 . -1) (#("i" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8561) (undo-tree-id11999 . -1) (#("o" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8562) (undo-tree-id12000 . -1) (#("n" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8563) (undo-tree-id12001 . -1) 8564) nil (25747 34347 46086 175000) 0 nil])
([nil nil ((8684 . 8702) (#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8684) (undo-tree-id11820 . -1) (undo-tree-id11821 . -1) (undo-tree-id11822 . -1) (undo-tree-id11823 . -1) (undo-tree-id11824 . -1) (undo-tree-id11825 . -1) (undo-tree-id11826 . -1) (undo-tree-id11827 . -1) (undo-tree-id11828 . -1) (undo-tree-id11829 . -1) (undo-tree-id11830 . -1) (undo-tree-id11831 . -1) (undo-tree-id11832 . -1) (undo-tree-id11833 . -1) (undo-tree-id11834 . -1) (undo-tree-id11835 . -1) (undo-tree-id11836 . -1) (undo-tree-id11837 . -1) (#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -8685) (undo-tree-id11838 . -1) (undo-tree-id11839 . -1) 8686) nil (25747 34347 46024 960000) 0 nil])
([nil nil ((9490 . 9499) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9490) (undo-tree-id12213 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9491) (undo-tree-id12214 . -1) 9492 (9473 . 9492) (#("j" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9473) (undo-tree-id12215 . -1) 9474 (9473 . 9474) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9473) (undo-tree-id12216 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9474) (undo-tree-id12217 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9475) (undo-tree-id12218 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9476) (undo-tree-id12219 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9477) (undo-tree-id12220 . -1) (#("c" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9478) (undo-tree-id12221 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9479) (undo-tree-id12222 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9480) (undo-tree-id12223 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9481) (undo-tree-id12224 . -1) (#("." 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9482) (undo-tree-id12225 . -1) 9483 (t 25747 34347 56514 190000)) nil (25747 34394 112002 155000) 0 nil])
([nil nil ((10131 . 10150) (t 25747 34394 123572 871000)) nil (25747 34416 892002 24000) 0 nil])
([nil nil ((10108 . 10109) 9983) nil (25747 34416 891997 535000) 0 nil])
([nil nil ((9992 . 9993) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -9992) (undo-tree-id12226 . -1) (undo-tree-id12227 . -1) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) (undo-tree-id12230 . -1) (undo-tree-id12231 . -1) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) (undo-tree-id12234 . -1) (undo-tree-id12235 . -1) (undo-tree-id12236 . -1) (undo-tree-id12237 . -1) (undo-tree-id12238 . -1) (undo-tree-id12239 . -1) (undo-tree-id12240 . -1) (undo-tree-id12241 . -1) (undo-tree-id12242 . -1) (undo-tree-id12243 . -1) (undo-tree-id12244 . -1) (undo-tree-id12245 . -1) (undo-tree-id12246 . -1) (undo-tree-id12247 . -1) (undo-tree-id12248 . -1) (undo-tree-id12249 . -1) (undo-tree-id12250 . -1) (undo-tree-id12251 . -1) (undo-tree-id12252 . -1) (undo-tree-id12253 . -1) (undo-tree-id12254 . -1) (undo-tree-id12255 . -1) (undo-tree-id12256 . -1) (undo-tree-id12257 . -1) (undo-tree-id12258 . -1) (undo-tree-id12259 . -1) (undo-tree-id12260 . -1) (undo-tree-id12261 . -1) (undo-tree-id12262 . -1) (undo-tree-id12263 . -1) (undo-tree-id12264 . -1) (undo-tree-id12265 . -1) (undo-tree-id12266 . -1) (undo-tree-id12267 . -1) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (undo-tree-id12272 . -1) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) (undo-tree-id12278 . -1) (undo-tree-id12279 . -1) (undo-tree-id12280 . -1) (undo-tree-id12281 . -1) (undo-tree-id12282 . -1) (undo-tree-id12283 . -1) (undo-tree-id12284 . -1) (undo-tree-id12285 . -1) (undo-tree-id12286 . -1) (undo-tree-id12287 . -1) (undo-tree-id12288 . -1) (undo-tree-id12289 . -1) (undo-tree-id12290 . -1) (undo-tree-id12291 . -1) (undo-tree-id12292 . -1) (undo-tree-id12293 . -1) (undo-tree-id12294 . -1) (undo-tree-id12295 . -1) (undo-tree-id12296 . -1) (undo-tree-id12297 . -1) (undo-tree-id12298 . -1) (undo-tree-id12299 . -1) (undo-tree-id12300 . -1) (undo-tree-id12301 . -1) (undo-tree-id12302 . -1) (undo-tree-id12303 . -1) (undo-tree-id12304 . -1) (undo-tree-id12305 . -1) (undo-tree-id12306 . -1) (undo-tree-id12307 . -1) (undo-tree-id12308 . -1) (undo-tree-id12309 . -1) (undo-tree-id12310 . -1) (undo-tree-id12311 . -1) (undo-tree-id12312 . -1) (undo-tree-id12313 . -1) (undo-tree-id12314 . -1) (undo-tree-id12315 . -1) (undo-tree-id12316 . -1) (undo-tree-id12317 . -1) (undo-tree-id12318 . -1) (undo-tree-id12319 . -1) (undo-tree-id12320 . -1) (undo-tree-id12321 . -1) (undo-tree-id12322 . -1) (undo-tree-id12323 . -1) (undo-tree-id12324 . -1) (undo-tree-id12325 . -1) (undo-tree-id12326 . -1) (undo-tree-id12327 . -1) (undo-tree-id12328 . -1) (undo-tree-id12329 . -1) (undo-tree-id12330 . -1) (undo-tree-id12331 . -1) (undo-tree-id12332 . -1) (undo-tree-id12333 . -1) (undo-tree-id12334 . -1) (undo-tree-id12335 . -1) (undo-tree-id12336 . -1) (undo-tree-id12337 . -1) (undo-tree-id12338 . -1) (undo-tree-id12339 . -1) (undo-tree-id12340 . -1) (undo-tree-id12341 . -1) (undo-tree-id12342 . -1) (undo-tree-id12343 . -1) (undo-tree-id12344 . -1) (undo-tree-id12345 . -1) (undo-tree-id12346 . -1) (undo-tree-id12347 . -1) (undo-tree-id12348 . -1) (undo-tree-id12349 . -1) (undo-tree-id12350 . -1) (undo-tree-id12351 . -1) (undo-tree-id12352 . -1) (undo-tree-id12353 . -1) (undo-tree-id12354 . -1) (undo-tree-id12355 . -1) (undo-tree-id12356 . -1) (undo-tree-id12357 . -1) (undo-tree-id12358 . -1) (undo-tree-id12359 . -1) (undo-tree-id12360 . -1) (undo-tree-id12361 . -1) (undo-tree-id12362 . -1) (undo-tree-id12363 . -1) (undo-tree-id12364 . -1) (undo-tree-id12365 . -1) (undo-tree-id12366 . -1) (undo-tree-id12367 . -1) (undo-tree-id12368 . -1) (undo-tree-id12369 . -1) (undo-tree-id12370 . -1) (undo-tree-id12371 . -1) (undo-tree-id12372 . -1) (undo-tree-id12373 . -1) (undo-tree-id12374 . -1) (undo-tree-id12375 . -1) (undo-tree-id12376 . -1) (undo-tree-id12377 . -1) (undo-tree-id12378 . -1) (undo-tree-id12379 . -1) (undo-tree-id12380 . -1) (undo-tree-id12381 . -1) (undo-tree-id12382 . -1) (undo-tree-id12383 . -1) (undo-tree-id12384 . -1) (undo-tree-id12385 . -1) (undo-tree-id12386 . -1) (undo-tree-id12387 . -1) (undo-tree-id12388 . -1) (undo-tree-id12389 . -1) (undo-tree-id12390 . -1) (undo-tree-id12391 . -1) (undo-tree-id12392 . -1) (undo-tree-id12393 . -1) (undo-tree-id12394 . -1) (undo-tree-id12395 . -1) (undo-tree-id12396 . -1) (undo-tree-id12397 . -1) (undo-tree-id12398 . -1) (undo-tree-id12399 . -1) (undo-tree-id12400 . -1) (undo-tree-id12401 . -1) (undo-tree-id12402 . -1) (undo-tree-id12403 . -1) (undo-tree-id12404 . -1) (undo-tree-id12405 . -1) (undo-tree-id12406 . -1) (undo-tree-id12407 . -1) (undo-tree-id12408 . -1) (undo-tree-id12409 . -1) (undo-tree-id12410 . -1) (undo-tree-id12411 . -1) (undo-tree-id12412 . -1) (undo-tree-id12413 . -1) (undo-tree-id12414 . -1) (undo-tree-id12415 . -1) (undo-tree-id12416 . -1) (undo-tree-id12417 . -1) (undo-tree-id12418 . -1) (undo-tree-id12419 . -1) (undo-tree-id12420 . -1) (undo-tree-id12421 . -1) (undo-tree-id12422 . -1) (undo-tree-id12423 . -1) (undo-tree-id12424 . -1) (undo-tree-id12425 . -1) (undo-tree-id12426 . -1) (undo-tree-id12427 . -1) (undo-tree-id12428 . -1) (undo-tree-id12429 . -1) (undo-tree-id12430 . -1) (undo-tree-id12431 . -1) (undo-tree-id12432 . -1) (undo-tree-id12433 . -1) (undo-tree-id12434 . -1) (undo-tree-id12435 . -1) (undo-tree-id12436 . -1) (undo-tree-id12437 . -1) (undo-tree-id12438 . -1) (undo-tree-id12439 . -1) (undo-tree-id12440 . -1) (undo-tree-id12441 . -1) (undo-tree-id12442 . -1) (undo-tree-id12443 . -1) (undo-tree-id12444 . -1) (undo-tree-id12445 . -1) (undo-tree-id12446 . -1) (undo-tree-id12447 . -1) (undo-tree-id12448 . -1) (undo-tree-id12449 . -1) (undo-tree-id12450 . -1) (undo-tree-id12451 . -1) (undo-tree-id12452 . -1) (undo-tree-id12453 . -1) (undo-tree-id12454 . -1) (undo-tree-id12455 . -1) (undo-tree-id12456 . -1) (undo-tree-id12457 . -1) (undo-tree-id12458 . -1) (undo-tree-id12459 . -1) (undo-tree-id12460 . -1) (undo-tree-id12461 . -1) (undo-tree-id12462 . -1) (undo-tree-id12463 . -1) (undo-tree-id12464 . -1) (undo-tree-id12465 . -1) (undo-tree-id12466 . -1) (undo-tree-id12467 . -1) (undo-tree-id12468 . -1) (undo-tree-id12469 . -1) (undo-tree-id12470 . -1) (undo-tree-id12471 . -1) (undo-tree-id12472 . -1) (undo-tree-id12473 . -1) (undo-tree-id12474 . -1) (undo-tree-id12475 . -1) (undo-tree-id12476 . -1) (undo-tree-id12477 . -1) (undo-tree-id12478 . -1) (undo-tree-id12479 . -1) (undo-tree-id12480 . -1) (undo-tree-id12481 . -1) (undo-tree-id12482 . -1) (undo-tree-id12483 . -1) (undo-tree-id12484 . -1) (undo-tree-id12485 . -1) (undo-tree-id12486 . -1) (undo-tree-id12487 . -1) (undo-tree-id12488 . -1) (undo-tree-id12489 . -1) (undo-tree-id12490 . -1) (undo-tree-id12491 . -1) (undo-tree-id12492 . -1) (undo-tree-id12493 . -1) (undo-tree-id12494 . -1) (undo-tree-id12495 . -1) (undo-tree-id12496 . -1) (undo-tree-id12497 . -1) (undo-tree-id12498 . -1) (undo-tree-id12499 . -1) (undo-tree-id12500 . -1) (undo-tree-id12501 . -1) (undo-tree-id12502 . -1) (undo-tree-id12503 . -1) (undo-tree-id12504 . -1) (undo-tree-id12505 . -1) (undo-tree-id12506 . -1) (undo-tree-id12507 . -1) (undo-tree-id12508 . -1) (undo-tree-id12509 . -1) (undo-tree-id12510 . -1) (undo-tree-id12511 . -1) (undo-tree-id12512 . -1) (undo-tree-id12513 . -1) (undo-tree-id12514 . -1) (undo-tree-id12515 . -1) (undo-tree-id12516 . -1) (undo-tree-id12517 . -1) (undo-tree-id12518 . -1) (undo-tree-id12519 . -1) (undo-tree-id12520 . -1) (undo-tree-id12521 . -1) (undo-tree-id12522 . -1) (undo-tree-id12523 . -1) (undo-tree-id12524 . -1) (undo-tree-id12525 . -1) (undo-tree-id12526 . -1) (undo-tree-id12527 . -1) (undo-tree-id12528 . -1) (undo-tree-id12529 . -1) (undo-tree-id12530 . -1) (undo-tree-id12531 . -1) (undo-tree-id12532 . -1) (undo-tree-id12533 . -1) (undo-tree-id12534 . -1) (undo-tree-id12535 . -1) (undo-tree-id12536 . -1) (undo-tree-id12537 . -1) (undo-tree-id12538 . -1) (undo-tree-id12539 . -1) (undo-tree-id12540 . -1) (undo-tree-id12541 . -1) (undo-tree-id12542 . -1) (undo-tree-id12543 . -1) (undo-tree-id12544 . -1) (undo-tree-id12545 . -1) (undo-tree-id12546 . -1) (undo-tree-id12547 . -1) (undo-tree-id12548 . -1) (undo-tree-id12549 . -1) (undo-tree-id12550 . -1) (undo-tree-id12551 . -1) (undo-tree-id12552 . -1) (undo-tree-id12553 . -1) (undo-tree-id12554 . -1) (undo-tree-id12555 . -1) (undo-tree-id12556 . -1) (undo-tree-id12557 . -1) (undo-tree-id12558 . -1) (undo-tree-id12559 . -1) (undo-tree-id12560 . -1) (undo-tree-id12561 . -1) (undo-tree-id12562 . -1) (undo-tree-id12563 . -1) (undo-tree-id12564 . -1) (undo-tree-id12565 . -1) (undo-tree-id12566 . -1) (undo-tree-id12567 . -1) (undo-tree-id12568 . -1) (undo-tree-id12569 . -1) (undo-tree-id12570 . -1) (undo-tree-id12571 . -1) (undo-tree-id12572 . -1) (undo-tree-id12573 . -1) (undo-tree-id12574 . -1) (undo-tree-id12575 . -1) (undo-tree-id12576 . -1) (undo-tree-id12577 . -1) (undo-tree-id12578 . -1) (undo-tree-id12579 . -1) (undo-tree-id12580 . -1) (undo-tree-id12581 . -1) (undo-tree-id12582 . -1) (undo-tree-id12583 . -1) (undo-tree-id12584 . -1) (undo-tree-id12585 . -1) (undo-tree-id12586 . -1) (undo-tree-id12587 . -1) (undo-tree-id12588 . -1) (undo-tree-id12589 . -1) (undo-tree-id12590 . -1) (undo-tree-id12591 . -1) (undo-tree-id12592 . -1) (undo-tree-id12593 . -1) (undo-tree-id12594 . -1) (undo-tree-id12595 . -1) (undo-tree-id12596 . -1) (undo-tree-id12597 . -1) (undo-tree-id12598 . -1) (undo-tree-id12599 . -1) (undo-tree-id12600 . -1) (undo-tree-id12601 . -1) (undo-tree-id12602 . -1) (undo-tree-id12603 . -1) (undo-tree-id12604 . -1) (undo-tree-id12605 . -1) (undo-tree-id12606 . -1) (undo-tree-id12607 . -1) (undo-tree-id12608 . -1) (undo-tree-id12609 . -1) (undo-tree-id12610 . -1) (undo-tree-id12611 . -1) (undo-tree-id12612 . -1) (undo-tree-id12613 . -1) (undo-tree-id12614 . -1) (undo-tree-id12615 . -1) (undo-tree-id12616 . -1) (undo-tree-id12617 . -1) (undo-tree-id12618 . -1) (undo-tree-id12619 . -1) (undo-tree-id12620 . -1) (undo-tree-id12621 . -1) (undo-tree-id12622 . -1) (undo-tree-id12623 . -1) (undo-tree-id12624 . -1) (undo-tree-id12625 . -1) (undo-tree-id12626 . -1) (undo-tree-id12627 . -1) (undo-tree-id12628 . -1) (undo-tree-id12629 . -1) (undo-tree-id12630 . -1) (undo-tree-id12631 . -1) (undo-tree-id12632 . -1) (undo-tree-id12633 . -1) (undo-tree-id12634 . -1) (undo-tree-id12635 . -1) (undo-tree-id12636 . -1) (undo-tree-id12637 . -1) (undo-tree-id12638 . -1) (undo-tree-id12639 . -1) (undo-tree-id12640 . -1) (undo-tree-id12641 . -1) (undo-tree-id12642 . -1) (undo-tree-id12643 . -1) (undo-tree-id12644 . -1) (undo-tree-id12645 . -1) (undo-tree-id12646 . -1) (undo-tree-id12647 . -1) (undo-tree-id12648 . -1) (undo-tree-id12649 . -1) (undo-tree-id12650 . -1) (undo-tree-id12651 . -1) (undo-tree-id12652 . -1) (undo-tree-id12653 . -1) (undo-tree-id12654 . -1) (undo-tree-id12655 . -1) (undo-tree-id12656 . -1) (undo-tree-id12657 . -1) (undo-tree-id12658 . -1) (undo-tree-id12659 . -1) (undo-tree-id12660 . -1) (undo-tree-id12661 . -1) (undo-tree-id12662 . -1) (undo-tree-id12663 . -1) (undo-tree-id12664 . -1) (undo-tree-id12665 . -1) (undo-tree-id12666 . -1) (undo-tree-id12667 . -1) (undo-tree-id12668 . -1) (undo-tree-id12669 . -1) (undo-tree-id12670 . -1) (undo-tree-id12671 . -1) (undo-tree-id12672 . -1) (undo-tree-id12673 . -1) (undo-tree-id12674 . -1) (undo-tree-id12675 . -1) (undo-tree-id12676 . -1) (undo-tree-id12677 . -1) (undo-tree-id12678 . -1) (undo-tree-id12679 . -1) (undo-tree-id12680 . -1) (undo-tree-id12681 . -1) (undo-tree-id12682 . -1) (undo-tree-id12683 . -1) (undo-tree-id12684 . -1) (undo-tree-id12685 . -1) (undo-tree-id12686 . -1) (undo-tree-id12687 . -1) (undo-tree-id12688 . -1) (undo-tree-id12689 . -1) (undo-tree-id12690 . -1) (undo-tree-id12691 . -1) (undo-tree-id12692 . -1) (undo-tree-id12693 . -1) (undo-tree-id12694 . -1) (undo-tree-id12695 . -1) (undo-tree-id12696 . -1) (undo-tree-id12697 . -1) (undo-tree-id12698 . -1) (undo-tree-id12699 . -1) (undo-tree-id12700 . -1) (undo-tree-id12701 . -1) (undo-tree-id12702 . -1) (undo-tree-id12703 . -1) (undo-tree-id12704 . -1) (undo-tree-id12705 . -1) (undo-tree-id12706 . -1) (undo-tree-id12707 . -1) (undo-tree-id12708 . -1) (undo-tree-id12709 . -1) (undo-tree-id12710 . -1) (undo-tree-id12711 . -1) (undo-tree-id12712 . -1) (undo-tree-id12713 . -1) (undo-tree-id12714 . -1) (undo-tree-id12715 . -1) (undo-tree-id12716 . -1) (undo-tree-id12717 . -1) (undo-tree-id12718 . -1) (undo-tree-id12719 . -1) (undo-tree-id12720 . -1) (undo-tree-id12721 . -1) (undo-tree-id12722 . -1) (undo-tree-id12723 . -1) (undo-tree-id12724 . -1) (undo-tree-id12725 . -1) (undo-tree-id12726 . -1) (undo-tree-id12727 . -1) (undo-tree-id12728 . -1) (undo-tree-id12729 . -1) (undo-tree-id12730 . -1) (undo-tree-id12731 . -1) (undo-tree-id12732 . -1) (undo-tree-id12733 . -1) (undo-tree-id12734 . -1) (undo-tree-id12735 . -1) (undo-tree-id12736 . -1) (undo-tree-id12737 . -1) (undo-tree-id12738 . -1) (undo-tree-id12739 . -1) (undo-tree-id12740 . -1) (undo-tree-id12741 . -1) (undo-tree-id12742 . -1) (undo-tree-id12743 . -1) (undo-tree-id12744 . -1) (undo-tree-id12745 . -1) (undo-tree-id12746 . -1) (undo-tree-id12747 . -1) (undo-tree-id12748 . -1) (undo-tree-id12749 . -1) (undo-tree-id12750 . -1) (undo-tree-id12751 . -1) (undo-tree-id12752 . -1) (undo-tree-id12753 . -1) (undo-tree-id12754 . -1) (undo-tree-id12755 . -1) (undo-tree-id12756 . -1) (undo-tree-id12757 . -1) (undo-tree-id12758 . -1) (undo-tree-id12759 . -1) (undo-tree-id12760 . -1) (undo-tree-id12761 . -1) (undo-tree-id12762 . -1) (undo-tree-id12763 . -1) (undo-tree-id12764 . -1) (undo-tree-id12765 . -1) (undo-tree-id12766 . -1) (undo-tree-id12767 . -1) (undo-tree-id12768 . -1) (undo-tree-id12769 . -1) (undo-tree-id12770 . -1) (undo-tree-id12771 . -1) (undo-tree-id12772 . -1) (undo-tree-id12773 . -1) (undo-tree-id12774 . -1) (undo-tree-id12775 . -1) 9993 (t 25747 34416 903743 647000)) nil (25747 34842 679273 360000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3442 . 3443) (nil fontified nil 3401 . 3443) (nil fontified nil 3386 . 3401) (nil fontified nil 3345 . 3386) (nil fontified nil 3317 . 3345) (nil fontified nil 3295 . 3317) (nil fontified nil 3261 . 3295) (nil fontified nil 3232 . 3261) (nil fontified nil 3204 . 3232) (nil fontified nil 3169 . 3204) (nil fontified nil 3138 . 3169) (nil fontified nil 3106 . 3138) (nil fontified nil 3074 . 3106) (nil fontified nil 3011 . 3074) (nil fontified nil 2974 . 3011) (nil fontified nil 2953 . 2974) (nil fontified nil 2858 . 2953) (nil fontified nil 2841 . 2858) (nil fontified nil 2802 . 2841) (nil fontified nil 2783 . 2802) (nil fontified nil 2763 . 2783) (nil fontified nil 2739 . 2763) (nil fontified nil 2723 . 2739) (nil fontified nil 2690 . 2723) (nil fontified nil 2675 . 2690) (nil fontified nil 2643 . 2675) (nil fontified nil 2620 . 2643) (nil fontified nil 2587 . 2620) (nil fontified nil 2552 . 2587) (2552 . 3443) (#("(define-public guile-parameterized
    (package-with-parameters
     (inherit guile)
     (name \"guile-parameterized\")
     (properties
      `(,(parameter-spec-property
          (local (list
                  (package-parameter
                   (name \"git\")
                   (transforms
                    (build-system/transform-match
                     (_ -> ; matches any build system
                        (with-git-url . \"guile-parameterized=https://git.savannah.gnu.org/git/guile.git\"))))))))
        (defaults '(git))
        (use-transforms '((git . #t))))))
" 0 1 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 1 14 (face (font-lock-keyword-face org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 14 15 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 15 34 (face (font-lock-function-name-face org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 34 35 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 35 39 (face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 39 40 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 40 64 (face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 64 69 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 69 70 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 70 83 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 83 84 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 84 85 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 85 90 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 90 91 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 91 96 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 96 117 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 117 118 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 118 119 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 119 124 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 124 125 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 125 136 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 136 143 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 143 144 (face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 144 145 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 145 146 (face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 146 170 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 170 180 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 180 181 (face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 181 187 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 187 188 (face (rainbow-delimiters-depth-7-face org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 188 193 (face (org-block) font-lock-multiline t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 193 211 (face (org-block) font-lock-multiline t wrap-prefix #("                    " 0 2 (face org-indent) 2 20 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 211 212 (face (rainbow-delimiters-depth-8-face org-block) font-lock-multiline t wrap-prefix #("                    " 0 2 (face org-indent) 2 20 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 212 230 (face (org-block) font-lock-multiline t wrap-prefix #("                    " 0 2 (face org-indent) 2 20 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 230 249 (face (org-block) font-lock-multiline t wrap-prefix #("                     " 0 2 (face org-indent) 2 21 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 249 250 (face (rainbow-delimiters-depth-9-face org-block) font-lock-multiline t wrap-prefix #("                     " 0 2 (face org-indent) 2 21 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 250 255 (face (org-block) font-lock-multiline t wrap-prefix #("                     " 0 2 (face org-indent) 2 21 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 255 260 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                     " 0 2 (face org-indent) 2 21 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 260 261 (face (rainbow-delimiters-depth-9-face org-block) font-lock-multiline t wrap-prefix #("                     " 0 2 (face org-indent) 2 21 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 261 262 (face (org-block) font-lock-multiline t wrap-prefix #("                     " 0 2 (face org-indent) 2 21 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 262 281 (face (org-block) font-lock-multiline t wrap-prefix #("                     " 0 2 (face org-indent) 2 21 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 281 282 (face (rainbow-delimiters-depth-9-face org-block) font-lock-multiline t wrap-prefix #("                     " 0 2 (face org-indent) 2 21 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 282 293 (face (org-block) font-lock-multiline t wrap-prefix #("                     " 0 2 (face org-indent) 2 21 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 293 313 (face (org-block) font-lock-multiline t wrap-prefix #("                      " 0 2 (face org-indent) 2 22 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 313 314 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t wrap-prefix #("                      " 0 2 (face org-indent) 2 22 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 314 343 (face (org-block) font-lock-multiline t wrap-prefix #("                      " 0 2 (face org-indent) 2 22 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 343 364 (face (org-block) font-lock-multiline t wrap-prefix #("                       " 0 2 (face org-indent) 2 23 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 364 365 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("                       " 0 2 (face org-indent) 2 23 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 365 370 (face (org-block) font-lock-multiline t wrap-prefix #("                       " 0 2 (face org-indent) 2 23 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 370 372 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t wrap-prefix #("                       " 0 2 (face org-indent) 2 23 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 372 397 (face (font-lock-comment-face org-block) font-lock-multiline t wrap-prefix #("                       " 0 2 (face org-indent) 2 23 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 397 421 (face (org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 421 422 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 422 437 (face (org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 437 458 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 458 499 (face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t htmlize-link (:uri "https://git.savannah.gnu.org/git/guile.git") help-echo "LINK: https://git.savannah.gnu.org/git/guile.git" fontified t) 499 500 (face (font-lock-string-face org-block) font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t htmlize-link (:uri "https://git.savannah.gnu.org/git/guile.git") help-echo "LINK: https://git.savannah.gnu.org/git/guile.git" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 500 501 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 501 502 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 502 503 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 503 504 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 504 505 (face (rainbow-delimiters-depth-9-face org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 505 506 (face (rainbow-delimiters-depth-8-face org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 506 507 (face (rainbow-delimiters-depth-7-face org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 507 508 (face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 508 509 (face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 509 510 (face (org-block) font-lock-multiline t wrap-prefix #("                          " 0 2 (face org-indent) 2 26 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 510 518 (face (org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 518 519 (face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 519 529 (face (org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 529 530 (face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 530 533 (face (org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 533 534 (face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 534 535 (face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 535 536 (face (org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 536 544 (face (org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 544 545 (face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 545 561 (face (org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 561 562 (face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 562 563 (face (rainbow-delimiters-depth-7-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 563 571 (face (org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 571 572 (face (rainbow-delimiters-depth-7-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 572 573 (face (rainbow-delimiters-depth-6-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 573 574 (face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 574 575 (face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 575 576 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 576 577 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 577 578 (face (org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t)) . 2552) (undo-tree-id148 . -577) (undo-tree-id149 . -578) (undo-tree-id150 . -577) (undo-tree-id151 . -577) 3130 (t 25747 34842 689508 719000)) nil (25748 4252 65494 59000) 0 nil])
([nil nil ((3443 . 3456)) nil (25748 4252 65488 198000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3444) (undo-tree-id136 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3445) (undo-tree-id137 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3446) (undo-tree-id138 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3447) (undo-tree-id139 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3448) (undo-tree-id140 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3449) (undo-tree-id141 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3450) (undo-tree-id142 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3451) (undo-tree-id143 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("           " 0 2 (face org-indent) 2 11 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3452) (undo-tree-id144 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3453) (undo-tree-id145 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3454) (undo-tree-id146 . -1) (#(" " 0 1 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("              " 0 2 (face org-indent) 2 14 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3455) (undo-tree-id147 . -1) 3456) nil (25748 4252 65486 725000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6912) (undo-tree-id121 . -1) (#("I" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6913) (undo-tree-id122 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6914) (undo-tree-id123 . -1) 6915 (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6915) (undo-tree-id124 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6916) (undo-tree-id125 . -1) (#("v" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6917) (undo-tree-id126 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6918) (undo-tree-id127 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6919) (undo-tree-id128 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6920) (undo-tree-id129 . -1) 6921 (6913 . 6921) (#("T" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6913) (undo-tree-id130 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6914) (undo-tree-id131 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6915) (undo-tree-id132 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6916) (undo-tree-id133 . -1) 6917 (6913 . 6917) (#("I" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6913) (undo-tree-id134 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6914) (undo-tree-id135 . -1) 6915 (6913 . 6915) (6912 . 6913) 6755) nil (25748 4252 65472 798000) 0 nil])
([nil nil ((#("Here are examples of their usage:
" 0 34 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 7102) (undo-tree-id1 . -32) (undo-tree-id2 . -33) (undo-tree-id3 . -32) (undo-tree-id4 . -32) (undo-tree-id5 . -32) (undo-tree-id6 . -32) (undo-tree-id7 . -32) (undo-tree-id8 . -32) (undo-tree-id9 . -32) (undo-tree-id10 . -32) (undo-tree-id11 . -32) (undo-tree-id12 . -32) (undo-tree-id13 . -32) (undo-tree-id14 . -32) (undo-tree-id15 . -32) (undo-tree-id16 . -32) (undo-tree-id17 . -32) (undo-tree-id18 . -32) (undo-tree-id19 . -32) (undo-tree-id20 . -32) (undo-tree-id21 . -32) (undo-tree-id22 . -32) (undo-tree-id23 . -32) (undo-tree-id24 . -32) (undo-tree-id25 . -32) (undo-tree-id26 . -32) (undo-tree-id27 . -32) (undo-tree-id28 . -32) (undo-tree-id29 . -32) (undo-tree-id30 . -32) (undo-tree-id31 . -32) (undo-tree-id32 . -32) (undo-tree-id33 . -32) (undo-tree-id34 . -32) (undo-tree-id35 . -32) (undo-tree-id36 . -32) (undo-tree-id37 . -32) (undo-tree-id38 . -32) (undo-tree-id39 . -32) (undo-tree-id40 . -32) (undo-tree-id41 . -32) (undo-tree-id42 . -32) (undo-tree-id43 . -32) (undo-tree-id44 . -32) (undo-tree-id45 . -32) (undo-tree-id46 . -32) (undo-tree-id47 . -32) (undo-tree-id48 . -32) (undo-tree-id49 . -32) (undo-tree-id50 . -32) (undo-tree-id51 . -32) (undo-tree-id52 . -32) (undo-tree-id53 . -32) (undo-tree-id54 . -32) (undo-tree-id55 . -32) (undo-tree-id56 . -32) (undo-tree-id57 . -32) (undo-tree-id58 . -32) (undo-tree-id59 . -32) (undo-tree-id60 . -32) (undo-tree-id61 . -32) (undo-tree-id62 . -32) (undo-tree-id63 . -32) (undo-tree-id64 . -32) (undo-tree-id65 . -32) (undo-tree-id66 . -32) (undo-tree-id67 . -32) (undo-tree-id68 . -32) (undo-tree-id69 . -32) (undo-tree-id70 . -32) (undo-tree-id71 . -32) (undo-tree-id72 . -32) (undo-tree-id73 . -32) (undo-tree-id74 . -32) (undo-tree-id75 . -32) (undo-tree-id76 . -32) (undo-tree-id77 . -32) (undo-tree-id78 . -32) (undo-tree-id79 . -32) (undo-tree-id80 . -32) (undo-tree-id81 . -32) (undo-tree-id82 . -32) (undo-tree-id83 . -32) (undo-tree-id84 . -32) (undo-tree-id85 . -32) (undo-tree-id86 . -32) (undo-tree-id87 . -32) (undo-tree-id88 . -32) (undo-tree-id89 . -32) (undo-tree-id90 . -32) (undo-tree-id91 . -32) (undo-tree-id92 . -32) (undo-tree-id93 . -32) (undo-tree-id94 . -32) (undo-tree-id95 . -32) (undo-tree-id96 . -32) (undo-tree-id97 . -32) (undo-tree-id98 . -32) (undo-tree-id99 . -32) (undo-tree-id100 . -32) (undo-tree-id101 . -32) (undo-tree-id102 . -32) (undo-tree-id103 . -32) (undo-tree-id104 . -32) (undo-tree-id105 . -32) (undo-tree-id106 . -32) (undo-tree-id107 . -32) (undo-tree-id108 . -32) (undo-tree-id109 . -32) (undo-tree-id110 . -32) (undo-tree-id111 . -32) (undo-tree-id112 . -32) (undo-tree-id113 . -32) (undo-tree-id114 . -32) (undo-tree-id115 . -32) (undo-tree-id116 . -32) (undo-tree-id117 . -32) (undo-tree-id118 . -32) (undo-tree-id119 . -32) (undo-tree-id120 . -34) 7134) nil (25748 4252 65463 882000) 0 nil])
([nil nil ((7222 . 7229) (7201 . 7222) (7180 . 7201) (7166 . 7180) (7145 . 7166) (7121 . 7122) (7137 . 7144) (7131 . 7137) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -7131) (undo-tree-id0 . -1) 7132 (7123 . 7132) (7102 . 7123) (7101 . 7102) 6953) nil (25748 4252 65389 200000) 0 nil])
([nil nil ((7548 . 7549) (7542 . 7546) (#("parameter" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7542) (undo-tree-id161 . -8) (t 25748 4252 83623 648000)) nil (25748 4280 715791 159000) 0 nil])
([nil nil ((#("  (parameter/if 'git d`o-something)
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 34 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 34 35 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 35 36 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7526) (undo-tree-id158 . -22) (undo-tree-id159 . -35) (undo-tree-id160 . 13) 7548) nil (25748 4280 715790 137000) 0 nil])
([nil nil ((#("  (parameter/if parameter do-something do-something-else)
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 56 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 56 57 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 57 58 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7526) (undo-tree-id155 . -22) (undo-tree-id156 . -57) (undo-tree-id157 . 58) 7548) nil (25748 4280 715786 650000) 0 nil])
([nil nil ((#("  (parameter/if (parameters ...) do-something do-something-else)
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 16 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 16 17 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 17 31 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 31 32 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 32 63 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 63 64 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 64 65 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7526) (undo-tree-id152 . -22) (undo-tree-id153 . -64) (undo-tree-id154 . 65) 7548) nil (25748 4280 716442 905000) 0 nil])
([nil nil ((#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7526) (undo-tree-id176 . -2) 7528 (7525 . 7528) 7512) nil (25748 4318 658585 852000) 0 nil] [nil nil ((nil rear-nonsticky nil 7655 . 7656) (nil fontified nil 7616 . 7656) (nil fontified nil 7601 . 7616) (nil fontified nil 7560 . 7601) (nil fontified nil 7532 . 7560) (nil fontified nil 7513 . 7532) (7513 . 7656) 7512) ((#("(arguments (append
			      (parameter/if 'git
				(list #:make-flags #~'(\"VERBOSE=1\"))
				      '())
			      (package-arguments guile-3.0)))" 0 18 (face org-meta-line font-lock-fontified t fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 18 19 (fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 19 47 (fontified nil wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 47 88 (fontified nil wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 88 103 (fontified nil wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 103 142 (fontified nil wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 142 143 (rear-nonsticky nil fontified nil wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 7513) (undo-tree-id162 . -142) (undo-tree-id163 . -142) (undo-tree-id164 . -142) (undo-tree-id165 . -142) (nil fontified t 7531 . 7532) (nil fontified t 7513 . 7531) (nil fontified t 7532 . 7560) (nil fontified t 7560 . 7601) (nil fontified t 7601 . 7616) (nil rear-nonsticky t 7655 . 7656)) (25748 4280 715771 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7668 . 7669) (nil fontified nil 7629 . 7669) (nil fontified nil 7614 . 7629) (nil fontified nil 7573 . 7614) (nil fontified nil 7545 . 7573) (nil fontified nil 7526 . 7545) (7526 . 7669)) nil (25748 4318 658582 886000) 0 nil])
nil
([nil nil ((7680 . 7684) (7679 . 7680) 7678) nil (25748 4318 658579 830000) 0 nil])
([nil nil ((7539 . 7554) (7538 . 7539) (#("r" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7538) (undo-tree-id166 . -1) (#("a" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7539) (undo-tree-id167 . -1) (#("m" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7540) (undo-tree-id168 . -1) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7541) (undo-tree-id169 . -1) (#("t" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7542) (undo-tree-id170 . -1) (#("e" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7543) (undo-tree-id171 . -1) (#("r" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7544) (undo-tree-id172 . -1) (#(" " 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7545) (undo-tree-id173 . -1) (#("d" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7546) (undo-tree-id174 . -1) 7547 (7529 . 7547) (#("w" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7529) (undo-tree-id175 . -1) 7530 (7526 . 7530) (7527 . 7529) (7546 . 7554) (#("			" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 7546) (7574 . 7584) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 7574) (7615 . 7623) (#("				" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 7615) (7625 . 7627) (7630 . 7638) (#("			" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 7630) 7526 (7525 . 7526) 7510) nil (25748 4318 658575 582000) 0 nil])
([nil nil ((7737 . 7739)) nil (25748 4318 658536 628000) 0 nil])
([nil nil ((#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7924) (undo-tree-id185 . -1) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -7925) (undo-tree-id186 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -7926) (undo-tree-id187 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7927) (undo-tree-id188 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7928) (undo-tree-id189 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7929) (undo-tree-id190 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7930) (undo-tree-id191 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7931) (undo-tree-id192 . -1) (#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7932) (undo-tree-id193 . -1) (#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7933) (undo-tree-id194 . -1) (#("." 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7934) (undo-tree-id195 . -1) 7935 (t 25748 4318 675309 351000)) nil (25748 4355 129906 188000) 0 nil])
([nil nil ((#("#+BEGIN_SRC scheme
" 0 18 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 18 19 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7881) (undo-tree-id183 . -18) (undo-tree-id184 . -17) 7898) nil (25748 4355 129890 558000) 0 nil])
([nil nil ((#("  (parameter/if-all (par) do-something do-something-else)
" 0 2 (src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 20 (src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 20 21 (src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 21 24 (src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 24 25 (src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 25 56 (src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 56 57 (src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 57 58 (src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7881) (undo-tree-id180 . -57) (undo-tree-id181 . 34) (undo-tree-id182 . -17) 7898) nil (25748 4355 129887 582000) 0 nil])
([nil nil ((#("#+END_SRC
" 0 9 (face org-meta-line font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 9 10 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7881) (undo-tree-id177 . -9) (undo-tree-id178 . 10) (undo-tree-id179 . -8) 7889) nil (25748 4355 129883 715000) 0 nil])
([nil nil ((#("** " 0 1 (composition (2 1 [32]) face org-superstar-leading wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (composition (3 1 [8594]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 7740) (7743 . 7747) 7748) nil (25748 4355 129851 484000) 0 nil])
([nil nil ((#("** " 0 1 (composition (2 1 [32]) face org-superstar-leading wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (composition (3 1 [8594]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 8598) (t 25748 4355 146205 763000) (8601 . 8605) 8607 (t 25748 4355 146205 763000)) nil (25748 4368 200136 823000) 0 nil])
([nil nil ((#("a 'b) do-something do-something-more)" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 5 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 5 32 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 32 36 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 36 37 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 8445) (undo-tree-id6228 . -36) (t 25748 4369 16510 747000)) nil (25748 4541 872304 200000) 0 nil] [nil nil ((#("p" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8602) (undo-tree-id196 . -1) (undo-tree-id198 . -1) (undo-tree-id200 . -1) (undo-tree-id202 . -1) (undo-tree-id204 . -1) (undo-tree-id206 . -1) (undo-tree-id208 . -1) (undo-tree-id210 . -1) (undo-tree-id212 . -1) (undo-tree-id214 . -1) (undo-tree-id216 . -1) (undo-tree-id218 . -1) (undo-tree-id220 . -1) (undo-tree-id222 . -1) (undo-tree-id224 . -1) (undo-tree-id226 . -1) (undo-tree-id228 . -1) (undo-tree-id230 . -1) (undo-tree-id232 . -1) (undo-tree-id234 . -1) (undo-tree-id236 . -1) (undo-tree-id238 . -1) (undo-tree-id240 . -1) (undo-tree-id242 . -1) (undo-tree-id244 . -1) (undo-tree-id246 . -1) (undo-tree-id248 . -1) (undo-tree-id250 . -1) (undo-tree-id252 . -1) (undo-tree-id254 . -1) (undo-tree-id256 . -1) (undo-tree-id258 . -1) (undo-tree-id260 . -1) (undo-tree-id262 . -1) (undo-tree-id264 . -1) (undo-tree-id266 . -1) (undo-tree-id268 . -1) (undo-tree-id270 . -1) (undo-tree-id272 . -1) (undo-tree-id274 . -1) (undo-tree-id276 . -1) (undo-tree-id278 . -1) (undo-tree-id280 . -1) (undo-tree-id282 . -1) (undo-tree-id284 . -1) (undo-tree-id286 . -1) (undo-tree-id288 . -1) (undo-tree-id290 . -1) (undo-tree-id292 . -1) (undo-tree-id294 . -1) (undo-tree-id296 . -1) (undo-tree-id298 . -1) (undo-tree-id300 . -1) (undo-tree-id302 . -1) (undo-tree-id304 . -1) (undo-tree-id306 . -1) (undo-tree-id308 . -1) (undo-tree-id310 . -1) (undo-tree-id312 . -1) (undo-tree-id314 . -1) (undo-tree-id316 . -1) (undo-tree-id318 . -1) (undo-tree-id320 . -1) (undo-tree-id322 . -1) (undo-tree-id324 . -1) (undo-tree-id326 . -1) (undo-tree-id328 . -1) (undo-tree-id330 . -1) (undo-tree-id332 . -1) (undo-tree-id334 . -1) (undo-tree-id336 . -1) (undo-tree-id338 . -1) (undo-tree-id340 . -1) (undo-tree-id342 . -1) (undo-tree-id344 . -1) (undo-tree-id346 . -1) (undo-tree-id348 . -1) (undo-tree-id350 . -1) (undo-tree-id352 . -1) (undo-tree-id354 . -1) (undo-tree-id356 . -1) (undo-tree-id358 . -1) (undo-tree-id360 . -1) (undo-tree-id362 . -1) (undo-tree-id364 . -1) (undo-tree-id366 . -1) (undo-tree-id368 . -1) (undo-tree-id370 . -1) (undo-tree-id372 . -1) (undo-tree-id374 . -1) (undo-tree-id376 . -1) (undo-tree-id378 . -1) (undo-tree-id380 . -1) (undo-tree-id382 . -1) (undo-tree-id384 . -1) (undo-tree-id386 . -1) (undo-tree-id388 . -1) (undo-tree-id390 . -1) (undo-tree-id392 . -1) (undo-tree-id394 . -1) (undo-tree-id396 . -1) (undo-tree-id398 . -1) (undo-tree-id400 . -1) (undo-tree-id402 . -1) (undo-tree-id404 . -1) (undo-tree-id406 . -1) (undo-tree-id408 . -1) (undo-tree-id410 . -1) (undo-tree-id412 . -1) (undo-tree-id414 . -1) (undo-tree-id416 . -1) (undo-tree-id418 . -1) (undo-tree-id420 . -1) (undo-tree-id422 . -1) (undo-tree-id424 . -1) (undo-tree-id426 . -1) (undo-tree-id428 . -1) (undo-tree-id430 . -1) (undo-tree-id432 . -1) (undo-tree-id434 . -1) (undo-tree-id436 . -1) (undo-tree-id438 . -1) (undo-tree-id440 . -1) (undo-tree-id442 . -1) (undo-tree-id444 . -1) (undo-tree-id446 . -1) (undo-tree-id448 . -1) (undo-tree-id450 . -1) (undo-tree-id452 . -1) (undo-tree-id454 . -1) (undo-tree-id456 . -1) (undo-tree-id458 . -1) (undo-tree-id460 . -1) (undo-tree-id462 . -1) (undo-tree-id464 . -1) (undo-tree-id466 . -1) (undo-tree-id468 . -1) (undo-tree-id470 . -1) (undo-tree-id472 . -1) (undo-tree-id474 . -1) (undo-tree-id476 . -1) (undo-tree-id478 . -1) (undo-tree-id480 . -1) (undo-tree-id482 . -1) (undo-tree-id484 . -1) (undo-tree-id486 . -1) (undo-tree-id488 . -1) (undo-tree-id490 . -1) (undo-tree-id492 . -1) (undo-tree-id494 . -1) (undo-tree-id496 . -1) (undo-tree-id498 . -1) (undo-tree-id500 . -1) (undo-tree-id502 . -1) (undo-tree-id504 . -1) (undo-tree-id506 . -1) (undo-tree-id508 . -1) (undo-tree-id510 . -1) (undo-tree-id512 . -1) (undo-tree-id514 . -1) (undo-tree-id516 . -1) (undo-tree-id518 . -1) (undo-tree-id520 . -1) (undo-tree-id522 . -1) (undo-tree-id524 . -1) (undo-tree-id526 . -1) (undo-tree-id528 . -1) (undo-tree-id530 . -1) (undo-tree-id532 . -1) (undo-tree-id534 . -1) (undo-tree-id536 . -1) (undo-tree-id538 . -1) (undo-tree-id540 . -1) (undo-tree-id542 . -1) (undo-tree-id544 . -1) (undo-tree-id546 . -1) (undo-tree-id548 . -1) (undo-tree-id550 . -1) (undo-tree-id552 . -1) (undo-tree-id554 . -1) (undo-tree-id556 . -1) (undo-tree-id558 . -1) (undo-tree-id560 . -1) (undo-tree-id562 . -1) (undo-tree-id564 . -1) (undo-tree-id566 . -1) (undo-tree-id568 . -1) (undo-tree-id570 . -1) (undo-tree-id572 . -1) (undo-tree-id574 . -1) (undo-tree-id576 . -1) (undo-tree-id578 . -1) (undo-tree-id580 . -1) (undo-tree-id582 . -1) (undo-tree-id584 . -1) (undo-tree-id586 . -1) (undo-tree-id588 . -1) (undo-tree-id590 . -1) (undo-tree-id592 . -1) (undo-tree-id594 . -1) (undo-tree-id596 . -1) (undo-tree-id598 . -1) (undo-tree-id600 . -1) (undo-tree-id602 . -1) (undo-tree-id604 . -1) (undo-tree-id606 . -1) (undo-tree-id608 . -1) (undo-tree-id610 . -1) (undo-tree-id612 . -1) (undo-tree-id614 . -1) (undo-tree-id616 . -1) (undo-tree-id618 . -1) (undo-tree-id620 . -1) (undo-tree-id622 . -1) (undo-tree-id624 . -1) (undo-tree-id626 . -1) (undo-tree-id628 . -1) (undo-tree-id630 . -1) (undo-tree-id632 . -1) (undo-tree-id634 . -1) (undo-tree-id636 . -1) (undo-tree-id638 . -1) (undo-tree-id640 . -1) (undo-tree-id642 . -1) (undo-tree-id644 . -1) (undo-tree-id646 . -1) (undo-tree-id648 . -1) (undo-tree-id650 . -1) (undo-tree-id652 . -1) (undo-tree-id654 . -1) (undo-tree-id656 . -1) (undo-tree-id658 . -1) (undo-tree-id660 . -1) (undo-tree-id662 . -1) (undo-tree-id664 . -1) (undo-tree-id666 . -1) (undo-tree-id668 . -1) (undo-tree-id670 . -1) (undo-tree-id672 . -1) (undo-tree-id674 . -1) (undo-tree-id676 . -1) (undo-tree-id678 . -1) (undo-tree-id680 . -1) (undo-tree-id682 . -1) (undo-tree-id684 . -1) (undo-tree-id686 . -1) (undo-tree-id688 . -1) (undo-tree-id690 . -1) (undo-tree-id692 . -1) (undo-tree-id694 . -1) (undo-tree-id696 . -1) (undo-tree-id698 . -1) (undo-tree-id700 . -1) (undo-tree-id702 . -1) (undo-tree-id704 . -1) (undo-tree-id706 . -1) (undo-tree-id708 . -1) (undo-tree-id710 . -1) (undo-tree-id712 . -1) (undo-tree-id714 . -1) (undo-tree-id716 . -1) (undo-tree-id718 . -1) (undo-tree-id720 . -1) (undo-tree-id722 . -1) (undo-tree-id724 . -1) (undo-tree-id726 . -1) (undo-tree-id728 . -1) (undo-tree-id730 . -1) (undo-tree-id732 . -1) (undo-tree-id734 . -1) (undo-tree-id736 . -1) (undo-tree-id738 . -1) (undo-tree-id740 . -1) (undo-tree-id742 . -1) (undo-tree-id744 . -1) (undo-tree-id746 . -1) (undo-tree-id748 . -1) (undo-tree-id750 . -1) (undo-tree-id752 . -1) (undo-tree-id754 . -1) (undo-tree-id756 . -1) (undo-tree-id758 . -1) (undo-tree-id760 . -1) (undo-tree-id762 . -1) (undo-tree-id764 . -1) (undo-tree-id766 . -1) (undo-tree-id768 . -1) (undo-tree-id770 . -1) (undo-tree-id772 . -1) (undo-tree-id774 . -1) (undo-tree-id776 . -1) (undo-tree-id778 . -1) (undo-tree-id780 . -1) (undo-tree-id782 . -1) (undo-tree-id784 . -1) (undo-tree-id786 . -1) (undo-tree-id788 . -1) (undo-tree-id790 . -1) (undo-tree-id792 . -1) (undo-tree-id794 . -1) (undo-tree-id796 . -1) (undo-tree-id798 . -1) (undo-tree-id800 . -1) (undo-tree-id802 . -1) (undo-tree-id804 . -1) (undo-tree-id806 . -1) (undo-tree-id808 . -1) (undo-tree-id810 . -1) (undo-tree-id812 . -1) (undo-tree-id814 . -1) (undo-tree-id816 . -1) (undo-tree-id818 . -1) (undo-tree-id820 . -1) (undo-tree-id822 . -1) (undo-tree-id824 . -1) (undo-tree-id826 . -1) (undo-tree-id828 . -1) (#("a" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8603) (undo-tree-id830 . -1) (undo-tree-id832 . -1) (undo-tree-id834 . -1) (undo-tree-id836 . -1) (undo-tree-id838 . -1) (undo-tree-id840 . -1) (undo-tree-id842 . -1) (undo-tree-id844 . -1) (undo-tree-id846 . -1) (undo-tree-id848 . -1) (undo-tree-id850 . -1) (undo-tree-id852 . -1) (undo-tree-id854 . -1) (undo-tree-id856 . -1) (undo-tree-id858 . -1) (undo-tree-id860 . -1) (undo-tree-id862 . -1) (undo-tree-id864 . -1) (undo-tree-id866 . -1) (undo-tree-id868 . -1) (undo-tree-id870 . -1) (undo-tree-id872 . -1) (undo-tree-id874 . -1) (undo-tree-id876 . -1) (undo-tree-id878 . -1) (undo-tree-id880 . -1) (undo-tree-id882 . -1) (undo-tree-id884 . -1) (undo-tree-id886 . -1) (undo-tree-id888 . -1) (undo-tree-id890 . -1) (undo-tree-id892 . -1) (undo-tree-id894 . -1) (undo-tree-id896 . -1) (undo-tree-id898 . -1) (undo-tree-id900 . -1) (undo-tree-id902 . -1) (undo-tree-id904 . -1) (undo-tree-id906 . -1) (undo-tree-id908 . -1) (undo-tree-id910 . -1) (undo-tree-id912 . -1) (undo-tree-id914 . -1) (undo-tree-id916 . -1) (undo-tree-id918 . -1) (undo-tree-id920 . -1) (undo-tree-id922 . -1) (undo-tree-id924 . -1) (undo-tree-id926 . -1) (undo-tree-id928 . -1) (undo-tree-id930 . -1) (undo-tree-id932 . -1) (undo-tree-id934 . -1) (undo-tree-id936 . -1) (undo-tree-id938 . -1) (undo-tree-id940 . -1) (undo-tree-id942 . -1) (undo-tree-id944 . -1) (undo-tree-id946 . -1) (undo-tree-id948 . -1) (undo-tree-id950 . -1) (undo-tree-id952 . -1) (undo-tree-id954 . -1) (undo-tree-id956 . -1) (undo-tree-id958 . -1) (undo-tree-id960 . -1) (undo-tree-id962 . -1) (undo-tree-id964 . -1) (undo-tree-id966 . -1) (undo-tree-id968 . -1) (undo-tree-id970 . -1) (undo-tree-id972 . -1) (undo-tree-id974 . -1) (undo-tree-id976 . -1) (undo-tree-id978 . -1) (undo-tree-id980 . -1) (undo-tree-id982 . -1) (undo-tree-id984 . -1) (undo-tree-id986 . -1) (undo-tree-id988 . -1) (undo-tree-id990 . -1) (undo-tree-id992 . -1) (undo-tree-id994 . -1) (undo-tree-id996 . -1) (undo-tree-id998 . -1) (undo-tree-id1000 . -1) (undo-tree-id1002 . -1) (undo-tree-id1004 . -1) (undo-tree-id1006 . -1) (undo-tree-id1008 . -1) (undo-tree-id1010 . -1) (undo-tree-id1012 . -1) (undo-tree-id1014 . -1) (undo-tree-id1016 . -1) (undo-tree-id1018 . -1) (undo-tree-id1020 . -1) (undo-tree-id1022 . -1) (undo-tree-id1024 . -1) (undo-tree-id1026 . -1) (undo-tree-id1028 . -1) (undo-tree-id1030 . -1) (undo-tree-id1032 . -1) (undo-tree-id1034 . -1) (undo-tree-id1036 . -1) (undo-tree-id1038 . -1) (undo-tree-id1040 . -1) (undo-tree-id1042 . -1) (undo-tree-id1044 . -1) (undo-tree-id1046 . -1) (undo-tree-id1048 . -1) (undo-tree-id1050 . -1) (undo-tree-id1052 . -1) (undo-tree-id1054 . -1) (undo-tree-id1056 . -1) (undo-tree-id1058 . -1) (undo-tree-id1060 . -1) (undo-tree-id1062 . -1) (undo-tree-id1064 . -1) (undo-tree-id1066 . -1) (undo-tree-id1068 . -1) (undo-tree-id1070 . -1) (undo-tree-id1072 . -1) (undo-tree-id1074 . -1) (undo-tree-id1076 . -1) (undo-tree-id1078 . -1) (undo-tree-id1080 . -1) (undo-tree-id1082 . -1) (undo-tree-id1084 . -1) (undo-tree-id1086 . -1) (undo-tree-id1088 . -1) (undo-tree-id1090 . -1) (undo-tree-id1092 . -1) (undo-tree-id1094 . -1) (undo-tree-id1096 . -1) (undo-tree-id1098 . -1) (undo-tree-id1100 . -1) (undo-tree-id1102 . -1) (undo-tree-id1104 . -1) (undo-tree-id1106 . -1) (undo-tree-id1108 . -1) (undo-tree-id1110 . -1) (undo-tree-id1112 . -1) (undo-tree-id1114 . -1) (undo-tree-id1116 . -1) (undo-tree-id1118 . -1) (undo-tree-id1120 . -1) (undo-tree-id1122 . -1) (undo-tree-id1124 . -1) (undo-tree-id1126 . -1) (undo-tree-id1128 . -1) (undo-tree-id1130 . -1) (undo-tree-id1132 . -1) (undo-tree-id1134 . -1) (undo-tree-id1136 . -1) (undo-tree-id1138 . -1) (undo-tree-id1140 . -1) (undo-tree-id1142 . -1) (undo-tree-id1144 . -1) (undo-tree-id1146 . -1) (undo-tree-id1148 . -1) (undo-tree-id1150 . -1) (undo-tree-id1152 . -1) (undo-tree-id1154 . -1) (undo-tree-id1156 . -1) (undo-tree-id1158 . -1) (undo-tree-id1160 . -1) (undo-tree-id1162 . -1) (undo-tree-id1164 . -1) (undo-tree-id1166 . -1) (undo-tree-id1168 . -1) (undo-tree-id1170 . -1) (undo-tree-id1172 . -1) (undo-tree-id1174 . -1) (undo-tree-id1176 . -1) (undo-tree-id1178 . -1) (undo-tree-id1180 . -1) (undo-tree-id1182 . -1) (undo-tree-id1184 . -1) (undo-tree-id1186 . -1) (undo-tree-id1188 . -1) (undo-tree-id1190 . -1) (undo-tree-id1192 . -1) (undo-tree-id1194 . -1) (undo-tree-id1196 . -1) (undo-tree-id1198 . -1) (undo-tree-id1200 . -1) (undo-tree-id1202 . -1) (undo-tree-id1204 . -1) (undo-tree-id1206 . -1) (undo-tree-id1208 . -1) (undo-tree-id1210 . -1) (undo-tree-id1212 . -1) (undo-tree-id1214 . -1) (undo-tree-id1216 . -1) (undo-tree-id1218 . -1) (undo-tree-id1220 . -1) (undo-tree-id1222 . -1) (undo-tree-id1224 . -1) (undo-tree-id1226 . -1) (undo-tree-id1228 . -1) (undo-tree-id1230 . -1) (undo-tree-id1232 . -1) (undo-tree-id1234 . -1) (undo-tree-id1236 . -1) (undo-tree-id1238 . -1) (undo-tree-id1240 . -1) (undo-tree-id1242 . -1) (undo-tree-id1244 . -1) (undo-tree-id1246 . -1) (undo-tree-id1248 . -1) (undo-tree-id1250 . -1) (undo-tree-id1252 . -1) (undo-tree-id1254 . -1) (undo-tree-id1256 . -1) (undo-tree-id1258 . -1) (undo-tree-id1260 . -1) (undo-tree-id1262 . -1) (undo-tree-id1264 . -1) (undo-tree-id1266 . -1) (undo-tree-id1268 . -1) (undo-tree-id1270 . -1) (undo-tree-id1272 . -1) (undo-tree-id1274 . -1) (undo-tree-id1276 . -1) (undo-tree-id1278 . -1) (undo-tree-id1280 . -1) (undo-tree-id1282 . -1) (undo-tree-id1284 . -1) (undo-tree-id1286 . -1) (undo-tree-id1288 . -1) (undo-tree-id1290 . -1) (undo-tree-id1292 . -1) (undo-tree-id1294 . -1) (undo-tree-id1296 . -1) (undo-tree-id1298 . -1) (undo-tree-id1300 . -1) (undo-tree-id1302 . -1) (undo-tree-id1304 . -1) (undo-tree-id1306 . -1) (undo-tree-id1308 . -1) (undo-tree-id1310 . -1) (undo-tree-id1312 . -1) (undo-tree-id1314 . -1) (undo-tree-id1316 . -1) (undo-tree-id1318 . -1) (undo-tree-id1320 . -1) (undo-tree-id1322 . -1) (undo-tree-id1324 . -1) (undo-tree-id1326 . -1) (undo-tree-id1328 . -1) (undo-tree-id1330 . -1) (undo-tree-id1332 . -1) (undo-tree-id1334 . -1) (undo-tree-id1336 . -1) (undo-tree-id1338 . -1) (undo-tree-id1340 . -1) (undo-tree-id1342 . -1) (undo-tree-id1344 . -1) (undo-tree-id1346 . -1) (undo-tree-id1348 . -1) (undo-tree-id1350 . -1) (undo-tree-id1352 . -1) (undo-tree-id1354 . -1) (undo-tree-id1356 . -1) (undo-tree-id1358 . -1) (undo-tree-id1360 . -1) (undo-tree-id1362 . -1) (undo-tree-id1364 . -1) (undo-tree-id1366 . -1) (undo-tree-id1368 . -1) (undo-tree-id1370 . -1) (undo-tree-id1372 . -1) (undo-tree-id1374 . -1) (undo-tree-id1376 . -1) (undo-tree-id1378 . -1) (undo-tree-id1380 . -1) (undo-tree-id1382 . -1) (undo-tree-id1384 . -1) (undo-tree-id1386 . -1) (undo-tree-id1388 . -1) (undo-tree-id1390 . -1) (undo-tree-id1392 . -1) (undo-tree-id1394 . -1) (undo-tree-id1396 . -1) (undo-tree-id1398 . -1) (undo-tree-id1400 . -1) (undo-tree-id1402 . -1) (undo-tree-id1404 . -1) (undo-tree-id1406 . -1) (undo-tree-id1408 . -1) (undo-tree-id1410 . -1) (undo-tree-id1412 . -1) (undo-tree-id1414 . -1) (undo-tree-id1416 . -1) (undo-tree-id1418 . -1) (undo-tree-id1420 . -1) (undo-tree-id1422 . -1) (undo-tree-id1424 . -1) (undo-tree-id1426 . -1) (undo-tree-id1428 . -1) (undo-tree-id1430 . -1) (undo-tree-id1432 . -1) (#("r" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8604) (undo-tree-id1434 . -1) (undo-tree-id1436 . -1) (undo-tree-id1438 . -1) (undo-tree-id1440 . -1) (undo-tree-id1442 . -1) (undo-tree-id1444 . -1) (undo-tree-id1446 . -1) (undo-tree-id1448 . -1) (undo-tree-id1450 . -1) (undo-tree-id1452 . -1) (undo-tree-id1454 . -1) (undo-tree-id1456 . -1) (undo-tree-id1458 . -1) (undo-tree-id1460 . -1) (undo-tree-id1462 . -1) (undo-tree-id1464 . -1) (undo-tree-id1466 . -1) (undo-tree-id1468 . -1) (undo-tree-id1470 . -1) (undo-tree-id1472 . -1) (undo-tree-id1474 . -1) (undo-tree-id1476 . -1) (undo-tree-id1478 . -1) (undo-tree-id1480 . -1) (undo-tree-id1482 . -1) (undo-tree-id1484 . -1) (undo-tree-id1486 . -1) (undo-tree-id1488 . -1) (undo-tree-id1490 . -1) (undo-tree-id1492 . -1) (undo-tree-id1494 . -1) (undo-tree-id1496 . -1) (undo-tree-id1498 . -1) (undo-tree-id1500 . -1) (undo-tree-id1502 . -1) (undo-tree-id1504 . -1) (undo-tree-id1506 . -1) (undo-tree-id1508 . -1) (undo-tree-id1510 . -1) (undo-tree-id1512 . -1) (undo-tree-id1514 . -1) (undo-tree-id1516 . -1) (undo-tree-id1518 . -1) (undo-tree-id1520 . -1) (undo-tree-id1522 . -1) (undo-tree-id1524 . -1) (undo-tree-id1526 . -1) (undo-tree-id1528 . -1) (undo-tree-id1530 . -1) (undo-tree-id1532 . -1) (undo-tree-id1534 . -1) (undo-tree-id1536 . -1) (undo-tree-id1538 . -1) (undo-tree-id1540 . -1) (undo-tree-id1542 . -1) (undo-tree-id1544 . -1) (undo-tree-id1546 . -1) (undo-tree-id1548 . -1) (undo-tree-id1550 . -1) (undo-tree-id1552 . -1) (undo-tree-id1554 . -1) (undo-tree-id1556 . -1) (undo-tree-id1558 . -1) (undo-tree-id1560 . -1) (undo-tree-id1562 . -1) (undo-tree-id1564 . -1) (undo-tree-id1566 . -1) (undo-tree-id1568 . -1) (undo-tree-id1570 . -1) (undo-tree-id1572 . -1) (undo-tree-id1574 . -1) (undo-tree-id1576 . -1) (undo-tree-id1578 . -1) (undo-tree-id1580 . -1) (undo-tree-id1582 . -1) (undo-tree-id1584 . -1) (undo-tree-id1586 . -1) (undo-tree-id1588 . -1) (undo-tree-id1590 . -1) (undo-tree-id1592 . -1) (undo-tree-id1594 . -1) (undo-tree-id1596 . -1) (undo-tree-id1598 . -1) (undo-tree-id1600 . -1) (undo-tree-id1602 . -1) (undo-tree-id1604 . -1) (undo-tree-id1606 . -1) (undo-tree-id1608 . -1) (undo-tree-id1610 . -1) (undo-tree-id1612 . -1) (undo-tree-id1614 . -1) (undo-tree-id1616 . -1) (undo-tree-id1618 . -1) (undo-tree-id1620 . -1) (undo-tree-id1622 . -1) (undo-tree-id1624 . -1) (undo-tree-id1626 . -1) (undo-tree-id1628 . -1) (undo-tree-id1630 . -1) (undo-tree-id1632 . -1) (undo-tree-id1634 . -1) (undo-tree-id1636 . -1) (undo-tree-id1638 . -1) (undo-tree-id1640 . -1) (undo-tree-id1642 . -1) (undo-tree-id1644 . -1) (undo-tree-id1646 . -1) (undo-tree-id1648 . -1) (undo-tree-id1650 . -1) (undo-tree-id1652 . -1) (undo-tree-id1654 . -1) (undo-tree-id1656 . -1) (undo-tree-id1658 . -1) (undo-tree-id1660 . -1) (undo-tree-id1662 . -1) (undo-tree-id1664 . -1) (undo-tree-id1666 . -1) (undo-tree-id1668 . -1) (undo-tree-id1670 . -1) (undo-tree-id1672 . -1) (undo-tree-id1674 . -1) (undo-tree-id1676 . -1) (undo-tree-id1678 . -1) (undo-tree-id1680 . -1) (undo-tree-id1682 . -1) (undo-tree-id1684 . -1) (undo-tree-id1686 . -1) (undo-tree-id1688 . -1) (undo-tree-id1690 . -1) (undo-tree-id1692 . -1) (undo-tree-id1694 . -1) (undo-tree-id1696 . -1) (undo-tree-id1698 . -1) (undo-tree-id1700 . -1) (undo-tree-id1702 . -1) (undo-tree-id1704 . -1) (undo-tree-id1706 . -1) (undo-tree-id1708 . -1) (undo-tree-id1710 . -1) (undo-tree-id1712 . -1) (undo-tree-id1714 . -1) (undo-tree-id1716 . -1) (undo-tree-id1718 . -1) (undo-tree-id1720 . -1) (undo-tree-id1722 . -1) (undo-tree-id1724 . -1) (undo-tree-id1726 . -1) (undo-tree-id1728 . -1) (undo-tree-id1730 . -1) (undo-tree-id1732 . -1) (undo-tree-id1734 . -1) (undo-tree-id1736 . -1) (undo-tree-id1738 . -1) (undo-tree-id1740 . -1) (undo-tree-id1742 . -1) (undo-tree-id1744 . -1) (undo-tree-id1746 . -1) (undo-tree-id1748 . -1) (undo-tree-id1750 . -1) (undo-tree-id1752 . -1) (undo-tree-id1754 . -1) (undo-tree-id1756 . -1) (undo-tree-id1758 . -1) (undo-tree-id1760 . -1) (undo-tree-id1762 . -1) (undo-tree-id1764 . -1) (undo-tree-id1766 . -1) (undo-tree-id1768 . -1) (undo-tree-id1770 . -1) (undo-tree-id1772 . -1) (undo-tree-id1774 . -1) (undo-tree-id1776 . -1) (undo-tree-id1778 . -1) (undo-tree-id1780 . -1) (undo-tree-id1782 . -1) (undo-tree-id1784 . -1) (undo-tree-id1786 . -1) (undo-tree-id1788 . -1) (undo-tree-id1790 . -1) (undo-tree-id1792 . -1) (undo-tree-id1794 . -1) (undo-tree-id1796 . -1) (undo-tree-id1798 . -1) (undo-tree-id1800 . -1) (undo-tree-id1802 . -1) (undo-tree-id1804 . -1) (undo-tree-id1806 . -1) (undo-tree-id1808 . -1) (undo-tree-id1810 . -1) (undo-tree-id1812 . -1) (undo-tree-id1814 . -1) (undo-tree-id1816 . -1) (undo-tree-id1818 . -1) (undo-tree-id1820 . -1) (undo-tree-id1822 . -1) (undo-tree-id1824 . -1) (undo-tree-id1826 . -1) (undo-tree-id1828 . -1) (undo-tree-id1830 . -1) (undo-tree-id1832 . -1) (undo-tree-id1834 . -1) (undo-tree-id1836 . -1) (undo-tree-id1838 . -1) (undo-tree-id1840 . -1) (undo-tree-id1842 . -1) (undo-tree-id1844 . -1) (undo-tree-id1846 . -1) (undo-tree-id1848 . -1) (undo-tree-id1850 . -1) (undo-tree-id1852 . -1) (undo-tree-id1854 . -1) (undo-tree-id1856 . -1) (undo-tree-id1858 . -1) (undo-tree-id1860 . -1) (undo-tree-id1862 . -1) (undo-tree-id1864 . -1) (undo-tree-id1866 . -1) (undo-tree-id1868 . -1) (undo-tree-id1870 . -1) (undo-tree-id1872 . -1) (undo-tree-id1874 . -1) (undo-tree-id1876 . -1) (undo-tree-id1878 . -1) (undo-tree-id1880 . -1) (undo-tree-id1882 . -1) (undo-tree-id1884 . -1) (undo-tree-id1886 . -1) (undo-tree-id1888 . -1) (undo-tree-id1890 . -1) (undo-tree-id1892 . -1) (undo-tree-id1894 . -1) (undo-tree-id1896 . -1) (undo-tree-id1898 . -1) (undo-tree-id1900 . -1) (undo-tree-id1902 . -1) (undo-tree-id1904 . -1) (undo-tree-id1906 . -1) (undo-tree-id1908 . -1) (undo-tree-id1910 . -1) (undo-tree-id1912 . -1) (undo-tree-id1914 . -1) (undo-tree-id1916 . -1) (undo-tree-id1918 . -1) (undo-tree-id1920 . -1) (undo-tree-id1922 . -1) (undo-tree-id1924 . -1) (undo-tree-id1926 . -1) (undo-tree-id1928 . -1) (undo-tree-id1930 . -1) (undo-tree-id1932 . -1) (undo-tree-id1934 . -1) (undo-tree-id1936 . -1) (undo-tree-id1938 . -1) (undo-tree-id1940 . -1) (undo-tree-id1942 . -1) (undo-tree-id1944 . -1) (undo-tree-id1946 . -1) (undo-tree-id1948 . -1) (undo-tree-id1950 . -1) (undo-tree-id1952 . -1) (undo-tree-id1954 . -1) (undo-tree-id1956 . -1) (undo-tree-id1958 . -1) (undo-tree-id1960 . -1) (undo-tree-id1962 . -1) (undo-tree-id1964 . -1) (undo-tree-id1966 . -1) (undo-tree-id1968 . -1) (undo-tree-id1970 . -1) (undo-tree-id1972 . -1) (undo-tree-id1974 . -1) (undo-tree-id1976 . -1) (undo-tree-id1978 . -1) (undo-tree-id1980 . -1) (undo-tree-id1982 . -1) (undo-tree-id1984 . -1) (undo-tree-id1986 . -1) (undo-tree-id1988 . -1) (undo-tree-id1990 . -1) (undo-tree-id1992 . -1) (undo-tree-id1994 . -1) (undo-tree-id1996 . -1) (undo-tree-id1998 . -1) (undo-tree-id2000 . -1) (undo-tree-id2002 . -1) (undo-tree-id2004 . -1) (undo-tree-id2006 . -1) (#("a" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8605) (undo-tree-id2008 . -1) (undo-tree-id2010 . -1) (undo-tree-id2012 . -1) (undo-tree-id2014 . -1) (undo-tree-id2016 . -1) (undo-tree-id2018 . -1) (undo-tree-id2020 . -1) (undo-tree-id2022 . -1) (undo-tree-id2024 . -1) (undo-tree-id2026 . -1) (undo-tree-id2028 . -1) (undo-tree-id2030 . -1) (undo-tree-id2032 . -1) (undo-tree-id2034 . -1) (undo-tree-id2036 . -1) (undo-tree-id2038 . -1) (undo-tree-id2040 . -1) (undo-tree-id2042 . -1) (undo-tree-id2044 . -1) (undo-tree-id2046 . -1) (undo-tree-id2048 . -1) (undo-tree-id2050 . -1) (undo-tree-id2052 . -1) (undo-tree-id2054 . -1) (undo-tree-id2056 . -1) (undo-tree-id2058 . -1) (undo-tree-id2060 . -1) (undo-tree-id2062 . -1) (undo-tree-id2064 . -1) (undo-tree-id2066 . -1) (undo-tree-id2068 . -1) (undo-tree-id2070 . -1) (undo-tree-id2072 . -1) (undo-tree-id2074 . -1) (undo-tree-id2076 . -1) (undo-tree-id2078 . -1) (undo-tree-id2080 . -1) (undo-tree-id2082 . -1) (undo-tree-id2084 . -1) (undo-tree-id2086 . -1) (undo-tree-id2088 . -1) (undo-tree-id2090 . -1) (undo-tree-id2092 . -1) (undo-tree-id2094 . -1) (undo-tree-id2096 . -1) (undo-tree-id2098 . -1) (undo-tree-id2100 . -1) (undo-tree-id2102 . -1) (undo-tree-id2104 . -1) (undo-tree-id2106 . -1) (undo-tree-id2108 . -1) (undo-tree-id2110 . -1) (undo-tree-id2112 . -1) (undo-tree-id2114 . -1) (undo-tree-id2116 . -1) (undo-tree-id2118 . -1) (undo-tree-id2120 . -1) (undo-tree-id2122 . -1) (undo-tree-id2124 . -1) (undo-tree-id2126 . -1) (undo-tree-id2128 . -1) (undo-tree-id2130 . -1) (undo-tree-id2132 . -1) (undo-tree-id2134 . -1) (undo-tree-id2136 . -1) (undo-tree-id2138 . -1) (undo-tree-id2140 . -1) (undo-tree-id2142 . -1) (undo-tree-id2144 . -1) (undo-tree-id2146 . -1) (undo-tree-id2148 . -1) (undo-tree-id2150 . -1) (undo-tree-id2152 . -1) (undo-tree-id2154 . -1) (undo-tree-id2156 . -1) (undo-tree-id2158 . -1) (undo-tree-id2160 . -1) (undo-tree-id2162 . -1) (undo-tree-id2164 . -1) (undo-tree-id2166 . -1) (undo-tree-id2168 . -1) (undo-tree-id2170 . -1) (undo-tree-id2172 . -1) (undo-tree-id2174 . -1) (undo-tree-id2176 . -1) (undo-tree-id2178 . -1) (undo-tree-id2180 . -1) (undo-tree-id2182 . -1) (undo-tree-id2184 . -1) (undo-tree-id2186 . -1) (undo-tree-id2188 . -1) (undo-tree-id2190 . -1) (undo-tree-id2192 . -1) (undo-tree-id2194 . -1) (undo-tree-id2196 . -1) (undo-tree-id2198 . -1) (undo-tree-id2200 . -1) (undo-tree-id2202 . -1) (undo-tree-id2204 . -1) (undo-tree-id2206 . -1) (undo-tree-id2208 . -1) (undo-tree-id2210 . -1) (undo-tree-id2212 . -1) (undo-tree-id2214 . -1) (undo-tree-id2216 . -1) (undo-tree-id2218 . -1) (undo-tree-id2220 . -1) (undo-tree-id2222 . -1) (undo-tree-id2224 . -1) (undo-tree-id2226 . -1) (undo-tree-id2228 . -1) (undo-tree-id2230 . -1) (undo-tree-id2232 . -1) (undo-tree-id2234 . -1) (undo-tree-id2236 . -1) (undo-tree-id2238 . -1) (undo-tree-id2240 . -1) (undo-tree-id2242 . -1) (undo-tree-id2244 . -1) (undo-tree-id2246 . -1) (undo-tree-id2248 . -1) (undo-tree-id2250 . -1) (undo-tree-id2252 . -1) (undo-tree-id2254 . -1) (undo-tree-id2256 . -1) (undo-tree-id2258 . -1) (undo-tree-id2260 . -1) (undo-tree-id2262 . -1) (undo-tree-id2264 . -1) (undo-tree-id2266 . -1) (undo-tree-id2268 . -1) (undo-tree-id2270 . -1) (undo-tree-id2272 . -1) (undo-tree-id2274 . -1) (undo-tree-id2276 . -1) (undo-tree-id2278 . -1) (undo-tree-id2280 . -1) (undo-tree-id2282 . -1) (undo-tree-id2284 . -1) (undo-tree-id2286 . -1) (undo-tree-id2288 . -1) (undo-tree-id2290 . -1) (undo-tree-id2292 . -1) (undo-tree-id2294 . -1) (undo-tree-id2296 . -1) (undo-tree-id2298 . -1) (undo-tree-id2300 . -1) (undo-tree-id2302 . -1) (undo-tree-id2304 . -1) (undo-tree-id2306 . -1) (undo-tree-id2308 . -1) (undo-tree-id2310 . -1) (undo-tree-id2312 . -1) (undo-tree-id2314 . -1) (undo-tree-id2316 . -1) (undo-tree-id2318 . -1) (undo-tree-id2320 . -1) (undo-tree-id2322 . -1) (undo-tree-id2324 . -1) (undo-tree-id2326 . -1) (undo-tree-id2328 . -1) (undo-tree-id2330 . -1) (undo-tree-id2332 . -1) (undo-tree-id2334 . -1) (undo-tree-id2336 . -1) (undo-tree-id2338 . -1) (undo-tree-id2340 . -1) (undo-tree-id2342 . -1) (undo-tree-id2344 . -1) (undo-tree-id2346 . -1) (undo-tree-id2348 . -1) (undo-tree-id2350 . -1) (undo-tree-id2352 . -1) (undo-tree-id2354 . -1) (undo-tree-id2356 . -1) (undo-tree-id2358 . -1) (undo-tree-id2360 . -1) (undo-tree-id2362 . -1) (undo-tree-id2364 . -1) (undo-tree-id2366 . -1) (undo-tree-id2368 . -1) (undo-tree-id2370 . -1) (undo-tree-id2372 . -1) (undo-tree-id2374 . -1) (undo-tree-id2376 . -1) (undo-tree-id2378 . -1) (undo-tree-id2380 . -1) (undo-tree-id2382 . -1) (undo-tree-id2384 . -1) (undo-tree-id2386 . -1) (undo-tree-id2388 . -1) (undo-tree-id2390 . -1) (undo-tree-id2392 . -1) (undo-tree-id2394 . -1) (undo-tree-id2396 . -1) (undo-tree-id2398 . -1) (undo-tree-id2400 . -1) (undo-tree-id2402 . -1) (undo-tree-id2404 . -1) (undo-tree-id2406 . -1) (undo-tree-id2408 . -1) (undo-tree-id2410 . -1) (undo-tree-id2412 . -1) (undo-tree-id2414 . -1) (undo-tree-id2416 . -1) (undo-tree-id2418 . -1) (undo-tree-id2420 . -1) (undo-tree-id2422 . -1) (undo-tree-id2424 . -1) (undo-tree-id2426 . -1) (undo-tree-id2428 . -1) (undo-tree-id2430 . -1) (undo-tree-id2432 . -1) (undo-tree-id2434 . -1) (undo-tree-id2436 . -1) (undo-tree-id2438 . -1) (undo-tree-id2440 . -1) (undo-tree-id2442 . -1) (undo-tree-id2444 . -1) (undo-tree-id2446 . -1) (undo-tree-id2448 . -1) (undo-tree-id2450 . -1) (undo-tree-id2452 . -1) (undo-tree-id2454 . -1) (undo-tree-id2456 . -1) (undo-tree-id2458 . -1) (undo-tree-id2460 . -1) (undo-tree-id2462 . -1) (undo-tree-id2464 . -1) (undo-tree-id2466 . -1) (undo-tree-id2468 . -1) (undo-tree-id2470 . -1) (undo-tree-id2472 . -1) (undo-tree-id2474 . -1) (undo-tree-id2476 . -1) (undo-tree-id2478 . -1) (undo-tree-id2480 . -1) (undo-tree-id2482 . -1) (undo-tree-id2484 . -1) (undo-tree-id2486 . -1) (undo-tree-id2488 . -1) (undo-tree-id2490 . -1) (undo-tree-id2492 . -1) (undo-tree-id2494 . -1) (undo-tree-id2496 . -1) (undo-tree-id2498 . -1) (undo-tree-id2500 . -1) (undo-tree-id2502 . -1) (undo-tree-id2504 . -1) (undo-tree-id2506 . -1) (undo-tree-id2508 . -1) (undo-tree-id2510 . -1) (undo-tree-id2512 . -1) (undo-tree-id2514 . -1) (undo-tree-id2516 . -1) (undo-tree-id2518 . -1) (undo-tree-id2520 . -1) (undo-tree-id2522 . -1) (undo-tree-id2524 . -1) (undo-tree-id2526 . -1) (undo-tree-id2528 . -1) (undo-tree-id2530 . -1) (undo-tree-id2532 . -1) (undo-tree-id2534 . -1) (undo-tree-id2536 . -1) (undo-tree-id2538 . -1) (undo-tree-id2540 . -1) (undo-tree-id2542 . -1) (undo-tree-id2544 . -1) (undo-tree-id2546 . -1) (undo-tree-id2548 . -1) (undo-tree-id2550 . -1) (undo-tree-id2552 . -1) (undo-tree-id2554 . -1) (undo-tree-id2556 . -1) (undo-tree-id2558 . -1) (undo-tree-id2560 . -1) (undo-tree-id2562 . -1) (undo-tree-id2564 . -1) (#("m" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8606) (undo-tree-id2566 . -1) (undo-tree-id2568 . -1) (undo-tree-id2570 . -1) (undo-tree-id2572 . -1) (undo-tree-id2574 . -1) (undo-tree-id2576 . -1) (undo-tree-id2578 . -1) (undo-tree-id2580 . -1) (undo-tree-id2582 . -1) (undo-tree-id2584 . -1) (undo-tree-id2586 . -1) (undo-tree-id2588 . -1) (undo-tree-id2590 . -1) (undo-tree-id2592 . -1) (undo-tree-id2594 . -1) (undo-tree-id2596 . -1) (undo-tree-id2598 . -1) (undo-tree-id2600 . -1) (undo-tree-id2602 . -1) (undo-tree-id2604 . -1) (undo-tree-id2606 . -1) (undo-tree-id2608 . -1) (undo-tree-id2610 . -1) (undo-tree-id2612 . -1) (undo-tree-id2614 . -1) (undo-tree-id2616 . -1) (undo-tree-id2618 . -1) (undo-tree-id2620 . -1) (undo-tree-id2622 . -1) (undo-tree-id2624 . -1) (undo-tree-id2626 . -1) (undo-tree-id2628 . -1) (undo-tree-id2630 . -1) (undo-tree-id2632 . -1) (undo-tree-id2634 . -1) (undo-tree-id2636 . -1) (undo-tree-id2638 . -1) (undo-tree-id2640 . -1) (undo-tree-id2642 . -1) (undo-tree-id2644 . -1) (undo-tree-id2646 . -1) (undo-tree-id2648 . -1) (undo-tree-id2650 . -1) (undo-tree-id2652 . -1) (undo-tree-id2654 . -1) (undo-tree-id2656 . -1) (undo-tree-id2658 . -1) (undo-tree-id2660 . -1) (undo-tree-id2662 . -1) (undo-tree-id2664 . -1) (undo-tree-id2666 . -1) (undo-tree-id2668 . -1) (undo-tree-id2670 . -1) (undo-tree-id2672 . -1) (undo-tree-id2674 . -1) (undo-tree-id2676 . -1) (undo-tree-id2678 . -1) (undo-tree-id2680 . -1) (undo-tree-id2682 . -1) (undo-tree-id2684 . -1) (undo-tree-id2686 . -1) (undo-tree-id2688 . -1) (undo-tree-id2690 . -1) (undo-tree-id2692 . -1) (undo-tree-id2694 . -1) (undo-tree-id2696 . -1) (undo-tree-id2698 . -1) (undo-tree-id2700 . -1) (undo-tree-id2702 . -1) (undo-tree-id2704 . -1) (undo-tree-id2706 . -1) (undo-tree-id2708 . -1) (undo-tree-id2710 . -1) (undo-tree-id2712 . -1) (undo-tree-id2714 . -1) (undo-tree-id2716 . -1) (undo-tree-id2718 . -1) (undo-tree-id2720 . -1) (undo-tree-id2722 . -1) (undo-tree-id2724 . -1) (undo-tree-id2726 . -1) (undo-tree-id2728 . -1) (undo-tree-id2730 . -1) (undo-tree-id2732 . -1) (undo-tree-id2734 . -1) (undo-tree-id2736 . -1) (undo-tree-id2738 . -1) (undo-tree-id2740 . -1) (undo-tree-id2742 . -1) (undo-tree-id2744 . -1) (undo-tree-id2746 . -1) (undo-tree-id2748 . -1) (undo-tree-id2750 . -1) (undo-tree-id2752 . -1) (undo-tree-id2754 . -1) (undo-tree-id2756 . -1) (undo-tree-id2758 . -1) (undo-tree-id2760 . -1) (undo-tree-id2762 . -1) (undo-tree-id2764 . -1) (undo-tree-id2766 . -1) (undo-tree-id2768 . -1) (undo-tree-id2770 . -1) (undo-tree-id2772 . -1) (undo-tree-id2774 . -1) (undo-tree-id2776 . -1) (undo-tree-id2778 . -1) (undo-tree-id2780 . -1) (undo-tree-id2782 . -1) (undo-tree-id2784 . -1) (undo-tree-id2786 . -1) (undo-tree-id2788 . -1) (undo-tree-id2790 . -1) (undo-tree-id2792 . -1) (undo-tree-id2794 . -1) (undo-tree-id2796 . -1) (undo-tree-id2798 . -1) (undo-tree-id2800 . -1) (undo-tree-id2802 . -1) (undo-tree-id2804 . -1) (undo-tree-id2806 . -1) (undo-tree-id2808 . -1) (undo-tree-id2810 . -1) (undo-tree-id2812 . -1) (undo-tree-id2814 . -1) (undo-tree-id2816 . -1) (undo-tree-id2818 . -1) (undo-tree-id2820 . -1) (undo-tree-id2822 . -1) (undo-tree-id2824 . -1) (undo-tree-id2826 . -1) (undo-tree-id2828 . -1) (undo-tree-id2830 . -1) (undo-tree-id2832 . -1) (undo-tree-id2834 . -1) (undo-tree-id2836 . -1) (undo-tree-id2838 . -1) (undo-tree-id2840 . -1) (undo-tree-id2842 . -1) (undo-tree-id2844 . -1) (undo-tree-id2846 . -1) (undo-tree-id2848 . -1) (undo-tree-id2850 . -1) (undo-tree-id2852 . -1) (undo-tree-id2854 . -1) (undo-tree-id2856 . -1) (undo-tree-id2858 . -1) (undo-tree-id2860 . -1) (undo-tree-id2862 . -1) (undo-tree-id2864 . -1) (undo-tree-id2866 . -1) (undo-tree-id2868 . -1) (undo-tree-id2870 . -1) (undo-tree-id2872 . -1) (undo-tree-id2874 . -1) (undo-tree-id2876 . -1) (undo-tree-id2878 . -1) (undo-tree-id2880 . -1) (undo-tree-id2882 . -1) (undo-tree-id2884 . -1) (undo-tree-id2886 . -1) (undo-tree-id2888 . -1) (undo-tree-id2890 . -1) (undo-tree-id2892 . -1) (undo-tree-id2894 . -1) (undo-tree-id2896 . -1) (undo-tree-id2898 . -1) (undo-tree-id2900 . -1) (undo-tree-id2902 . -1) (undo-tree-id2904 . -1) (undo-tree-id2906 . -1) (undo-tree-id2908 . -1) (undo-tree-id2910 . -1) (undo-tree-id2912 . -1) (undo-tree-id2914 . -1) (undo-tree-id2916 . -1) (undo-tree-id2918 . -1) (undo-tree-id2920 . -1) (undo-tree-id2922 . -1) (undo-tree-id2924 . -1) (undo-tree-id2926 . -1) (undo-tree-id2928 . -1) (undo-tree-id2930 . -1) (undo-tree-id2932 . -1) (undo-tree-id2934 . -1) (undo-tree-id2936 . -1) (undo-tree-id2938 . -1) (undo-tree-id2940 . -1) (undo-tree-id2942 . -1) (undo-tree-id2944 . -1) (undo-tree-id2946 . -1) (undo-tree-id2948 . -1) (undo-tree-id2950 . -1) (undo-tree-id2952 . -1) (undo-tree-id2954 . -1) (undo-tree-id2956 . -1) (undo-tree-id2958 . -1) (undo-tree-id2960 . -1) (undo-tree-id2962 . -1) (undo-tree-id2964 . -1) (undo-tree-id2966 . -1) (undo-tree-id2968 . -1) (undo-tree-id2970 . -1) (undo-tree-id2972 . -1) (undo-tree-id2974 . -1) (undo-tree-id2976 . -1) (undo-tree-id2978 . -1) (undo-tree-id2980 . -1) (undo-tree-id2982 . -1) (undo-tree-id2984 . -1) (undo-tree-id2986 . -1) (undo-tree-id2988 . -1) (undo-tree-id2990 . -1) (undo-tree-id2992 . -1) (undo-tree-id2994 . -1) (undo-tree-id2996 . -1) (undo-tree-id2998 . -1) (undo-tree-id3000 . -1) (undo-tree-id3002 . -1) (undo-tree-id3004 . -1) (undo-tree-id3006 . -1) (undo-tree-id3008 . -1) (undo-tree-id3010 . -1) (undo-tree-id3012 . -1) (undo-tree-id3014 . -1) (undo-tree-id3016 . -1) (undo-tree-id3018 . -1) (undo-tree-id3020 . -1) (undo-tree-id3022 . -1) (undo-tree-id3024 . -1) (undo-tree-id3026 . -1) (undo-tree-id3028 . -1) (undo-tree-id3030 . -1) (undo-tree-id3032 . -1) (undo-tree-id3034 . -1) (undo-tree-id3036 . -1) (undo-tree-id3038 . -1) (undo-tree-id3040 . -1) (undo-tree-id3042 . -1) (undo-tree-id3044 . -1) (undo-tree-id3046 . -1) (undo-tree-id3048 . -1) (undo-tree-id3050 . -1) (undo-tree-id3052 . -1) (undo-tree-id3054 . -1) (undo-tree-id3056 . -1) (undo-tree-id3058 . -1) (undo-tree-id3060 . -1) (undo-tree-id3062 . -1) (undo-tree-id3064 . -1) (undo-tree-id3066 . -1) (undo-tree-id3068 . -1) (undo-tree-id3070 . -1) (undo-tree-id3072 . -1) (undo-tree-id3074 . -1) (undo-tree-id3076 . -1) (undo-tree-id3078 . -1) (undo-tree-id3080 . -1) (undo-tree-id3082 . -1) (undo-tree-id3084 . -1) (undo-tree-id3086 . -1) (undo-tree-id3088 . -1) (undo-tree-id3090 . -1) (undo-tree-id3092 . -1) (undo-tree-id3094 . -1) (undo-tree-id3096 . -1) (undo-tree-id3098 . -1) (undo-tree-id3100 . -1) (undo-tree-id3102 . -1) (undo-tree-id3104 . -1) (undo-tree-id3106 . -1) (#("e" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8607) (undo-tree-id3108 . -1) (undo-tree-id3110 . -1) (undo-tree-id3112 . -1) (undo-tree-id3114 . -1) (undo-tree-id3116 . -1) (undo-tree-id3118 . -1) (undo-tree-id3120 . -1) (undo-tree-id3122 . -1) (undo-tree-id3124 . -1) (undo-tree-id3126 . -1) (undo-tree-id3128 . -1) (undo-tree-id3130 . -1) (undo-tree-id3132 . -1) (undo-tree-id3134 . -1) (undo-tree-id3136 . -1) (undo-tree-id3138 . -1) (undo-tree-id3140 . -1) (undo-tree-id3142 . -1) (undo-tree-id3144 . -1) (undo-tree-id3146 . -1) (undo-tree-id3148 . -1) (undo-tree-id3150 . -1) (undo-tree-id3152 . -1) (undo-tree-id3154 . -1) (undo-tree-id3156 . -1) (undo-tree-id3158 . -1) (undo-tree-id3160 . -1) (undo-tree-id3162 . -1) (undo-tree-id3164 . -1) (undo-tree-id3166 . -1) (undo-tree-id3168 . -1) (undo-tree-id3170 . -1) (undo-tree-id3172 . -1) (undo-tree-id3174 . -1) (undo-tree-id3176 . -1) (undo-tree-id3178 . -1) (undo-tree-id3180 . -1) (undo-tree-id3182 . -1) (undo-tree-id3184 . -1) (undo-tree-id3186 . -1) (undo-tree-id3188 . -1) (undo-tree-id3190 . -1) (undo-tree-id3192 . -1) (undo-tree-id3194 . -1) (undo-tree-id3196 . -1) (undo-tree-id3198 . -1) (undo-tree-id3200 . -1) (undo-tree-id3202 . -1) (undo-tree-id3204 . -1) (undo-tree-id3206 . -1) (undo-tree-id3208 . -1) (undo-tree-id3210 . -1) (undo-tree-id3212 . -1) (undo-tree-id3214 . -1) (undo-tree-id3216 . -1) (undo-tree-id3218 . -1) (undo-tree-id3220 . -1) (undo-tree-id3222 . -1) (undo-tree-id3224 . -1) (undo-tree-id3226 . -1) (undo-tree-id3228 . -1) (undo-tree-id3230 . -1) (undo-tree-id3232 . -1) (undo-tree-id3234 . -1) (undo-tree-id3236 . -1) (undo-tree-id3238 . -1) (undo-tree-id3240 . -1) (undo-tree-id3242 . -1) (undo-tree-id3244 . -1) (undo-tree-id3246 . -1) (undo-tree-id3248 . -1) (undo-tree-id3250 . -1) (undo-tree-id3252 . -1) (undo-tree-id3254 . -1) (undo-tree-id3256 . -1) (undo-tree-id3258 . -1) (undo-tree-id3260 . -1) (undo-tree-id3262 . -1) (undo-tree-id3264 . -1) (undo-tree-id3266 . -1) (undo-tree-id3268 . -1) (undo-tree-id3270 . -1) (undo-tree-id3272 . -1) (undo-tree-id3274 . -1) (undo-tree-id3276 . -1) (undo-tree-id3278 . -1) (undo-tree-id3280 . -1) (undo-tree-id3282 . -1) (undo-tree-id3284 . -1) (undo-tree-id3286 . -1) (undo-tree-id3288 . -1) (undo-tree-id3290 . -1) (undo-tree-id3292 . -1) (undo-tree-id3294 . -1) (undo-tree-id3296 . -1) (undo-tree-id3298 . -1) (undo-tree-id3300 . -1) (undo-tree-id3302 . -1) (undo-tree-id3304 . -1) (undo-tree-id3306 . -1) (undo-tree-id3308 . -1) (undo-tree-id3310 . -1) (undo-tree-id3312 . -1) (undo-tree-id3314 . -1) (undo-tree-id3316 . -1) (undo-tree-id3318 . -1) (undo-tree-id3320 . -1) (undo-tree-id3322 . -1) (undo-tree-id3324 . -1) (undo-tree-id3326 . -1) (undo-tree-id3328 . -1) (undo-tree-id3330 . -1) (undo-tree-id3332 . -1) (undo-tree-id3334 . -1) (undo-tree-id3336 . -1) (undo-tree-id3338 . -1) (undo-tree-id3340 . -1) (undo-tree-id3342 . -1) (undo-tree-id3344 . -1) (undo-tree-id3346 . -1) (undo-tree-id3348 . -1) (undo-tree-id3350 . -1) (undo-tree-id3352 . -1) (undo-tree-id3354 . -1) (undo-tree-id3356 . -1) (undo-tree-id3358 . -1) (undo-tree-id3360 . -1) (undo-tree-id3362 . -1) (undo-tree-id3364 . -1) (undo-tree-id3366 . -1) (undo-tree-id3368 . -1) (undo-tree-id3370 . -1) (undo-tree-id3372 . -1) (undo-tree-id3374 . -1) (undo-tree-id3376 . -1) (undo-tree-id3378 . -1) (undo-tree-id3380 . -1) (undo-tree-id3382 . -1) (undo-tree-id3384 . -1) (undo-tree-id3386 . -1) (undo-tree-id3388 . -1) (undo-tree-id3390 . -1) (undo-tree-id3392 . -1) (undo-tree-id3394 . -1) (undo-tree-id3396 . -1) (undo-tree-id3398 . -1) (undo-tree-id3400 . -1) (undo-tree-id3402 . -1) (undo-tree-id3404 . -1) (undo-tree-id3406 . -1) (undo-tree-id3408 . -1) (undo-tree-id3410 . -1) (undo-tree-id3412 . -1) (undo-tree-id3414 . -1) (undo-tree-id3416 . -1) (undo-tree-id3418 . -1) (undo-tree-id3420 . -1) (undo-tree-id3422 . -1) (undo-tree-id3424 . -1) (undo-tree-id3426 . -1) (undo-tree-id3428 . -1) (undo-tree-id3430 . -1) (undo-tree-id3432 . -1) (undo-tree-id3434 . -1) (undo-tree-id3436 . -1) (undo-tree-id3438 . -1) (undo-tree-id3440 . -1) (undo-tree-id3442 . -1) (undo-tree-id3444 . -1) (undo-tree-id3446 . -1) (undo-tree-id3448 . -1) (undo-tree-id3450 . -1) (undo-tree-id3452 . -1) (undo-tree-id3454 . -1) (undo-tree-id3456 . -1) (undo-tree-id3458 . -1) (undo-tree-id3460 . -1) (undo-tree-id3462 . -1) (undo-tree-id3464 . -1) (undo-tree-id3466 . -1) (undo-tree-id3468 . -1) (undo-tree-id3470 . -1) (undo-tree-id3472 . -1) (undo-tree-id3474 . -1) (undo-tree-id3476 . -1) (undo-tree-id3478 . -1) (undo-tree-id3480 . -1) (undo-tree-id3482 . -1) (undo-tree-id3484 . -1) (undo-tree-id3486 . -1) (undo-tree-id3488 . -1) (undo-tree-id3490 . -1) (undo-tree-id3492 . -1) (undo-tree-id3494 . -1) (undo-tree-id3496 . -1) (undo-tree-id3498 . -1) (undo-tree-id3500 . -1) (undo-tree-id3502 . -1) (undo-tree-id3504 . -1) (undo-tree-id3506 . -1) (undo-tree-id3508 . -1) (undo-tree-id3510 . -1) (undo-tree-id3512 . -1) (undo-tree-id3514 . -1) (undo-tree-id3516 . -1) (undo-tree-id3518 . -1) (undo-tree-id3520 . -1) (undo-tree-id3522 . -1) (undo-tree-id3524 . -1) (undo-tree-id3526 . -1) (undo-tree-id3528 . -1) (undo-tree-id3530 . -1) (undo-tree-id3532 . -1) (undo-tree-id3534 . -1) (undo-tree-id3536 . -1) (undo-tree-id3538 . -1) (undo-tree-id3540 . -1) (undo-tree-id3542 . -1) (undo-tree-id3544 . -1) (undo-tree-id3546 . -1) (undo-tree-id3548 . -1) (undo-tree-id3550 . -1) (undo-tree-id3552 . -1) (undo-tree-id3554 . -1) (undo-tree-id3556 . -1) (undo-tree-id3558 . -1) (undo-tree-id3560 . -1) (undo-tree-id3562 . -1) (undo-tree-id3564 . -1) (undo-tree-id3566 . -1) (undo-tree-id3568 . -1) (undo-tree-id3570 . -1) (undo-tree-id3572 . -1) (undo-tree-id3574 . -1) (undo-tree-id3576 . -1) (undo-tree-id3578 . -1) (undo-tree-id3580 . -1) (undo-tree-id3582 . -1) (undo-tree-id3584 . -1) (undo-tree-id3586 . -1) (undo-tree-id3588 . -1) (undo-tree-id3590 . -1) (undo-tree-id3592 . -1) (undo-tree-id3594 . -1) (undo-tree-id3596 . -1) (undo-tree-id3598 . -1) (undo-tree-id3600 . -1) (undo-tree-id3602 . -1) (undo-tree-id3604 . -1) (undo-tree-id3606 . -1) (undo-tree-id3608 . -1) (undo-tree-id3610 . -1) (undo-tree-id3612 . -1) (undo-tree-id3614 . -1) (undo-tree-id3616 . -1) (undo-tree-id3618 . -1) (undo-tree-id3620 . -1) (undo-tree-id3622 . -1) (undo-tree-id3624 . -1) (undo-tree-id3626 . -1) (undo-tree-id3628 . -1) (undo-tree-id3630 . -1) (undo-tree-id3632 . -1) (#("t" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8608) (undo-tree-id3634 . -1) (undo-tree-id3636 . -1) (undo-tree-id3638 . -1) (undo-tree-id3640 . -1) (undo-tree-id3642 . -1) (undo-tree-id3644 . -1) (undo-tree-id3646 . -1) (undo-tree-id3648 . -1) (undo-tree-id3650 . -1) (undo-tree-id3652 . -1) (undo-tree-id3654 . -1) (undo-tree-id3656 . -1) (undo-tree-id3658 . -1) (undo-tree-id3660 . -1) (undo-tree-id3662 . -1) (undo-tree-id3664 . -1) (undo-tree-id3666 . -1) (undo-tree-id3668 . -1) (undo-tree-id3670 . -1) (undo-tree-id3672 . -1) (undo-tree-id3674 . -1) (undo-tree-id3676 . -1) (undo-tree-id3678 . -1) (undo-tree-id3680 . -1) (undo-tree-id3682 . -1) (undo-tree-id3684 . -1) (undo-tree-id3686 . -1) (undo-tree-id3688 . -1) (undo-tree-id3690 . -1) (undo-tree-id3692 . -1) (undo-tree-id3694 . -1) (undo-tree-id3696 . -1) (undo-tree-id3698 . -1) (undo-tree-id3700 . -1) (undo-tree-id3702 . -1) (undo-tree-id3704 . -1) (undo-tree-id3706 . -1) (undo-tree-id3708 . -1) (undo-tree-id3710 . -1) (undo-tree-id3712 . -1) (undo-tree-id3714 . -1) (undo-tree-id3716 . -1) (undo-tree-id3718 . -1) (undo-tree-id3720 . -1) (undo-tree-id3722 . -1) (undo-tree-id3724 . -1) (undo-tree-id3726 . -1) (undo-tree-id3728 . -1) (undo-tree-id3730 . -1) (undo-tree-id3732 . -1) (undo-tree-id3734 . -1) (undo-tree-id3736 . -1) (undo-tree-id3738 . -1) (undo-tree-id3740 . -1) (undo-tree-id3742 . -1) (undo-tree-id3744 . -1) (undo-tree-id3746 . -1) (undo-tree-id3748 . -1) (undo-tree-id3750 . -1) (undo-tree-id3752 . -1) (undo-tree-id3754 . -1) (undo-tree-id3756 . -1) (undo-tree-id3758 . -1) (undo-tree-id3760 . -1) (undo-tree-id3762 . -1) (undo-tree-id3764 . -1) (undo-tree-id3766 . -1) (undo-tree-id3768 . -1) (undo-tree-id3770 . -1) (undo-tree-id3772 . -1) (undo-tree-id3774 . -1) (undo-tree-id3776 . -1) (undo-tree-id3778 . -1) (undo-tree-id3780 . -1) (undo-tree-id3782 . -1) (undo-tree-id3784 . -1) (undo-tree-id3786 . -1) (undo-tree-id3788 . -1) (undo-tree-id3790 . -1) (undo-tree-id3792 . -1) (undo-tree-id3794 . -1) (undo-tree-id3796 . -1) (undo-tree-id3798 . -1) (undo-tree-id3800 . -1) (undo-tree-id3802 . -1) (undo-tree-id3804 . -1) (undo-tree-id3806 . -1) (undo-tree-id3808 . -1) (undo-tree-id3810 . -1) (undo-tree-id3812 . -1) (undo-tree-id3814 . -1) (undo-tree-id3816 . -1) (undo-tree-id3818 . -1) (undo-tree-id3820 . -1) (undo-tree-id3822 . -1) (undo-tree-id3824 . -1) (undo-tree-id3826 . -1) (undo-tree-id3828 . -1) (undo-tree-id3830 . -1) (undo-tree-id3832 . -1) (undo-tree-id3834 . -1) (undo-tree-id3836 . -1) (undo-tree-id3838 . -1) (undo-tree-id3840 . -1) (undo-tree-id3842 . -1) (undo-tree-id3844 . -1) (undo-tree-id3846 . -1) (undo-tree-id3848 . -1) (undo-tree-id3850 . -1) (undo-tree-id3852 . -1) (undo-tree-id3854 . -1) (undo-tree-id3856 . -1) (undo-tree-id3858 . -1) (undo-tree-id3860 . -1) (undo-tree-id3862 . -1) (undo-tree-id3864 . -1) (undo-tree-id3866 . -1) (undo-tree-id3868 . -1) (undo-tree-id3870 . -1) (undo-tree-id3872 . -1) (undo-tree-id3874 . -1) (undo-tree-id3876 . -1) (undo-tree-id3878 . -1) (undo-tree-id3880 . -1) (undo-tree-id3882 . -1) (undo-tree-id3884 . -1) (undo-tree-id3886 . -1) (undo-tree-id3888 . -1) (undo-tree-id3890 . -1) (undo-tree-id3892 . -1) (undo-tree-id3894 . -1) (undo-tree-id3896 . -1) (undo-tree-id3898 . -1) (undo-tree-id3900 . -1) (undo-tree-id3902 . -1) (undo-tree-id3904 . -1) (undo-tree-id3906 . -1) (undo-tree-id3908 . -1) (undo-tree-id3910 . -1) (undo-tree-id3912 . -1) (undo-tree-id3914 . -1) (undo-tree-id3916 . -1) (undo-tree-id3918 . -1) (undo-tree-id3920 . -1) (undo-tree-id3922 . -1) (undo-tree-id3924 . -1) (undo-tree-id3926 . -1) (undo-tree-id3928 . -1) (undo-tree-id3930 . -1) (undo-tree-id3932 . -1) (undo-tree-id3934 . -1) (undo-tree-id3936 . -1) (undo-tree-id3938 . -1) (undo-tree-id3940 . -1) (undo-tree-id3942 . -1) (undo-tree-id3944 . -1) (undo-tree-id3946 . -1) (undo-tree-id3948 . -1) (undo-tree-id3950 . -1) (undo-tree-id3952 . -1) (undo-tree-id3954 . -1) (undo-tree-id3956 . -1) (undo-tree-id3958 . -1) (undo-tree-id3960 . -1) (undo-tree-id3962 . -1) (undo-tree-id3964 . -1) (undo-tree-id3966 . -1) (undo-tree-id3968 . -1) (undo-tree-id3970 . -1) (undo-tree-id3972 . -1) (undo-tree-id3974 . -1) (undo-tree-id3976 . -1) (undo-tree-id3978 . -1) (undo-tree-id3980 . -1) (undo-tree-id3982 . -1) (undo-tree-id3984 . -1) (undo-tree-id3986 . -1) (undo-tree-id3988 . -1) (undo-tree-id3990 . -1) (undo-tree-id3992 . -1) (undo-tree-id3994 . -1) (undo-tree-id3996 . -1) (undo-tree-id3998 . -1) (undo-tree-id4000 . -1) (undo-tree-id4002 . -1) (undo-tree-id4004 . -1) (undo-tree-id4006 . -1) (undo-tree-id4008 . -1) (undo-tree-id4010 . -1) (undo-tree-id4012 . -1) (undo-tree-id4014 . -1) (undo-tree-id4016 . -1) (undo-tree-id4018 . -1) (undo-tree-id4020 . -1) (undo-tree-id4022 . -1) (undo-tree-id4024 . -1) (undo-tree-id4026 . -1) (undo-tree-id4028 . -1) (undo-tree-id4030 . -1) (undo-tree-id4032 . -1) (undo-tree-id4034 . -1) (undo-tree-id4036 . -1) (undo-tree-id4038 . -1) (undo-tree-id4040 . -1) (undo-tree-id4042 . -1) (undo-tree-id4044 . -1) (undo-tree-id4046 . -1) (undo-tree-id4048 . -1) (undo-tree-id4050 . -1) (undo-tree-id4052 . -1) (undo-tree-id4054 . -1) (undo-tree-id4056 . -1) (undo-tree-id4058 . -1) (undo-tree-id4060 . -1) (undo-tree-id4062 . -1) (undo-tree-id4064 . -1) (undo-tree-id4066 . -1) (undo-tree-id4068 . -1) (#("e" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8609) (undo-tree-id4070 . -1) (undo-tree-id4072 . -1) (undo-tree-id4074 . -1) (undo-tree-id4076 . -1) (undo-tree-id4078 . -1) (undo-tree-id4080 . -1) (undo-tree-id4082 . -1) (undo-tree-id4084 . -1) (undo-tree-id4086 . -1) (undo-tree-id4088 . -1) (undo-tree-id4090 . -1) (undo-tree-id4092 . -1) (undo-tree-id4094 . -1) (undo-tree-id4096 . -1) (undo-tree-id4098 . -1) (undo-tree-id4100 . -1) (undo-tree-id4102 . -1) (undo-tree-id4104 . -1) (undo-tree-id4106 . -1) (undo-tree-id4108 . -1) (undo-tree-id4110 . -1) (undo-tree-id4112 . -1) (undo-tree-id4114 . -1) (undo-tree-id4116 . -1) (undo-tree-id4118 . -1) (undo-tree-id4120 . -1) (undo-tree-id4122 . -1) (undo-tree-id4124 . -1) (undo-tree-id4126 . -1) (undo-tree-id4128 . -1) (undo-tree-id4130 . -1) (undo-tree-id4132 . -1) (undo-tree-id4134 . -1) (undo-tree-id4136 . -1) (undo-tree-id4138 . -1) (undo-tree-id4140 . -1) (undo-tree-id4142 . -1) (undo-tree-id4144 . -1) (undo-tree-id4146 . -1) (undo-tree-id4148 . -1) (undo-tree-id4150 . -1) (undo-tree-id4152 . -1) (undo-tree-id4154 . -1) (undo-tree-id4156 . -1) (undo-tree-id4158 . -1) (undo-tree-id4160 . -1) (undo-tree-id4162 . -1) (undo-tree-id4164 . -1) (undo-tree-id4166 . -1) (undo-tree-id4168 . -1) (undo-tree-id4170 . -1) (undo-tree-id4172 . -1) (undo-tree-id4174 . -1) (undo-tree-id4176 . -1) (undo-tree-id4178 . -1) (undo-tree-id4180 . -1) (undo-tree-id4182 . -1) (undo-tree-id4184 . -1) (undo-tree-id4186 . -1) (undo-tree-id4188 . -1) (undo-tree-id4190 . -1) (undo-tree-id4192 . -1) (undo-tree-id4194 . -1) (undo-tree-id4196 . -1) (undo-tree-id4198 . -1) (undo-tree-id4200 . -1) (undo-tree-id4202 . -1) (undo-tree-id4204 . -1) (undo-tree-id4206 . -1) (undo-tree-id4208 . -1) (undo-tree-id4210 . -1) (undo-tree-id4212 . -1) (undo-tree-id4214 . -1) (undo-tree-id4216 . -1) (undo-tree-id4218 . -1) (undo-tree-id4220 . -1) (undo-tree-id4222 . -1) (undo-tree-id4224 . -1) (undo-tree-id4226 . -1) (undo-tree-id4228 . -1) (undo-tree-id4230 . -1) (undo-tree-id4232 . -1) (undo-tree-id4234 . -1) (undo-tree-id4236 . -1) (undo-tree-id4238 . -1) (undo-tree-id4240 . -1) (undo-tree-id4242 . -1) (undo-tree-id4244 . -1) (undo-tree-id4246 . -1) (undo-tree-id4248 . -1) (undo-tree-id4250 . -1) (undo-tree-id4252 . -1) (undo-tree-id4254 . -1) (undo-tree-id4256 . -1) (undo-tree-id4258 . -1) (undo-tree-id4260 . -1) (undo-tree-id4262 . -1) (undo-tree-id4264 . -1) (undo-tree-id4266 . -1) (undo-tree-id4268 . -1) (undo-tree-id4270 . -1) (undo-tree-id4272 . -1) (undo-tree-id4274 . -1) (undo-tree-id4276 . -1) (undo-tree-id4278 . -1) (undo-tree-id4280 . -1) (undo-tree-id4282 . -1) (undo-tree-id4284 . -1) (undo-tree-id4286 . -1) (undo-tree-id4288 . -1) (undo-tree-id4290 . -1) (undo-tree-id4292 . -1) (undo-tree-id4294 . -1) (undo-tree-id4296 . -1) (undo-tree-id4298 . -1) (undo-tree-id4300 . -1) (undo-tree-id4302 . -1) (undo-tree-id4304 . -1) (undo-tree-id4306 . -1) (undo-tree-id4308 . -1) (undo-tree-id4310 . -1) (undo-tree-id4312 . -1) (undo-tree-id4314 . -1) (undo-tree-id4316 . -1) (undo-tree-id4318 . -1) (undo-tree-id4320 . -1) (undo-tree-id4322 . -1) (undo-tree-id4324 . -1) (undo-tree-id4326 . -1) (undo-tree-id4328 . -1) (undo-tree-id4330 . -1) (undo-tree-id4332 . -1) (undo-tree-id4334 . -1) (undo-tree-id4336 . -1) (undo-tree-id4338 . -1) (undo-tree-id4340 . -1) (undo-tree-id4342 . -1) (undo-tree-id4344 . -1) (undo-tree-id4346 . -1) (undo-tree-id4348 . -1) (undo-tree-id4350 . -1) (undo-tree-id4352 . -1) (undo-tree-id4354 . -1) (undo-tree-id4356 . -1) (undo-tree-id4358 . -1) (undo-tree-id4360 . -1) (undo-tree-id4362 . -1) (undo-tree-id4364 . -1) (undo-tree-id4366 . -1) (undo-tree-id4368 . -1) (undo-tree-id4370 . -1) (undo-tree-id4372 . -1) (undo-tree-id4374 . -1) (undo-tree-id4376 . -1) (undo-tree-id4378 . -1) (undo-tree-id4380 . -1) (undo-tree-id4382 . -1) (undo-tree-id4384 . -1) (undo-tree-id4386 . -1) (undo-tree-id4388 . -1) (undo-tree-id4390 . -1) (undo-tree-id4392 . -1) (undo-tree-id4394 . -1) (undo-tree-id4396 . -1) (undo-tree-id4398 . -1) (undo-tree-id4400 . -1) (undo-tree-id4402 . -1) (undo-tree-id4404 . -1) (undo-tree-id4406 . -1) (undo-tree-id4408 . -1) (undo-tree-id4410 . -1) (undo-tree-id4412 . -1) (undo-tree-id4414 . -1) (undo-tree-id4416 . -1) (undo-tree-id4418 . -1) (undo-tree-id4420 . -1) (undo-tree-id4422 . -1) (undo-tree-id4424 . -1) (undo-tree-id4426 . -1) (undo-tree-id4428 . -1) (undo-tree-id4430 . -1) (undo-tree-id4432 . -1) (undo-tree-id4434 . -1) (undo-tree-id4436 . -1) (undo-tree-id4438 . -1) (undo-tree-id4440 . -1) (undo-tree-id4442 . -1) (undo-tree-id4444 . -1) (undo-tree-id4446 . -1) (undo-tree-id4448 . -1) (undo-tree-id4450 . -1) (undo-tree-id4452 . -1) (undo-tree-id4454 . -1) (undo-tree-id4456 . -1) (undo-tree-id4458 . -1) (#("r" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8610) (undo-tree-id4459 . -1) (undo-tree-id4461 . -1) (undo-tree-id4463 . -1) (undo-tree-id4465 . -1) (undo-tree-id4467 . -1) (undo-tree-id4469 . -1) (undo-tree-id4471 . -1) (undo-tree-id4473 . -1) (undo-tree-id4475 . -1) (undo-tree-id4477 . -1) (undo-tree-id4479 . -1) (undo-tree-id4481 . -1) (undo-tree-id4483 . -1) (undo-tree-id4485 . -1) (undo-tree-id4487 . -1) (undo-tree-id4489 . -1) (undo-tree-id4491 . -1) (undo-tree-id4493 . -1) (undo-tree-id4495 . -1) (undo-tree-id4497 . -1) (undo-tree-id4499 . -1) (undo-tree-id4501 . -1) (undo-tree-id4503 . -1) (undo-tree-id4505 . -1) (undo-tree-id4507 . -1) (undo-tree-id4509 . -1) (undo-tree-id4511 . -1) (undo-tree-id4513 . -1) (undo-tree-id4515 . -1) (undo-tree-id4517 . -1) (undo-tree-id4519 . -1) (undo-tree-id4521 . -1) (undo-tree-id4523 . -1) (undo-tree-id4525 . -1) (undo-tree-id4527 . -1) (undo-tree-id4529 . -1) (undo-tree-id4531 . -1) (undo-tree-id4533 . -1) (undo-tree-id4535 . -1) (undo-tree-id4537 . -1) (undo-tree-id4539 . -1) (undo-tree-id4541 . -1) (undo-tree-id4543 . -1) (undo-tree-id4545 . -1) (undo-tree-id4547 . -1) (undo-tree-id4549 . -1) (undo-tree-id4551 . -1) (undo-tree-id4553 . -1) (undo-tree-id4555 . -1) (undo-tree-id4557 . -1) (undo-tree-id4559 . -1) (undo-tree-id4561 . -1) (undo-tree-id4563 . -1) (undo-tree-id4565 . -1) (undo-tree-id4567 . -1) (undo-tree-id4569 . -1) (undo-tree-id4571 . -1) (undo-tree-id4573 . -1) (undo-tree-id4575 . -1) (undo-tree-id4577 . -1) (undo-tree-id4579 . -1) (undo-tree-id4581 . -1) (undo-tree-id4583 . -1) (undo-tree-id4585 . -1) (undo-tree-id4587 . -1) (undo-tree-id4589 . -1) (undo-tree-id4591 . -1) (undo-tree-id4593 . -1) (undo-tree-id4595 . -1) (undo-tree-id4597 . -1) (undo-tree-id4599 . -1) (undo-tree-id4601 . -1) (undo-tree-id4603 . -1) (undo-tree-id4605 . -1) (undo-tree-id4607 . -1) (undo-tree-id4609 . -1) (undo-tree-id4611 . -1) (undo-tree-id4613 . -1) (undo-tree-id4615 . -1) (undo-tree-id4617 . -1) (undo-tree-id4619 . -1) (undo-tree-id4621 . -1) (undo-tree-id4623 . -1) (undo-tree-id4625 . -1) (undo-tree-id4627 . -1) (undo-tree-id4629 . -1) (undo-tree-id4631 . -1) (undo-tree-id4633 . -1) (undo-tree-id4635 . -1) (undo-tree-id4637 . -1) (undo-tree-id4639 . -1) (undo-tree-id4641 . -1) (undo-tree-id4643 . -1) (undo-tree-id4645 . -1) (undo-tree-id4647 . -1) (undo-tree-id4649 . -1) (undo-tree-id4651 . -1) (undo-tree-id4653 . -1) (undo-tree-id4655 . -1) (undo-tree-id4657 . -1) (undo-tree-id4659 . -1) (undo-tree-id4661 . -1) (undo-tree-id4663 . -1) (undo-tree-id4665 . -1) (undo-tree-id4667 . -1) (undo-tree-id4669 . -1) (undo-tree-id4671 . -1) (undo-tree-id4673 . -1) (undo-tree-id4675 . -1) (undo-tree-id4677 . -1) (undo-tree-id4679 . -1) (undo-tree-id4681 . -1) (undo-tree-id4683 . -1) (undo-tree-id4685 . -1) (undo-tree-id4687 . -1) (undo-tree-id4689 . -1) (undo-tree-id4691 . -1) (undo-tree-id4693 . -1) (undo-tree-id4695 . -1) (undo-tree-id4697 . -1) (undo-tree-id4699 . -1) (undo-tree-id4701 . -1) (undo-tree-id4703 . -1) (undo-tree-id4705 . -1) (undo-tree-id4707 . -1) (undo-tree-id4709 . -1) (undo-tree-id4711 . -1) (undo-tree-id4713 . -1) (undo-tree-id4715 . -1) (undo-tree-id4717 . -1) (undo-tree-id4719 . -1) (undo-tree-id4721 . -1) (undo-tree-id4723 . -1) (undo-tree-id4725 . -1) (undo-tree-id4727 . -1) (undo-tree-id4729 . -1) (undo-tree-id4731 . -1) (undo-tree-id4733 . -1) (undo-tree-id4735 . -1) (undo-tree-id4737 . -1) (undo-tree-id4739 . -1) (undo-tree-id4741 . -1) (undo-tree-id4743 . -1) (undo-tree-id4745 . -1) (undo-tree-id4747 . -1) (undo-tree-id4749 . -1) (undo-tree-id4751 . -1) (undo-tree-id4753 . -1) (undo-tree-id4755 . -1) (undo-tree-id4757 . -1) (undo-tree-id4759 . -1) (undo-tree-id4761 . -1) (undo-tree-id4763 . -1) (undo-tree-id4765 . -1) (undo-tree-id4767 . -1) (undo-tree-id4769 . -1) (undo-tree-id4771 . -1) (undo-tree-id4773 . -1) (undo-tree-id4775 . -1) (undo-tree-id4777 . -1) (undo-tree-id4779 . -1) (undo-tree-id4781 . -1) (undo-tree-id4783 . -1) (undo-tree-id4785 . -1) (undo-tree-id4787 . -1) (undo-tree-id4789 . -1) (undo-tree-id4791 . -1) (undo-tree-id4793 . -1) (undo-tree-id4795 . -1) (undo-tree-id4797 . -1) (undo-tree-id4799 . -1) (#("/" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8611) (undo-tree-id4800 . -1) (undo-tree-id4802 . -1) (undo-tree-id4804 . -1) (undo-tree-id4806 . -1) (undo-tree-id4808 . -1) (undo-tree-id4810 . -1) (undo-tree-id4812 . -1) (undo-tree-id4814 . -1) (undo-tree-id4816 . -1) (undo-tree-id4818 . -1) (undo-tree-id4820 . -1) (undo-tree-id4822 . -1) (undo-tree-id4824 . -1) (undo-tree-id4826 . -1) (undo-tree-id4828 . -1) (undo-tree-id4830 . -1) (undo-tree-id4832 . -1) (undo-tree-id4834 . -1) (undo-tree-id4836 . -1) (undo-tree-id4838 . -1) (undo-tree-id4840 . -1) (undo-tree-id4842 . -1) (undo-tree-id4844 . -1) (undo-tree-id4846 . -1) (undo-tree-id4848 . -1) (undo-tree-id4850 . -1) (undo-tree-id4852 . -1) (undo-tree-id4854 . -1) (undo-tree-id4856 . -1) (undo-tree-id4858 . -1) (undo-tree-id4860 . -1) (undo-tree-id4862 . -1) (undo-tree-id4864 . -1) (undo-tree-id4866 . -1) (undo-tree-id4868 . -1) (undo-tree-id4870 . -1) (undo-tree-id4872 . -1) (undo-tree-id4874 . -1) (undo-tree-id4876 . -1) (undo-tree-id4878 . -1) (undo-tree-id4880 . -1) (undo-tree-id4882 . -1) (undo-tree-id4884 . -1) (undo-tree-id4886 . -1) (undo-tree-id4888 . -1) (undo-tree-id4890 . -1) (undo-tree-id4892 . -1) (undo-tree-id4894 . -1) (undo-tree-id4896 . -1) (undo-tree-id4898 . -1) (undo-tree-id4900 . -1) (undo-tree-id4902 . -1) (undo-tree-id4904 . -1) (undo-tree-id4906 . -1) (undo-tree-id4908 . -1) (undo-tree-id4910 . -1) (undo-tree-id4912 . -1) (undo-tree-id4914 . -1) (undo-tree-id4916 . -1) (undo-tree-id4918 . -1) (undo-tree-id4920 . -1) (undo-tree-id4922 . -1) (undo-tree-id4924 . -1) (undo-tree-id4926 . -1) (undo-tree-id4928 . -1) (undo-tree-id4930 . -1) (undo-tree-id4932 . -1) (undo-tree-id4934 . -1) (undo-tree-id4936 . -1) (undo-tree-id4938 . -1) (undo-tree-id4940 . -1) (undo-tree-id4942 . -1) (undo-tree-id4944 . -1) (undo-tree-id4946 . -1) (undo-tree-id4948 . -1) (undo-tree-id4950 . -1) (undo-tree-id4952 . -1) (undo-tree-id4954 . -1) (undo-tree-id4956 . -1) (undo-tree-id4958 . -1) (undo-tree-id4960 . -1) (undo-tree-id4962 . -1) (undo-tree-id4964 . -1) (undo-tree-id4966 . -1) (undo-tree-id4968 . -1) (undo-tree-id4970 . -1) (undo-tree-id4972 . -1) (undo-tree-id4974 . -1) (undo-tree-id4976 . -1) (undo-tree-id4978 . -1) (undo-tree-id4980 . -1) (undo-tree-id4982 . -1) (undo-tree-id4984 . -1) (undo-tree-id4986 . -1) (undo-tree-id4988 . -1) (undo-tree-id4990 . -1) (undo-tree-id4992 . -1) (undo-tree-id4994 . -1) (undo-tree-id4996 . -1) (undo-tree-id4998 . -1) (undo-tree-id5000 . -1) (undo-tree-id5002 . -1) (undo-tree-id5004 . -1) (undo-tree-id5006 . -1) (undo-tree-id5008 . -1) (undo-tree-id5010 . -1) (undo-tree-id5012 . -1) (undo-tree-id5014 . -1) (undo-tree-id5016 . -1) (undo-tree-id5018 . -1) (undo-tree-id5020 . -1) (undo-tree-id5022 . -1) (undo-tree-id5024 . -1) (undo-tree-id5026 . -1) (undo-tree-id5028 . -1) (undo-tree-id5030 . -1) (undo-tree-id5032 . -1) (undo-tree-id5034 . -1) (undo-tree-id5036 . -1) (undo-tree-id5038 . -1) (undo-tree-id5040 . -1) (undo-tree-id5042 . -1) (undo-tree-id5044 . -1) (undo-tree-id5046 . -1) (undo-tree-id5048 . -1) (undo-tree-id5050 . -1) (undo-tree-id5052 . -1) (undo-tree-id5054 . -1) (undo-tree-id5056 . -1) (undo-tree-id5058 . -1) (undo-tree-id5060 . -1) (undo-tree-id5062 . -1) (undo-tree-id5064 . -1) (undo-tree-id5066 . -1) (undo-tree-id5068 . -1) (undo-tree-id5070 . -1) (undo-tree-id5072 . -1) (undo-tree-id5074 . -1) (undo-tree-id5076 . -1) (undo-tree-id5078 . -1) (undo-tree-id5080 . -1) (undo-tree-id5082 . -1) (undo-tree-id5084 . -1) (undo-tree-id5086 . -1) (undo-tree-id5088 . -1) (undo-tree-id5090 . -1) (undo-tree-id5092 . -1) (undo-tree-id5094 . -1) (undo-tree-id5096 . -1) (undo-tree-id5098 . -1) (undo-tree-id5100 . -1) (undo-tree-id5102 . -1) (undo-tree-id5104 . -1) (undo-tree-id5106 . -1) (#("m" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8612) (undo-tree-id5107 . -1) (undo-tree-id5109 . -1) (undo-tree-id5111 . -1) (undo-tree-id5113 . -1) (undo-tree-id5115 . -1) (undo-tree-id5117 . -1) (undo-tree-id5119 . -1) (undo-tree-id5121 . -1) (undo-tree-id5123 . -1) (undo-tree-id5125 . -1) (undo-tree-id5127 . -1) (undo-tree-id5129 . -1) (undo-tree-id5131 . -1) (undo-tree-id5133 . -1) (undo-tree-id5135 . -1) (undo-tree-id5137 . -1) (undo-tree-id5139 . -1) (undo-tree-id5141 . -1) (undo-tree-id5143 . -1) (undo-tree-id5145 . -1) (undo-tree-id5147 . -1) (undo-tree-id5149 . -1) (undo-tree-id5151 . -1) (undo-tree-id5153 . -1) (undo-tree-id5155 . -1) (undo-tree-id5157 . -1) (undo-tree-id5159 . -1) (undo-tree-id5161 . -1) (undo-tree-id5163 . -1) (undo-tree-id5165 . -1) (undo-tree-id5167 . -1) (undo-tree-id5169 . -1) (undo-tree-id5171 . -1) (undo-tree-id5173 . -1) (undo-tree-id5175 . -1) (undo-tree-id5177 . -1) (undo-tree-id5179 . -1) (undo-tree-id5181 . -1) (undo-tree-id5183 . -1) (undo-tree-id5185 . -1) (undo-tree-id5187 . -1) (undo-tree-id5189 . -1) (undo-tree-id5191 . -1) (undo-tree-id5193 . -1) (undo-tree-id5195 . -1) (undo-tree-id5197 . -1) (undo-tree-id5199 . -1) (undo-tree-id5201 . -1) (undo-tree-id5203 . -1) (undo-tree-id5205 . -1) (undo-tree-id5207 . -1) (undo-tree-id5209 . -1) (undo-tree-id5211 . -1) (undo-tree-id5213 . -1) (undo-tree-id5215 . -1) (undo-tree-id5217 . -1) (undo-tree-id5219 . -1) (undo-tree-id5221 . -1) (undo-tree-id5223 . -1) (undo-tree-id5225 . -1) (undo-tree-id5227 . -1) (undo-tree-id5229 . -1) (undo-tree-id5231 . -1) (undo-tree-id5233 . -1) (undo-tree-id5235 . -1) (undo-tree-id5237 . -1) (undo-tree-id5239 . -1) (undo-tree-id5241 . -1) (undo-tree-id5243 . -1) (undo-tree-id5245 . -1) (undo-tree-id5247 . -1) (undo-tree-id5249 . -1) (undo-tree-id5251 . -1) (undo-tree-id5253 . -1) (undo-tree-id5255 . -1) (undo-tree-id5257 . -1) (undo-tree-id5259 . -1) (undo-tree-id5261 . -1) (undo-tree-id5263 . -1) (undo-tree-id5265 . -1) (undo-tree-id5267 . -1) (undo-tree-id5269 . -1) (undo-tree-id5271 . -1) (undo-tree-id5273 . -1) (undo-tree-id5275 . -1) (undo-tree-id5277 . -1) (undo-tree-id5279 . -1) (undo-tree-id5281 . -1) (undo-tree-id5283 . -1) (undo-tree-id5285 . -1) (undo-tree-id5287 . -1) (undo-tree-id5289 . -1) (undo-tree-id5291 . -1) (undo-tree-id5293 . -1) (undo-tree-id5295 . -1) (undo-tree-id5297 . -1) (undo-tree-id5299 . -1) (undo-tree-id5301 . -1) (undo-tree-id5303 . -1) (undo-tree-id5305 . -1) (undo-tree-id5307 . -1) (undo-tree-id5309 . -1) (undo-tree-id5311 . -1) (undo-tree-id5313 . -1) (undo-tree-id5315 . -1) (undo-tree-id5317 . -1) (undo-tree-id5319 . -1) (undo-tree-id5321 . -1) (undo-tree-id5323 . -1) (undo-tree-id5325 . -1) (undo-tree-id5327 . -1) (undo-tree-id5329 . -1) (undo-tree-id5331 . -1) (undo-tree-id5333 . -1) (undo-tree-id5335 . -1) (undo-tree-id5337 . -1) (undo-tree-id5339 . -1) (undo-tree-id5341 . -1) (undo-tree-id5343 . -1) (undo-tree-id5345 . -1) (undo-tree-id5347 . -1) (undo-tree-id5349 . -1) (undo-tree-id5351 . -1) (undo-tree-id5353 . -1) (undo-tree-id5355 . -1) (undo-tree-id5357 . -1) (undo-tree-id5359 . -1) (undo-tree-id5361 . -1) (undo-tree-id5363 . -1) (undo-tree-id5365 . -1) (undo-tree-id5367 . -1) (undo-tree-id5369 . -1) (undo-tree-id5371 . -1) (undo-tree-id5373 . -1) (undo-tree-id5375 . -1) (undo-tree-id5377 . -1) (undo-tree-id5379 . -1) (#("a" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8613) (undo-tree-id5380 . -1) (undo-tree-id5382 . -1) (undo-tree-id5384 . -1) (undo-tree-id5386 . -1) (undo-tree-id5388 . -1) (undo-tree-id5390 . -1) (undo-tree-id5392 . -1) (undo-tree-id5394 . -1) (undo-tree-id5396 . -1) (undo-tree-id5398 . -1) (undo-tree-id5400 . -1) (undo-tree-id5402 . -1) (undo-tree-id5404 . -1) (undo-tree-id5406 . -1) (undo-tree-id5408 . -1) (undo-tree-id5410 . -1) (undo-tree-id5412 . -1) (undo-tree-id5414 . -1) (undo-tree-id5416 . -1) (undo-tree-id5418 . -1) (undo-tree-id5420 . -1) (undo-tree-id5422 . -1) (undo-tree-id5424 . -1) (undo-tree-id5426 . -1) (undo-tree-id5428 . -1) (undo-tree-id5430 . -1) (undo-tree-id5432 . -1) (undo-tree-id5434 . -1) (undo-tree-id5436 . -1) (undo-tree-id5438 . -1) (undo-tree-id5440 . -1) (undo-tree-id5442 . -1) (undo-tree-id5444 . -1) (undo-tree-id5446 . -1) (undo-tree-id5448 . -1) (undo-tree-id5450 . -1) (undo-tree-id5452 . -1) (undo-tree-id5454 . -1) (undo-tree-id5456 . -1) (undo-tree-id5458 . -1) (undo-tree-id5460 . -1) (undo-tree-id5462 . -1) (undo-tree-id5464 . -1) (undo-tree-id5466 . -1) (undo-tree-id5468 . -1) (undo-tree-id5470 . -1) (undo-tree-id5472 . -1) (undo-tree-id5474 . -1) (undo-tree-id5476 . -1) (undo-tree-id5478 . -1) (undo-tree-id5480 . -1) (undo-tree-id5482 . -1) (undo-tree-id5484 . -1) (undo-tree-id5486 . -1) (undo-tree-id5488 . -1) (undo-tree-id5490 . -1) (undo-tree-id5492 . -1) (undo-tree-id5494 . -1) (undo-tree-id5496 . -1) (undo-tree-id5498 . -1) (undo-tree-id5500 . -1) (undo-tree-id5502 . -1) (undo-tree-id5504 . -1) (undo-tree-id5506 . -1) (undo-tree-id5508 . -1) (undo-tree-id5510 . -1) (undo-tree-id5512 . -1) (undo-tree-id5514 . -1) (undo-tree-id5516 . -1) (undo-tree-id5518 . -1) (undo-tree-id5520 . -1) (undo-tree-id5522 . -1) (undo-tree-id5524 . -1) (undo-tree-id5526 . -1) (undo-tree-id5528 . -1) (undo-tree-id5530 . -1) (undo-tree-id5532 . -1) (undo-tree-id5534 . -1) (undo-tree-id5536 . -1) (undo-tree-id5538 . -1) (undo-tree-id5540 . -1) (undo-tree-id5542 . -1) (undo-tree-id5544 . -1) (undo-tree-id5546 . -1) (undo-tree-id5548 . -1) (undo-tree-id5550 . -1) (undo-tree-id5552 . -1) (undo-tree-id5554 . -1) (undo-tree-id5556 . -1) (undo-tree-id5558 . -1) (undo-tree-id5560 . -1) (undo-tree-id5562 . -1) (undo-tree-id5564 . -1) (undo-tree-id5566 . -1) (undo-tree-id5568 . -1) (undo-tree-id5570 . -1) (undo-tree-id5572 . -1) (undo-tree-id5574 . -1) (undo-tree-id5576 . -1) (undo-tree-id5578 . -1) (undo-tree-id5580 . -1) (undo-tree-id5582 . -1) (undo-tree-id5584 . -1) (undo-tree-id5586 . -1) (undo-tree-id5588 . -1) (undo-tree-id5590 . -1) (undo-tree-id5592 . -1) (undo-tree-id5594 . -1) (undo-tree-id5596 . -1) (undo-tree-id5598 . -1) (undo-tree-id5600 . -1) (undo-tree-id5602 . -1) (undo-tree-id5604 . -1) (undo-tree-id5606 . -1) (undo-tree-id5608 . -1) (undo-tree-id5610 . -1) (undo-tree-id5612 . -1) (undo-tree-id5614 . -1) (undo-tree-id5616 . -1) (undo-tree-id5618 . -1) (#("t" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8614) (undo-tree-id5619 . -1) (undo-tree-id5621 . -1) (undo-tree-id5623 . -1) (undo-tree-id5625 . -1) (undo-tree-id5627 . -1) (undo-tree-id5629 . -1) (undo-tree-id5631 . -1) (undo-tree-id5633 . -1) (undo-tree-id5635 . -1) (undo-tree-id5637 . -1) (undo-tree-id5639 . -1) (undo-tree-id5641 . -1) (undo-tree-id5643 . -1) (undo-tree-id5645 . -1) (undo-tree-id5647 . -1) (undo-tree-id5649 . -1) (undo-tree-id5651 . -1) (undo-tree-id5653 . -1) (undo-tree-id5655 . -1) (undo-tree-id5657 . -1) (undo-tree-id5659 . -1) (undo-tree-id5661 . -1) (undo-tree-id5663 . -1) (undo-tree-id5665 . -1) (undo-tree-id5667 . -1) (undo-tree-id5669 . -1) (undo-tree-id5671 . -1) (undo-tree-id5673 . -1) (undo-tree-id5675 . -1) (undo-tree-id5677 . -1) (undo-tree-id5679 . -1) (undo-tree-id5681 . -1) (undo-tree-id5683 . -1) (undo-tree-id5685 . -1) (undo-tree-id5687 . -1) (undo-tree-id5689 . -1) (undo-tree-id5691 . -1) (undo-tree-id5693 . -1) (undo-tree-id5695 . -1) (undo-tree-id5697 . -1) (undo-tree-id5699 . -1) (undo-tree-id5701 . -1) (undo-tree-id5703 . -1) (undo-tree-id5705 . -1) (undo-tree-id5707 . -1) (undo-tree-id5709 . -1) (undo-tree-id5711 . -1) (undo-tree-id5713 . -1) (undo-tree-id5715 . -1) (undo-tree-id5717 . -1) (undo-tree-id5719 . -1) (undo-tree-id5721 . -1) (undo-tree-id5723 . -1) (undo-tree-id5725 . -1) (undo-tree-id5727 . -1) (undo-tree-id5729 . -1) (undo-tree-id5731 . -1) (undo-tree-id5733 . -1) (undo-tree-id5735 . -1) (undo-tree-id5737 . -1) (undo-tree-id5739 . -1) (undo-tree-id5741 . -1) (undo-tree-id5743 . -1) (undo-tree-id5745 . -1) (undo-tree-id5747 . -1) (undo-tree-id5749 . -1) (undo-tree-id5751 . -1) (undo-tree-id5753 . -1) (undo-tree-id5755 . -1) (undo-tree-id5757 . -1) (undo-tree-id5759 . -1) (undo-tree-id5761 . -1) (undo-tree-id5763 . -1) (undo-tree-id5765 . -1) (undo-tree-id5767 . -1) (undo-tree-id5769 . -1) (undo-tree-id5771 . -1) (undo-tree-id5773 . -1) (undo-tree-id5775 . -1) (undo-tree-id5777 . -1) (undo-tree-id5779 . -1) (undo-tree-id5781 . -1) (undo-tree-id5783 . -1) (undo-tree-id5785 . -1) (undo-tree-id5787 . -1) (undo-tree-id5789 . -1) (undo-tree-id5791 . -1) (undo-tree-id5793 . -1) (undo-tree-id5795 . -1) (undo-tree-id5797 . -1) (undo-tree-id5799 . -1) (undo-tree-id5801 . -1) (undo-tree-id5803 . -1) (undo-tree-id5805 . -1) (undo-tree-id5807 . -1) (undo-tree-id5809 . -1) (undo-tree-id5811 . -1) (undo-tree-id5813 . -1) (undo-tree-id5815 . -1) (undo-tree-id5817 . -1) (undo-tree-id5819 . -1) (undo-tree-id5821 . -1) (undo-tree-id5823 . -1) (#("c" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8615) (undo-tree-id5824 . -1) (undo-tree-id5826 . -1) (undo-tree-id5828 . -1) (undo-tree-id5830 . -1) (undo-tree-id5832 . -1) (undo-tree-id5834 . -1) (undo-tree-id5836 . -1) (undo-tree-id5838 . -1) (undo-tree-id5840 . -1) (undo-tree-id5842 . -1) (undo-tree-id5844 . -1) (undo-tree-id5846 . -1) (undo-tree-id5848 . -1) (undo-tree-id5850 . -1) (undo-tree-id5852 . -1) (undo-tree-id5854 . -1) (undo-tree-id5856 . -1) (undo-tree-id5858 . -1) (undo-tree-id5860 . -1) (undo-tree-id5862 . -1) (undo-tree-id5864 . -1) (undo-tree-id5866 . -1) (undo-tree-id5868 . -1) (undo-tree-id5870 . -1) (undo-tree-id5872 . -1) (undo-tree-id5874 . -1) (undo-tree-id5876 . -1) (undo-tree-id5878 . -1) (undo-tree-id5880 . -1) (undo-tree-id5882 . -1) (undo-tree-id5884 . -1) (undo-tree-id5886 . -1) (undo-tree-id5888 . -1) (undo-tree-id5890 . -1) (undo-tree-id5892 . -1) (undo-tree-id5894 . -1) (undo-tree-id5896 . -1) (undo-tree-id5898 . -1) (undo-tree-id5900 . -1) (undo-tree-id5902 . -1) (undo-tree-id5904 . -1) (undo-tree-id5906 . -1) (undo-tree-id5908 . -1) (undo-tree-id5910 . -1) (undo-tree-id5912 . -1) (undo-tree-id5914 . -1) (undo-tree-id5916 . -1) (undo-tree-id5918 . -1) (undo-tree-id5920 . -1) (undo-tree-id5922 . -1) (undo-tree-id5924 . -1) (undo-tree-id5926 . -1) (undo-tree-id5928 . -1) (undo-tree-id5930 . -1) (undo-tree-id5932 . -1) (undo-tree-id5934 . -1) (undo-tree-id5936 . -1) (undo-tree-id5938 . -1) (undo-tree-id5940 . -1) (undo-tree-id5942 . -1) (undo-tree-id5944 . -1) (undo-tree-id5946 . -1) (undo-tree-id5948 . -1) (undo-tree-id5950 . -1) (undo-tree-id5952 . -1) (undo-tree-id5954 . -1) (undo-tree-id5956 . -1) (undo-tree-id5958 . -1) (undo-tree-id5960 . -1) (undo-tree-id5962 . -1) (undo-tree-id5964 . -1) (undo-tree-id5966 . -1) (undo-tree-id5968 . -1) (undo-tree-id5970 . -1) (undo-tree-id5972 . -1) (undo-tree-id5974 . -1) (undo-tree-id5976 . -1) (undo-tree-id5978 . -1) (undo-tree-id5980 . -1) (undo-tree-id5982 . -1) (undo-tree-id5984 . -1) (undo-tree-id5986 . -1) (undo-tree-id5988 . -1) (undo-tree-id5990 . -1) (undo-tree-id5992 . -1) (undo-tree-id5994 . -1) (#("h" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8616) (undo-tree-id5995 . -1) (undo-tree-id5997 . -1) (undo-tree-id5999 . -1) (undo-tree-id6001 . -1) (undo-tree-id6003 . -1) (undo-tree-id6005 . -1) (undo-tree-id6007 . -1) (undo-tree-id6009 . -1) (undo-tree-id6011 . -1) (undo-tree-id6013 . -1) (undo-tree-id6015 . -1) (undo-tree-id6017 . -1) (undo-tree-id6019 . -1) (undo-tree-id6021 . -1) (undo-tree-id6023 . -1) (undo-tree-id6025 . -1) (undo-tree-id6027 . -1) (undo-tree-id6029 . -1) (undo-tree-id6031 . -1) (undo-tree-id6033 . -1) (undo-tree-id6035 . -1) (undo-tree-id6037 . -1) (undo-tree-id6039 . -1) (undo-tree-id6041 . -1) (undo-tree-id6043 . -1) (undo-tree-id6045 . -1) (undo-tree-id6047 . -1) (undo-tree-id6049 . -1) (undo-tree-id6051 . -1) (undo-tree-id6053 . -1) (undo-tree-id6055 . -1) (undo-tree-id6057 . -1) (undo-tree-id6059 . -1) (undo-tree-id6061 . -1) (undo-tree-id6063 . -1) (undo-tree-id6065 . -1) (undo-tree-id6067 . -1) (undo-tree-id6069 . -1) (undo-tree-id6071 . -1) (undo-tree-id6073 . -1) (undo-tree-id6075 . -1) (undo-tree-id6077 . -1) (undo-tree-id6079 . -1) (undo-tree-id6081 . -1) (undo-tree-id6083 . -1) (undo-tree-id6085 . -1) (undo-tree-id6087 . -1) (undo-tree-id6089 . -1) (undo-tree-id6091 . -1) (undo-tree-id6093 . -1) (undo-tree-id6095 . -1) (undo-tree-id6097 . -1) (undo-tree-id6099 . -1) (undo-tree-id6101 . -1) (undo-tree-id6103 . -1) (undo-tree-id6105 . -1) (undo-tree-id6107 . -1) (undo-tree-id6109 . -1) (undo-tree-id6111 . -1) (undo-tree-id6113 . -1) (undo-tree-id6115 . -1) (undo-tree-id6117 . -1) (undo-tree-id6119 . -1) (undo-tree-id6121 . -1) (undo-tree-id6123 . -1) (undo-tree-id6125 . -1) (undo-tree-id6127 . -1) (undo-tree-id6129 . -1) (undo-tree-id6131 . -1) (#(" " 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -8617) (undo-tree-id6132 . -1) (undo-tree-id6134 . -1) (undo-tree-id6136 . -1) (undo-tree-id6138 . -1) (undo-tree-id6140 . -1) (undo-tree-id6142 . -1) (undo-tree-id6144 . -1) (undo-tree-id6146 . -1) (undo-tree-id6148 . -1) (undo-tree-id6150 . -1) (undo-tree-id6152 . -1) (undo-tree-id6154 . -1) (undo-tree-id6156 . -1) (undo-tree-id6158 . -1) (undo-tree-id6160 . -1) (undo-tree-id6162 . -1) (undo-tree-id6164 . -1) (undo-tree-id6166 . -1) (undo-tree-id6168 . -1) (undo-tree-id6170 . -1) (undo-tree-id6172 . -1) (undo-tree-id6174 . -1) (undo-tree-id6176 . -1) (undo-tree-id6178 . -1) (undo-tree-id6180 . -1) (undo-tree-id6182 . -1) (undo-tree-id6184 . -1) (undo-tree-id6186 . -1) (undo-tree-id6188 . -1) (undo-tree-id6190 . -1) (undo-tree-id6192 . -1) 8618) ((8602 . 8618) (t 25748 4364 923087 683000)) (25748 4364 904398 453000) 0 nil])
([nil nil ((8445 . 8450)) nil (25748 4541 872303 629000) 0 nil])
nil
([nil nil ((#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8450) (undo-tree-id6225 . -1) (#("p" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8451) (undo-tree-id6226 . -1) 8452 (8450 . 8452) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8450) (undo-tree-id6227 . -1) 8451 (8450 . 8451)) nil (25748 4541 872303 128000) 0 nil])
([nil nil ((#("   ((all 'git '
" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 4 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 5 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 5 15 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 15 16 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 8435) (undo-tree-id6222 . -15) (undo-tree-id6223 . 1) (undo-tree-id6224 . -14) 8449) nil (25748 4541 872301 585000) 0 nil])
([nil nil ((#("   (_ this-thing-will-always-happen)
" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 4 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 35 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 35 36 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 36 37 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 8435) (undo-tree-id6219 . -36) (undo-tree-id6220 . 37) (undo-tree-id6221 . -14) 8449) nil (25748 4541 872299 972000) 0 nil])
([nil nil ((#("   ('a singleton-arguments-work-too)
" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 4 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 35 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 35 36 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 36 37 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 8435) (undo-tree-id6216 . -36) (undo-tree-id6217 . 37) (undo-tree-id6218 . -14) 8449) nil (25748 4541 872298 539000) 0 nil])
([nil nil ((#("('a 'b 'c) any-can-be-on))" 0 1 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 9 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 9 10 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 10 24 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 24 25 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 25 26 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 8439) (undo-tree-id6215 . -25)) nil (25748 4541 872297 197000) 0 nil])
([nil nil ((8443 . 8444) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8443) (8443 . 8444) (8439 . 8444)) nil (25748 4541 872296 495000) 0 nil])
([nil nil ((8445 . 8450) (#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8445) (undo-tree-id6214 . -1) 8446 (8445 . 8446) (8439 . 8446) (8437 . 8438) (8437 . 8439) (8434 . 8437) 8424) nil (25748 4541 872295 824000) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8450) (undo-tree-id6211 . 1) (undo-tree-id6212 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8451) (undo-tree-id6213 . -1) 8452) nil (25748 4541 872294 542000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8478 . 8479) (nil fontified nil 8450 . 8479) (8450 . 8479) 8449) nil (25748 4541 872292 989000) 0 nil])
([nil nil ((8480 . 8481) (#(")" 0 1 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8480) (8479 . 8481) (#(")" 0 1 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8479) (8479 . 8480)) nil (25748 4541 872292 297000) 0 nil])
([nil nil ((8492 . 8493) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -8492) (8492 . 8493)) nil (25748 4541 872291 816000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8417 . 8418) (#("
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -8436) (8415 . 8437) 8407) nil (25748 4541 872291 346000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8528 . 8529) (#("
" 0 1 (wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -8560) (8514 . 8561) 8505) nil (25748 4541 872290 724000) 0 nil])
([nil nil ((8439 . 8451) (8456 . 8462) (8459 . 8465) (8503 . 8515) 8416) nil (25748 4541 872289 402000) 0 nil])
([nil nil ((8476 . 8487) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8476) (undo-tree-id6194 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8477) (undo-tree-id6195 . -1) 8478 (8477 . 8478) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8477) (undo-tree-id6196 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8478) (undo-tree-id6197 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8479) (undo-tree-id6198 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8480) (undo-tree-id6199 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8481) (undo-tree-id6200 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8482) (undo-tree-id6201 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8483) (undo-tree-id6202 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8484) (undo-tree-id6203 . -1) 8485 (8474 . 8485) (8456 . 8474) (8435 . 8456) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8435) (undo-tree-id6204 . -1) 8436 (8425 . 8436) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8425) (undo-tree-id6205 . -1) 8426 (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8426) (undo-tree-id6206 . -1) 8427 (8410 . 8427) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8410) (undo-tree-id6207 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8411) (undo-tree-id6208 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8412) (undo-tree-id6209 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8413) (undo-tree-id6210 . -1) 8414 (8397 . 8414) (8396 . 8397) 8376) nil (25748 4541 872284 683000) 0 nil])
([nil nil ((#("parameter/modify-inputs (package-inputs abc)
    (('x 'y) (append somelib) (delete nonelib))
    ((all 'y 'z) (append thispkg))
    (_ (replace xpkg ypkg))" 0 24 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 24 25 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 25 43 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 43 44 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 44 45 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 45 49 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 49 50 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 50 51 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 51 56 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 56 57 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 57 58 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 58 59 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 59 73 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 73 74 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 74 75 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 75 76 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 76 90 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 90 91 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 91 92 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 92 93 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 93 97 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 97 98 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 98 99 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 99 108 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 108 109 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 109 110 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 110 111 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 111 125 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 125 126 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 126 127 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 127 128 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 128 132 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 132 133 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 133 135 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 135 136 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 136 153 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 153 154 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 154 155 (src-block t face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 9682) (undo-tree-id6383 . -154) (undo-tree-id6384 . -5) 9687 (t 25748 4541 883804 734000)) nil (25748 4573 31211 254000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9681) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9682) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) 9683) nil (25748 4573 31207 737000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9960 . 9961) (nil fontified nil 9928 . 9961) (nil fontified nil 9899 . 9928) (nil fontified nil 9871 . 9899) (nil fontified nil 9836 . 9871) (nil fontified nil 9805 . 9836) (nil fontified nil 9773 . 9805) (nil fontified nil 9741 . 9773) (nil fontified nil 9681 . 9741) (9681 . 9961) 9680) nil (25748 4573 31150 639000) 0 nil])
([nil nil ((9702 . 9713) (9681 . 9702) (9744 . 9754) (#("						" 0 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 9744) (9752 . 9754) (9776 . 9784) (#("						" 0 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 9776) (9790 . 9794) (9808 . 9814) (#("						" 0 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 9808) (9822 . 9828) (9839 . 9842) (#("						" 0 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 9839) (9853 . 9862) (9874 . 9875) (#("						" 0 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 9874) (9888 . 9899) (9902 . 9909) (#("						" 0 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 9902) (9916 . 9921) (9931 . 9943) (#("						" 0 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 9931) 9679 (9678 . 9681) 9677) nil (25748 4573 31146 200000) 0 nil])
([nil nil ((9681 . 9702) (9660 . 9681) (9659 . 9660) (t 25748 4573 41288 545000) 9590) nil (25748 4588 378468 369000) 0 nil])
([nil nil ((10092 . 10097) (10091 . 10092) 10090) nil (25748 4588 378463 820000) 0 nil])
([nil nil ((10644 . 10652) (#("_" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10644) (undo-tree-id6408 . -1) 10645 (10643 . 10645) (10642 . 10643) (10637 . 10642) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10637) (undo-tree-id6409 . -1) 10638 (10626 . 10638) (10624 . 10626) (10623 . 10624) (10622 . 10623) (10601 . 10622) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10601) (undo-tree-id6410 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10602) (undo-tree-id6411 . -1) (#("r" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10603) (undo-tree-id6412 . -1) (#("e" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10604) (undo-tree-id6413 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10605) (undo-tree-id6414 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10606) (undo-tree-id6415 . -1) (#("s" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10607) (undo-tree-id6416 . -1) 10608 (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10608) (undo-tree-id6417 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10609) (undo-tree-id6418 . -1) (#("h" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10610) (undo-tree-id6419 . -1) (#("a" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10611) (undo-tree-id6420 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10612) (undo-tree-id6421 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10613) (undo-tree-id6422 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10614) (undo-tree-id6423 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10615) (undo-tree-id6424 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10616) (undo-tree-id6425 . -1) (#("w" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10617) (undo-tree-id6426 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10618) (undo-tree-id6427 . -1) (#("u" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10619) (undo-tree-id6428 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10620) (undo-tree-id6429 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10621) (undo-tree-id6430 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10622) (undo-tree-id6431 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10623) (undo-tree-id6432 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10624) (undo-tree-id6433 . -1) (#("o" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10625) (undo-tree-id6434 . -1) (#("k" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10626) (undo-tree-id6435 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10627) (undo-tree-id6436 . -1) (#("l" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10628) (undo-tree-id6437 . -1) 10629 (10620 . 10629) (10599 . 10620) (10592 . 10599) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10592) (undo-tree-id6438 . -1) 10593 (10589 . 10593) (10568 . 10589) (10547 . 10568) (10526 . 10547) (10525 . 10526) (t 25748 4588 388353 827000) 10357) nil (25748 4725 633238 462000) 0 nil])
([nil nil ((10782 . 10793) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10782) (undo-tree-id6387 . -1) 10783 (10781 . 10783) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10781) (undo-tree-id6388 . -1) 10782 (10780 . 10782) (10779 . 10781) (#(")" 0 1 (src-block t face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10779) (undo-tree-id6389 . -1) 10780 (10779 . 10780) (#(")" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -10779) (10777 . 10780) (#(">" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -10777) (10776 . 10778) (#("=" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10776) (undo-tree-id6390 . -1) 10777 (10775 . 10777) (10774 . 10775) (#("+" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10774) (undo-tree-id6391 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10775) (undo-tree-id6392 . -1) 10776 (10774 . 10776) (10767 . 10775) (10764 . 10767) (#(")" 0 1 (face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10764) (undo-tree-id6393 . -1) 10765 (10763 . 10764) (10742 . 10763) (10741 . 10742) (10735 . 10742) (10732 . 10735) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10732) (undo-tree-id6394 . -1) 10733 (10722 . 10732) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10722) (undo-tree-id6395 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10723) (undo-tree-id6396 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10724) (undo-tree-id6397 . -1) 10725 (10722 . 10725) (10717 . 10723) (10714 . 10717) (10706 . 10712) (10705 . 10707) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -10705) (10700 . 10706) (10695 . 10701) (10692 . 10695) (10677 . 10692) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10677) (undo-tree-id6398 . -1) 10678 (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10678) (undo-tree-id6399 . -1) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10679) (undo-tree-id6400 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10680) (undo-tree-id6401 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10681) (undo-tree-id6402 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10682) (undo-tree-id6403 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10683) (undo-tree-id6404 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10684) (undo-tree-id6405 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10685) (undo-tree-id6406 . -1) 10686 (10675 . 10685) (10672 . 10676) (10669 . 10672) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10669) (undo-tree-id6407 . -1) 10670 (10667 . 10669) (10666 . 10667) (10646 . 10666) (10645 . 10647) (10642 . 10645) 10632) nil (25748 4725 633220 569000) 0 nil])
([nil nil ((10807 . 10822) (10797 . 10807) (10794 . 10798) (#("/" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10794) (undo-tree-id6385 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10795) (undo-tree-id6386 . -1) 10796 (10793 . 10796)) nil (25748 4725 633206 332000) 0 nil])
([nil nil ((10827 . 10828) (#(")" 0 1 (src-block t face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -10827) (10826 . 10828) (#(")" 0 1 (src-block t face (rainbow-delimiters-depth-4-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -10826) (10825 . 10827) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -10825) (10825 . 10826)) nil (25748 4725 633193 698000) 0 nil])
([nil nil ((#("(package-name this-package)" 0 1 (face (rainbow-delimiters-depth-7-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 26 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 26 27 (face (rainbow-delimiters-depth-7-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 10796) (undo-tree-id6450 . -26) (t 25748 4725 645145 16000)) nil (25748 5465 632007 237000) 0 nil])
([nil nil ((10802 . 10806) (10797 . 10802) (10796 . 10798) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -10796) (10796 . 10797)) nil (25748 5465 632006 195000) 0 nil])
([nil nil ((10805 . 10806) (#("9" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10805) (undo-tree-id6449 . -1) 10806) nil (25748 5465 632005 304000) 0 nil])
([nil nil ((10714 . 10716) (10706 . 10714)) nil (25748 5465 632003 901000) 0 nil])
([nil nil ((10774 . 10775) (#(")" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -10774) (10774 . 10775) (10764 . 10773) (#("g" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10764) (undo-tree-id6439 . -1) (#("u" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10765) (undo-tree-id6440 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10766) (undo-tree-id6441 . -1) 10767 (10764 . 10767) (10745 . 10764) (10744 . 10746) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -10744) (10743 . 10745) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10743) (undo-tree-id6442 . -1) 10744 (10737 . 10743) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10737) (undo-tree-id6443 . -1) 10738 (10732 . 10738) (10727 . 10733) (10724 . 10727) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10724) (undo-tree-id6444 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10725) (undo-tree-id6445 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10726) (undo-tree-id6446 . -1) 10727 (#("(" 0 1 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -10727) (undo-tree-id6447 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 10728) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -10728) (undo-tree-id6448 . -1) 10729 (10728 . 10729) (10727 . 10729) (10724 . 10727) 10715) nil (25748 5465 632001 567000) 0 nil])
([nil nil ((10599 . 10613)) nil (25748 5465 631985 346000) 0 nil])
([nil nil ((7919 . 7921) (7909 . 7919) (#(")" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -7908) (7908 . 7909) (#(")" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -7908) (7908 . 7909) (7899 . 7909) (7878 . 7899) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7878) (undo-tree-id6451 . -1) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7879) (undo-tree-id6452 . -1) (#("d" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7880) (undo-tree-id6453 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7881) (undo-tree-id6454 . -1) 7882 (7863 . 7882) (7842 . 7863) (7839 . 7842) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7839) (undo-tree-id6455 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7840) (undo-tree-id6456 . -1) 7841 (7837 . 7841) (#(")" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7837) (undo-tree-id6457 . -1) 7838 (7824 . 7826) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7824) (undo-tree-id6458 . -1) 7825 (#("#" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7825) (undo-tree-id6459 . -1) (#("'" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7826) (undo-tree-id6460 . -1) (#("(" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7827) (undo-tree-id6461 . -1) 7828 (7808 . 7824) (7794 . 7795) (#("~" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7823) (undo-tree-id6462 . -1) 7824 (#("~" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7809) (undo-tree-id6463 . -1) 7810 (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7794) (undo-tree-id6464 . -1) 7795 (7794 . 7795) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7794) (undo-tree-id6465 . -1) (#("=" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7795) (undo-tree-id6466 . -1) 7796 (#("=" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7827) (undo-tree-id6467 . -1) 7828 (7826 . 7828) (7810 . 7811) (7796 . 7797) (#("~" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7795) (undo-tree-id6468 . -1) 7796 (#("#" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7810) (undo-tree-id6469 . -1) 7811 (7809 . 7810) (#(" " 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7809) (undo-tree-id6470 . -1) 7810 (#("=" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7826) (undo-tree-id6471 . -1) 7827 (#("~" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7827) (undo-tree-id6472 . -1) 7828 (7826 . 7828) (7810 . 7811) (7796 . 7797) (#("#" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7809) (undo-tree-id6473 . -1) 7810 (7809 . 7810) (#("#" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7809) (undo-tree-id6474 . -1) (#("~" 0 1 (org-emphasis t font-lock-multiline t face (org-code) wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7810) (undo-tree-id6475 . -1) 7811 (#(")" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7826) (undo-tree-id6476 . -1) (#("~" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7827) (undo-tree-id6477 . -1) 7828 (7826 . 7828) (#(")" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -7826) (7826 . 7827) (7815 . 7824) (7814 . 7816) (#("\"" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -7814) (7814 . 7815) (7812 . 7815) (#("~" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7812) (undo-tree-id6478 . -1) (#("'" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7813) (undo-tree-id6479 . -1) 7814 (7812 . 7814) (#("'" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7812) (undo-tree-id6480 . -1) 7813 (#("(" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -7813) (undo-tree-id6481 . -1) (#(")" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7814) (7811 . 7815) (#("~" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7811) (undo-tree-id6482 . -1) (#("'" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7812) (undo-tree-id6483 . -1) 7813 (#("(" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -7813) (undo-tree-id6484 . -1) (#(")" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7814) (7812 . 7815) (#("v" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7812) (undo-tree-id6485 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7813) (undo-tree-id6486 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7814) (undo-tree-id6487 . -1) 7815 (7814 . 7815) (7810 . 7814) (#("\\" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7810) (undo-tree-id6488 . -1) (#("~" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7811) (undo-tree-id6489 . -1) (#("'" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7812) (undo-tree-id6490 . -1) (#("=" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7813) (undo-tree-id6491 . -1) 7814 (7810 . 7814) (#("~" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7810) (undo-tree-id6492 . -1) 7811 (7808 . 7811) (7800 . 7808) (#("g" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7800) (undo-tree-id6493 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7801) (undo-tree-id6494 . -1) 7802 (7800 . 7802) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7800) (undo-tree-id6495 . -1) 7801 (7795 . 7801) (#("#" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7795) (undo-tree-id6496 . -1) (#(":" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7796) (undo-tree-id6497 . -1) (#("m" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7797) (undo-tree-id6498 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7798) (undo-tree-id6499 . -1) (#("k" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7799) (undo-tree-id6500 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7800) (undo-tree-id6501 . -1) (#("-" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7801) (undo-tree-id6502 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7802) (undo-tree-id6503 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7803) (undo-tree-id6504 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7804) (undo-tree-id6505 . -1) (#("g" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7805) (undo-tree-id6506 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7806) (undo-tree-id6507 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7807) (undo-tree-id6508 . -1) 7808 (7795 . 7808) (7781 . 7795) (7760 . 7781) (7739 . 7760) (t 25748 5465 644963 220000)) nil (25748 5693 237629 326000) 0 nil])
([nil nil ((7526 . 7528) (7609 . 7623) (7619 . 7623) (7656 . 7668) 7526 (t 25748 5693 252739 448000)) nil (25748 5724 332291 901000) 0 nil])
([nil nil ((10550 . 10555) (10529 . 10550) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10529) (undo-tree-id6509 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10530) (undo-tree-id6510 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10531) (undo-tree-id6511 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10532) (undo-tree-id6512 . -1) (#("p" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10533) (undo-tree-id6513 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10534) (undo-tree-id6514 . -1) (#("c" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10535) (undo-tree-id6515 . -1) (#("k" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10536) (undo-tree-id6516 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10537) (undo-tree-id6517 . -1) (#("g" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10538) (undo-tree-id6518 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10539) (undo-tree-id6519 . -1) 10540 (10528 . 10540) (10510 . 10528) (10489 . 10510) (10468 . 10489) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10468) (undo-tree-id6520 . -1) 10469 (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10469) (undo-tree-id6521 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10470) (undo-tree-id6522 . -1) 10471 (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10471) (undo-tree-id6523 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10472) (undo-tree-id6524 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10473) (undo-tree-id6525 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10474) (undo-tree-id6526 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10475) (undo-tree-id6527 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10476) (undo-tree-id6528 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10477) (undo-tree-id6529 . -1) (#("q" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10478) (undo-tree-id6530 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10479) (undo-tree-id6531 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10480) (undo-tree-id6532 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10481) (undo-tree-id6533 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10482) (undo-tree-id6534 . -1) (#("d" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10483) (undo-tree-id6535 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10484) (undo-tree-id6536 . -1) (#("f" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10485) (undo-tree-id6537 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10486) (undo-tree-id6538 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10487) (undo-tree-id6539 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10488) (undo-tree-id6540 . -1) (#("b" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10489) (undo-tree-id6541 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10490) (undo-tree-id6542 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10491) (undo-tree-id6543 . -1) 10492 (10476 . 10492) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10476) (undo-tree-id6544 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10477) (undo-tree-id6545 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10478) (undo-tree-id6546 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10479) (undo-tree-id6547 . -1) 10480 (10479 . 10480) (10458 . 10479) (10437 . 10458) (10416 . 10437) (#("," 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10416) (undo-tree-id6548 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10417) (undo-tree-id6549 . -1) 10418 (10409 . 10418) (10399 . 10409) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10399) (undo-tree-id6550 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10400) (undo-tree-id6551 . -1) 10401 (10395 . 10401) (10374 . 10395) (10372 . 10374) (10351 . 10372) (#("w" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10351) (undo-tree-id6552 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10352) (undo-tree-id6553 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10353) (undo-tree-id6554 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10354) (undo-tree-id6555 . -1) (#("p" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10355) (undo-tree-id6556 . -1) (#("p" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10356) (undo-tree-id6557 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10357) (undo-tree-id6558 . -1) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10358) (undo-tree-id6559 . -1) (#("d" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10359) (undo-tree-id6560 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10360) (undo-tree-id6561 . -1) (#("~" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10361) (undo-tree-id6562 . -1) 10362 (10360 . 10362) (10352 . 10360) (10331 . 10352) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -10331) (undo-tree-id6563 . -1) 10332 (10319 . 10332) (10311 . 10319) (t 25748 5724 346663 386000)) nil (25748 5806 938196 368000) 0 nil])
([nil nil ((11356 . 11370) (11355 . 11356) (t 25748 5806 948215 243000) 11354) nil (25748 5861 644197 570000) 0 nil])
([nil nil ((#("Future version
" 0 14 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 14 15 (src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 11356) (undo-tree-id6564 . -14) (undo-tree-id6565 . 1) (undo-tree-id6566 . -13) (undo-tree-id6567 . -12) (undo-tree-id6568 . -13) (undo-tree-id6569 . -13) (undo-tree-id6570 . -13) (undo-tree-id6571 . -13) (undo-tree-id6572 . -13) (undo-tree-id6573 . -13) (undo-tree-id6574 . -13) (undo-tree-id6575 . -13) (undo-tree-id6576 . -13) (undo-tree-id6577 . -13) (undo-tree-id6578 . -13) (undo-tree-id6579 . -13) (undo-tree-id6580 . -13) (undo-tree-id6581 . -13) (undo-tree-id6582 . -13) (undo-tree-id6583 . -13) (undo-tree-id6584 . -13) (undo-tree-id6585 . -13) (undo-tree-id6586 . -13) (undo-tree-id6587 . -13) (undo-tree-id6588 . -13) (undo-tree-id6589 . -13) (undo-tree-id6590 . -13) (undo-tree-id6591 . -13) (undo-tree-id6592 . -13) (undo-tree-id6593 . -13) (undo-tree-id6594 . -13) (undo-tree-id6595 . -13) (undo-tree-id6596 . -13) (undo-tree-id6597 . -13) (undo-tree-id6598 . -14) (undo-tree-id6599 . -14) (undo-tree-id6600 . -14) (undo-tree-id6601 . -14) (undo-tree-id6602 . -14) (undo-tree-id6603 . -14) (undo-tree-id6604 . -14) (undo-tree-id6605 . -14) (undo-tree-id6606 . -14) (undo-tree-id6607 . -14) (undo-tree-id6608 . -14) (undo-tree-id6609 . -14) (undo-tree-id6610 . -14) (undo-tree-id6611 . -14) (undo-tree-id6612 . -14) (undo-tree-id6613 . -14) (undo-tree-id6614 . -14) (undo-tree-id6615 . -14) (undo-tree-id6616 . -14) (undo-tree-id6617 . -14) (undo-tree-id6618 . -14) (undo-tree-id6619 . -14) (undo-tree-id6620 . -14) (undo-tree-id6621 . -14) (undo-tree-id6622 . -14) (undo-tree-id6623 . -14) (undo-tree-id6624 . -14) (undo-tree-id6625 . -14) (undo-tree-id6626 . -14) (undo-tree-id6627 . -14) (undo-tree-id6628 . -13) (undo-tree-id6629 . -13) (undo-tree-id6630 . -13) (undo-tree-id6631 . -13) (undo-tree-id6632 . -13) (undo-tree-id6633 . -13) (undo-tree-id6634 . -13) (undo-tree-id6635 . -13) (undo-tree-id6636 . -13) (undo-tree-id6637 . -13) (undo-tree-id6638 . -13) (undo-tree-id6639 . -13) (undo-tree-id6640 . -13) (undo-tree-id6641 . -13) (undo-tree-id6642 . -13) (undo-tree-id6643 . -13) (undo-tree-id6644 . -13) (undo-tree-id6645 . -13) (undo-tree-id6646 . -13) (undo-tree-id6647 . -13) (undo-tree-id6648 . -13) (undo-tree-id6649 . -13) (undo-tree-id6650 . -13) (undo-tree-id6651 . -13) (undo-tree-id6652 . -13) (undo-tree-id6653 . -13) (undo-tree-id6654 . -13) (undo-tree-id6655 . -13) (undo-tree-id6656 . -13) (undo-tree-id6657 . -13) (undo-tree-id6658 . -13) (undo-tree-id6659 . -13) (undo-tree-id6660 . -13) (undo-tree-id6661 . -13) (undo-tree-id6662 . -13) (undo-tree-id6663 . -13) (undo-tree-id6664 . -13) (undo-tree-id6665 . -13) (undo-tree-id6666 . -13) (undo-tree-id6667 . -13) (undo-tree-id6668 . -13) (undo-tree-id6669 . -13) (undo-tree-id6670 . -13) (undo-tree-id6671 . -13) (undo-tree-id6672 . -13) (undo-tree-id6673 . -13) (undo-tree-id6674 . -13) (undo-tree-id6675 . -13) (undo-tree-id6676 . -13) (undo-tree-id6677 . -13) (undo-tree-id6678 . -13) (undo-tree-id6679 . -13) (undo-tree-id6680 . -13) (undo-tree-id6681 . -13) (undo-tree-id6682 . -13) (undo-tree-id6683 . -13) (undo-tree-id6684 . -13) (undo-tree-id6685 . -13) (undo-tree-id6686 . -13) (undo-tree-id6687 . -13) (undo-tree-id6688 . -13) (undo-tree-id6689 . -13) (undo-tree-id6690 . -13) (undo-tree-id6691 . -13) (undo-tree-id6692 . -13) (undo-tree-id6693 . -13) (undo-tree-id6694 . -13) (undo-tree-id6695 . -13) (undo-tree-id6696 . -13) (undo-tree-id6697 . -13) (undo-tree-id6698 . -13) (undo-tree-id6699 . -13) (undo-tree-id6700 . -13) (undo-tree-id6701 . -13) (undo-tree-id6702 . -13) (undo-tree-id6703 . -13) (undo-tree-id6704 . -13) (undo-tree-id6705 . -13) (undo-tree-id6706 . -15) 11369) nil (25748 5861 644193 683000) 0 nil])
([nil nil ((11441 . 11443) (11424 . 11441) (11414 . 11415) (11406 . 11423) (11404 . 11406) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -11404) (undo-tree-id6707 . -1) (#("n" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -11405) (undo-tree-id6708 . -1) (#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -11406) (undo-tree-id6709 . -1) (#("i" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -11407) (undo-tree-id6710 . -1) (#("t" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -11408) (undo-tree-id6711 . -1) 11409 (11398 . 11409) (11377 . 11398) (11356 . 11377) (11355 . 11356) (t 25748 5861 655896 792000) 11354) nil (25748 5890 356381 504000) 0 nil])
([nil nil ((11072 . 11073) (11062 . 11063) (t 25748 5890 369758 913000)) nil (25748 5897 284925 165000) 0 nil])
([nil nil ((7563 . 7572) (7542 . 7563) (#("p" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7542) (undo-tree-id6712 . -1) 7543 (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7543) (undo-tree-id6713 . -1) (#("c" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7544) (undo-tree-id6714 . -1) (#("k" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7545) (undo-tree-id6715 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7546) (undo-tree-id6716 . -1) (#("g" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7547) (undo-tree-id6717 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7548) (undo-tree-id6718 . -1) 7549 (7542 . 7549) (7521 . 7542) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7521) (undo-tree-id6719 . -1) 7522 (7507 . 7522) (#("I" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7507) (undo-tree-id6720 . -1) 7508 (7507 . 7508) (7506 . 7507) (t 25748 5897 296552 748000) 7423) nil (25748 6022 940832 209000) 0 nil])
([nil nil ((8607 . 8616) (t 25748 6022 952167 965000)) nil (25748 6071 660597 84000) 0 nil])
([nil nil ((8725 . 8731) (8699 . 8702) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8699) (undo-tree-id6721 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8700) (undo-tree-id6722 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -8701) (undo-tree-id6723 . -1) 8702 (t 25748 6071 673040 698000)) nil (25748 6081 960467 860000) 0 nil])
([nil nil ((9969 . 9977) (9958 . 9961) (#("our" 0 3 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 9958) (undo-tree-id6738 . -2) (t 25748 6081 973224 393000)) nil (25748 6114 798747 532000) 0 nil])
([nil nil ((9981 . 9995) (9978 . 9979) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9978) (undo-tree-id6724 . -1) 9979 (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9978) (undo-tree-id6725 . -1) (#("w" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9979) (undo-tree-id6726 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9980) (undo-tree-id6727 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9981) (undo-tree-id6728 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9982) (undo-tree-id6729 . -1) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9983) (undo-tree-id6730 . -1) (#("v" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9984) (undo-tree-id6731 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9985) (undo-tree-id6732 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9986) (undo-tree-id6733 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9987) (undo-tree-id6734 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9988) (undo-tree-id6735 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9989) (undo-tree-id6736 . -1) (#("d" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -9990) (undo-tree-id6737 . -1) 9991) nil (25748 6114 798743 234000) 0 nil])
([nil nil ((7528 . 7531) (7507 . 7528) (#("W" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7507) (undo-tree-id6739 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7508) (undo-tree-id6740 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7509) (undo-tree-id6741 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7510) (undo-tree-id6742 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7511) (undo-tree-id6743 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7512) (undo-tree-id6744 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7513) (undo-tree-id6745 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7514) (undo-tree-id6746 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7515) (undo-tree-id6747 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7516) (undo-tree-id6748 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7517) (undo-tree-id6749 . -1) (#("n" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7518) (undo-tree-id6750 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7519) (undo-tree-id6751 . -1) (#("t" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7520) (undo-tree-id6752 . -1) (#("h" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7521) (undo-tree-id6753 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7522) (undo-tree-id6754 . -1) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -7523) (undo-tree-id6755 . -1) 7524 (t 25748 6114 813808 260000)) nil (25748 6156 309207 308000) 0 nil])
([nil nil ((9984 . 9990) (t 25748 6156 321209 3000)) nil (25748 6170 131041 821000) 0 nil])
([nil nil ((#("," 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -11857) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) 11858 (t 25748 6170 141452 477000)) nil (25748 6210 67376 942000) 0 nil])
([nil nil ((11857 . 11858)) nil (25748 6210 67325 284000) 0 nil])
([nil nil ((64 . 65) (t 25748 6210 78820 176000) 43) nil (25748 17039 190655 532000) 0 nil])
([nil nil ((nil rear-nonsticky nil 176 . 177) (nil fontified nil 176 . 177) (nil fontified nil 116 . 176) (nil fontified nil 89 . 116) (nil fontified nil 65 . 89) (65 . 177)) nil (25748 17039 190655 161000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t wrap-prefix "" line-prefix "")) . 176) (undo-tree-id33 . -1)) nil (25748 17039 190654 229000) 0 nil])
([nil nil ((#("#+AUTHOR:Sarthak Shah
" 0 9 (invisible t wrap-prefix "" line-prefix "" font-lock-fontified t fontified t) 9 21 (face org-document-info wrap-prefix "" line-prefix "" font-lock-fontified t fontified t) 21 22 (face org-document-info font-lock-fontified t wrap-prefix "" line-prefix "" fontified t)) . 43) (undo-tree-id0 . -22) (undo-tree-id1 . -22) (undo-tree-id2 . -21) (undo-tree-id3 . -22) (undo-tree-id4 . -22) (undo-tree-id5 . -22) (undo-tree-id6 . -22) (undo-tree-id7 . -22) (undo-tree-id8 . -22) (undo-tree-id9 . -22) (undo-tree-id10 . -22) (undo-tree-id11 . -22) (undo-tree-id12 . -22) (undo-tree-id13 . -22) (undo-tree-id14 . -22) (undo-tree-id15 . -22) (undo-tree-id16 . -22) (undo-tree-id17 . -22) (undo-tree-id18 . -22) (undo-tree-id19 . -22) (undo-tree-id20 . -22) (undo-tree-id21 . -22) (undo-tree-id22 . -22) (undo-tree-id23 . -22) (undo-tree-id24 . -22) (undo-tree-id25 . -22) (undo-tree-id26 . -22) (undo-tree-id27 . -22) (undo-tree-id28 . -22) (undo-tree-id29 . -22) (undo-tree-id30 . -22) (undo-tree-id31 . -22) (undo-tree-id32 . -22)) nil (25748 17039 190650 111000) 0 nil])
([nil nil ((62 . 64) (#("2" 0 1 (face org-document-info wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -62) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 63 (59 . 61) (#("0" 0 1 (face org-document-info wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -59) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("9" 0 1 (face org-document-info wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -60) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) 61 (57 . 58) (#("5" 0 1 (wrap-prefix "" line-prefix "" face org-document-info font-lock-fontified t fontified t)) . -57) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 58 (t 25748 17039 203720 722000)) nil (25748 17172 489503 916000) 0 nil])
([nil nil ((2643 . 2645) (2678 . 2681) (#("	" 0 1 (face (org-block) font-lock-multiline t wrap-prefix #("           " 0 2 (face org-indent) 2 11 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2678) (2686 . 2687) (2711 . 2714) (#("		" 0 2 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2711) (2714 . 2717) (2734 . 2740) (#("		" 0 2 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2734) (2766 . 2770) (#("		" 0 2 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2766) (2769 . 2771) (2781 . 2783) (#("		" 0 2 (face (org-block) font-lock-multiline t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2781) (2786 . 2790) (2814 . 2822) (#("			" 0 3 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2814) (2830 . 2834) (#("				" 0 4 (face (org-block) font-lock-multiline t wrap-prefix #("           " 0 2 (face org-indent) 2 11 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2830) (2835 . 2841) (2854 . 2855) (#("				" 0 4 (face (org-block) font-lock-multiline t wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2854) (2861 . 2870) (2874 . 2884) (#("				" 0 4 (face (org-block) font-lock-multiline t wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2874) (2893 . 2901) (#("				" 0 4 (face (org-block) font-lock-multiline t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2893) (2902 . 2904) (2932 . 2937) (#("				" 0 4 (face (org-block) font-lock-multiline t wrap-prefix #("                 " 0 2 (face org-indent) 2 17 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2932) (2943 . 2948) (2949 . 2951) (#("					" 0 5 (face (org-block) font-lock-multiline t wrap-prefix #("              " 0 2 (face org-indent) 2 14 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2949) (2956 . 2966) (2972 . 2974) (3044 . 3052) (#("			" 0 3 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3044) (3065 . 3073) (#("			" 0 3 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3065) (3102 . 3106) (#("		" 0 2 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3102) (3105 . 3107) (3165 . 3174) (#("						" 0 6 (face (org-block) font-lock-multiline t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3165) (3173 . 3178) (3197 . 3209) (#("						" 0 6 (face (org-block) font-lock-multiline t wrap-prefix #("                      " 0 2 (face org-indent) 2 22 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3197) (3211 . 3213) (3229 . 3233) (#("						" 0 6 (face (org-block) font-lock-multiline t wrap-prefix #("                      " 0 2 (face org-indent) 2 22 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3229) (3243 . 3253) (3260 . 3267) (#("						" 0 6 (face (org-block) font-lock-multiline t wrap-prefix #("                      " 0 2 (face org-indent) 2 22 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3260) (3274 . 3281) (3295 . 3305) (#("						" 0 6 (face (org-block) font-lock-multiline t wrap-prefix #("                      " 0 2 (face org-indent) 2 22 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3295) (3309 . 3313) (3323 . 3324) (#("						" 0 6 (face (org-block) font-lock-multiline t wrap-prefix #("                      " 0 2 (face org-indent) 2 22 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3323) (3337 . 3350) (3352 . 3356) (#("						" 0 6 (face (org-block) font-lock-multiline t wrap-prefix #("                      " 0 2 (face org-indent) 2 22 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3352) (3366 . 3376) (#("		" 0 2 (face (org-block) font-lock-multiline t wrap-prefix #("       " 0 2 (face org-indent) 2 7 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3386) (3389 . 3395) (3408 . 3410) (#("			" 0 3 (face (org-block) font-lock-multiline t wrap-prefix #("              " 0 2 (face org-indent) 2 14 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3408) (3417 . 3423) (3436 . 3446) (#("				" 0 4 (face (org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3436) (3477 . 3487) (#("				" 0 4 (face (org-block) font-lock-multiline t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3477) (3492 . 3500) (#("			" 0 3 (face (org-block) font-lock-multiline t wrap-prefix #("              " 0 2 (face org-indent) 2 14 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3492) 2641 (#(" " 0 1 (face (org-block) font-lock-multiline t wrap-prefix #("              " 0 2 (face org-indent) 2 14 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2971) (undo-tree-id79 . -1) (2972 . 2973) (t 25748 17172 502812 283000)) nil (25750 62631 868332 870000) 0 nil])
([nil current ((#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3592) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -2) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -2) (undo-tree-id78 . -1) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3573) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3528) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3497) (#("  " 0 1 (face (org-block) font-lock-multiline t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil) 1 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3473) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                        " 0 2 (face org-indent) 2 24 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3433) (#("  " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                        " 0 2 (face org-indent) 2 24 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (face (org-block) font-lock-multiline t wrap-prefix #("                        " 0 2 (face org-indent) 2 24 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 3398) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                        " 0 2 (face org-indent) 2 24 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3364) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                        " 0 2 (face org-indent) 2 24 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3323) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                        " 0 2 (face org-indent) 2 24 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3286) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                        " 0 2 (face org-indent) 2 24 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3248) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                  " 0 2 (face org-indent) 2 18 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3210) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3145) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3105) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3081) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 3009) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2981) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2960) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                 " 0 2 (face org-indent) 2 17 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2917) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2894) (#("  " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (face (org-block) font-lock-multiline t wrap-prefix #("               " 0 2 (face org-indent) 2 15 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified nil)) . 2870) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2842) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2823) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("           " 0 2 (face org-indent) 2 11 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2788) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2771) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2737) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("         " 0 2 (face org-indent) 2 9 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2712) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("             " 0 2 (face org-indent) 2 13 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2678) (#("  " 0 2 (face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t)) . 2641) 3649) nil (25750 62631 868313 643000) 0 nil])
nil
